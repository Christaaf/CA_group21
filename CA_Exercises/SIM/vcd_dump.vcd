$date
    Apr 30, 2024  14:24:02
$end
$version
    TOOL:	xmsim(64)	23.03-s002
$end
$timescale
    10 ps
$end

$scope module cpu_tb $end
$var reg       1 !    clk $end
$var reg       1 "    arst_n $end
$var reg      64 #    addr_ext [63:0] $end
$var reg       1 $    wen_ext $end
$var reg       1 %    ren_ext $end
$var reg      32 &    wdata_ext [31:0] $end
$var reg      64 '    addr_ext_2 [63:0] $end
$var reg       1 (    wen_ext_2 $end
$var reg       1 )    ren_ext_2 $end
$var reg      64 *    wdata_ext_2 [63:0] $end
$var wire     32 +    rdata_ext [31:0] $end
$var wire     64 ,    rdata_ext_2 [63:0] $end
$var reg       1 -    enable $end
$var integer  32 .    half_clock_period_ns $end
$var integer  32 /    imem_cnt $end
$var integer  32 0    dmem_cnt $end
$var parameter 32 1    IMEM_UNIT $end
$var parameter 32 2    DMEM_UNIT $end
$var reg      32 3    instr_mem[0] [31:0] $end
$var reg      32 4    instr_mem[1] [31:0] $end
$var reg      32 5    instr_mem[2] [31:0] $end
$var reg      32 6    instr_mem[3] [31:0] $end
$var reg      32 7    instr_mem[4] [31:0] $end
$var reg      32 8    instr_mem[5] [31:0] $end
$var reg      32 9    instr_mem[6] [31:0] $end
$var reg      32 :    instr_mem[7] [31:0] $end
$var reg      32 ;    instr_mem[8] [31:0] $end
$var reg      32 <    instr_mem[9] [31:0] $end
$var reg      32 =    instr_mem[10] [31:0] $end
$var reg      32 >    instr_mem[11] [31:0] $end
$var reg      32 ?    instr_mem[12] [31:0] $end
$var reg      32 @    instr_mem[13] [31:0] $end
$var reg      32 A    instr_mem[14] [31:0] $end
$var reg      32 B    instr_mem[15] [31:0] $end
$var reg      32 C    instr_mem[16] [31:0] $end
$var reg      32 D    instr_mem[17] [31:0] $end
$var reg      32 E    instr_mem[18] [31:0] $end
$var reg      32 F    instr_mem[19] [31:0] $end
$var reg      32 G    instr_mem[20] [31:0] $end
$var reg      32 H    instr_mem[21] [31:0] $end
$var reg      32 I    instr_mem[22] [31:0] $end
$var reg      32 J    instr_mem[23] [31:0] $end
$var reg      32 K    instr_mem[24] [31:0] $end
$var reg      32 L    instr_mem[25] [31:0] $end
$var reg      32 M    instr_mem[26] [31:0] $end
$var reg      32 N    instr_mem[27] [31:0] $end
$var reg      32 O    instr_mem[28] [31:0] $end
$var reg      32 P    instr_mem[29] [31:0] $end
$var reg      32 Q    instr_mem[30] [31:0] $end
$var reg      32 R    instr_mem[31] [31:0] $end
$var reg      32 S    instr_mem[32] [31:0] $end
$var reg      32 T    instr_mem[33] [31:0] $end
$var reg      32 U    instr_mem[34] [31:0] $end
$var reg      32 V    instr_mem[35] [31:0] $end
$var reg      32 W    instr_mem[36] [31:0] $end
$var reg      32 X    instr_mem[37] [31:0] $end
$var reg      32 Y    instr_mem[38] [31:0] $end
$var reg      32 Z    instr_mem[39] [31:0] $end
$var reg      32 [    instr_mem[40] [31:0] $end
$var reg      32 \    instr_mem[41] [31:0] $end
$var reg      32 ]    instr_mem[42] [31:0] $end
$var reg      32 ^    instr_mem[43] [31:0] $end
$var reg      32 _    instr_mem[44] [31:0] $end
$var reg      32 `    instr_mem[45] [31:0] $end
$var reg      32 a    instr_mem[46] [31:0] $end
$var reg      32 b    instr_mem[47] [31:0] $end
$var reg      32 c    instr_mem[48] [31:0] $end
$var reg      32 d    instr_mem[49] [31:0] $end
$var reg      32 e    instr_mem[50] [31:0] $end
$var reg      32 f    instr_mem[51] [31:0] $end
$var reg      32 g    instr_mem[52] [31:0] $end
$var reg      32 h    instr_mem[53] [31:0] $end
$var reg      32 i    instr_mem[54] [31:0] $end
$var reg      32 j    instr_mem[55] [31:0] $end
$var reg      32 k    instr_mem[56] [31:0] $end
$var reg      32 l    instr_mem[57] [31:0] $end
$var reg      32 m    instr_mem[58] [31:0] $end
$var reg      32 n    instr_mem[59] [31:0] $end
$var reg      32 o    instr_mem[60] [31:0] $end
$var reg      32 p    instr_mem[61] [31:0] $end
$var reg      32 q    instr_mem[62] [31:0] $end
$var reg      32 r    instr_mem[63] [31:0] $end
$var reg      32 s    instr_mem[64] [31:0] $end
$var reg      32 t    instr_mem[65] [31:0] $end
$var reg      32 u    instr_mem[66] [31:0] $end
$var reg      32 v    instr_mem[67] [31:0] $end
$var reg      32 w    instr_mem[68] [31:0] $end
$var reg      32 x    instr_mem[69] [31:0] $end
$var reg      32 y    instr_mem[70] [31:0] $end
$var reg      32 z    instr_mem[71] [31:0] $end
$var reg      32 {    instr_mem[72] [31:0] $end
$var reg      32 |    instr_mem[73] [31:0] $end
$var reg      32 }    instr_mem[74] [31:0] $end
$var reg      32 ~    instr_mem[75] [31:0] $end
$var reg      32 !!   instr_mem[76] [31:0] $end
$var reg      32 "!   instr_mem[77] [31:0] $end
$var reg      32 #!   instr_mem[78] [31:0] $end
$var reg      32 $!   instr_mem[79] [31:0] $end
$var reg      32 %!   instr_mem[80] [31:0] $end
$var reg      32 &!   instr_mem[81] [31:0] $end
$var reg      32 '!   instr_mem[82] [31:0] $end
$var reg      32 (!   instr_mem[83] [31:0] $end
$var reg      32 )!   instr_mem[84] [31:0] $end
$var reg      32 *!   instr_mem[85] [31:0] $end
$var reg      32 +!   instr_mem[86] [31:0] $end
$var reg      32 ,!   instr_mem[87] [31:0] $end
$var reg      32 -!   instr_mem[88] [31:0] $end
$var reg      32 .!   instr_mem[89] [31:0] $end
$var reg      32 /!   instr_mem[90] [31:0] $end
$var reg      32 0!   instr_mem[91] [31:0] $end
$var reg      32 1!   instr_mem[92] [31:0] $end
$var reg      32 2!   instr_mem[93] [31:0] $end
$var reg      32 3!   instr_mem[94] [31:0] $end
$var reg      32 4!   instr_mem[95] [31:0] $end
$var reg      32 5!   instr_mem[96] [31:0] $end
$var reg      32 6!   instr_mem[97] [31:0] $end
$var reg      32 7!   instr_mem[98] [31:0] $end
$var reg      32 8!   instr_mem[99] [31:0] $end
$var reg      32 9!   instr_mem[100] [31:0] $end
$var reg      32 :!   instr_mem[101] [31:0] $end
$var reg      32 ;!   instr_mem[102] [31:0] $end
$var reg      32 <!   instr_mem[103] [31:0] $end
$var reg      32 =!   instr_mem[104] [31:0] $end
$var reg      32 >!   instr_mem[105] [31:0] $end
$var reg      32 ?!   instr_mem[106] [31:0] $end
$var reg      32 @!   instr_mem[107] [31:0] $end
$var reg      32 A!   instr_mem[108] [31:0] $end
$var reg      32 B!   instr_mem[109] [31:0] $end
$var reg      32 C!   instr_mem[110] [31:0] $end
$var reg      32 D!   instr_mem[111] [31:0] $end
$var reg      32 E!   instr_mem[112] [31:0] $end
$var reg      32 F!   instr_mem[113] [31:0] $end
$var reg      32 G!   instr_mem[114] [31:0] $end
$var reg      32 H!   instr_mem[115] [31:0] $end
$var reg      32 I!   instr_mem[116] [31:0] $end
$var reg      32 J!   instr_mem[117] [31:0] $end
$var reg      32 K!   instr_mem[118] [31:0] $end
$var reg      32 L!   instr_mem[119] [31:0] $end
$var reg      32 M!   instr_mem[120] [31:0] $end
$var reg      32 N!   instr_mem[121] [31:0] $end
$var reg      32 O!   instr_mem[122] [31:0] $end
$var reg      32 P!   instr_mem[123] [31:0] $end
$var reg      32 Q!   instr_mem[124] [31:0] $end
$var reg      32 R!   instr_mem[125] [31:0] $end
$var reg      32 S!   instr_mem[126] [31:0] $end
$var reg      32 T!   instr_mem[127] [31:0] $end
$var reg      64 U!   data_mem[0] [63:0] $end
$var reg      64 V!   data_mem[1] [63:0] $end
$var reg      64 W!   data_mem[2] [63:0] $end
$var reg      64 X!   data_mem[3] [63:0] $end
$var reg      64 Y!   data_mem[4] [63:0] $end
$var reg      64 Z!   data_mem[5] [63:0] $end
$var reg      64 [!   data_mem[6] [63:0] $end
$var reg      64 \!   data_mem[7] [63:0] $end
$var reg      64 ]!   data_mem[8] [63:0] $end
$var reg      64 ^!   data_mem[9] [63:0] $end
$var reg      64 _!   data_mem[10] [63:0] $end
$var reg      64 `!   data_mem[11] [63:0] $end
$var reg      64 a!   data_mem[12] [63:0] $end
$var reg      64 b!   data_mem[13] [63:0] $end
$var reg      64 c!   data_mem[14] [63:0] $end
$var reg      64 d!   data_mem[15] [63:0] $end
$var reg      64 e!   data_mem[16] [63:0] $end
$var reg      64 f!   data_mem[17] [63:0] $end
$var reg      64 g!   data_mem[18] [63:0] $end
$var reg      64 h!   data_mem[19] [63:0] $end
$var reg      64 i!   data_mem[20] [63:0] $end
$var reg      64 j!   data_mem[21] [63:0] $end
$var reg      64 k!   data_mem[22] [63:0] $end
$var reg      64 l!   data_mem[23] [63:0] $end
$var reg      64 m!   data_mem[24] [63:0] $end
$var reg      64 n!   data_mem[25] [63:0] $end
$var reg      64 o!   data_mem[26] [63:0] $end
$var reg      64 p!   data_mem[27] [63:0] $end
$var reg      64 q!   data_mem[28] [63:0] $end
$var reg      64 r!   data_mem[29] [63:0] $end
$var reg      64 s!   data_mem[30] [63:0] $end
$var reg      64 t!   data_mem[31] [63:0] $end
$var reg      64 u!   data_mem[32] [63:0] $end
$var reg      64 v!   data_mem[33] [63:0] $end
$var reg      64 w!   data_mem[34] [63:0] $end
$var reg      64 x!   data_mem[35] [63:0] $end
$var reg      64 y!   data_mem[36] [63:0] $end
$var reg      64 z!   data_mem[37] [63:0] $end
$var reg      64 {!   data_mem[38] [63:0] $end
$var reg      64 |!   data_mem[39] [63:0] $end
$var reg      64 }!   data_mem[40] [63:0] $end
$var reg      64 ~!   data_mem[41] [63:0] $end
$var reg      64 !"   data_mem[42] [63:0] $end
$var reg      64 ""   data_mem[43] [63:0] $end
$var reg      64 #"   data_mem[44] [63:0] $end
$var reg      64 $"   data_mem[45] [63:0] $end
$var reg      64 %"   data_mem[46] [63:0] $end
$var reg      64 &"   data_mem[47] [63:0] $end
$var reg      64 '"   data_mem[48] [63:0] $end
$var reg      64 ("   data_mem[49] [63:0] $end
$var reg      64 )"   data_mem[50] [63:0] $end
$var reg      64 *"   data_mem[51] [63:0] $end
$var reg      64 +"   data_mem[52] [63:0] $end
$var reg      64 ,"   data_mem[53] [63:0] $end
$var reg      64 -"   data_mem[54] [63:0] $end
$var reg      64 ."   data_mem[55] [63:0] $end
$var reg      64 /"   data_mem[56] [63:0] $end
$var reg      64 0"   data_mem[57] [63:0] $end
$var reg      64 1"   data_mem[58] [63:0] $end
$var reg      64 2"   data_mem[59] [63:0] $end
$var reg      64 3"   data_mem[60] [63:0] $end
$var reg      64 4"   data_mem[61] [63:0] $end
$var reg      64 5"   data_mem[62] [63:0] $end
$var reg      64 6"   data_mem[63] [63:0] $end
$var reg      64 7"   data_mem[64] [63:0] $end
$var reg      64 8"   data_mem[65] [63:0] $end
$var reg      64 9"   data_mem[66] [63:0] $end
$var reg      64 :"   data_mem[67] [63:0] $end
$var reg      64 ;"   data_mem[68] [63:0] $end
$var reg      64 <"   data_mem[69] [63:0] $end
$var reg      64 ="   data_mem[70] [63:0] $end
$var reg      64 >"   data_mem[71] [63:0] $end
$var reg      64 ?"   data_mem[72] [63:0] $end
$var reg      64 @"   data_mem[73] [63:0] $end
$var reg      64 A"   data_mem[74] [63:0] $end
$var reg      64 B"   data_mem[75] [63:0] $end
$var reg      64 C"   data_mem[76] [63:0] $end
$var reg      64 D"   data_mem[77] [63:0] $end
$var reg      64 E"   data_mem[78] [63:0] $end
$var reg      64 F"   data_mem[79] [63:0] $end
$var reg      64 G"   data_mem[80] [63:0] $end
$var reg      64 H"   data_mem[81] [63:0] $end
$var reg      64 I"   data_mem[82] [63:0] $end
$var reg      64 J"   data_mem[83] [63:0] $end
$var reg      64 K"   data_mem[84] [63:0] $end
$var reg      64 L"   data_mem[85] [63:0] $end
$var reg      64 M"   data_mem[86] [63:0] $end
$var reg      64 N"   data_mem[87] [63:0] $end
$var reg      64 O"   data_mem[88] [63:0] $end
$var reg      64 P"   data_mem[89] [63:0] $end
$var reg      64 Q"   data_mem[90] [63:0] $end
$var reg      64 R"   data_mem[91] [63:0] $end
$var reg      64 S"   data_mem[92] [63:0] $end
$var reg      64 T"   data_mem[93] [63:0] $end
$var reg      64 U"   data_mem[94] [63:0] $end
$var reg      64 V"   data_mem[95] [63:0] $end
$var reg      64 W"   data_mem[96] [63:0] $end
$var reg      64 X"   data_mem[97] [63:0] $end
$var reg      64 Y"   data_mem[98] [63:0] $end
$var reg      64 Z"   data_mem[99] [63:0] $end
$var reg      64 ["   data_mem[100] [63:0] $end
$var reg      64 \"   data_mem[101] [63:0] $end
$var reg      64 ]"   data_mem[102] [63:0] $end
$var reg      64 ^"   data_mem[103] [63:0] $end
$var reg      64 _"   data_mem[104] [63:0] $end
$var reg      64 `"   data_mem[105] [63:0] $end
$var reg      64 a"   data_mem[106] [63:0] $end
$var reg      64 b"   data_mem[107] [63:0] $end
$var reg      64 c"   data_mem[108] [63:0] $end
$var reg      64 d"   data_mem[109] [63:0] $end
$var reg      64 e"   data_mem[110] [63:0] $end
$var reg      64 f"   data_mem[111] [63:0] $end
$var reg      64 g"   data_mem[112] [63:0] $end
$var reg      64 h"   data_mem[113] [63:0] $end
$var reg      64 i"   data_mem[114] [63:0] $end
$var reg      64 j"   data_mem[115] [63:0] $end
$var reg      64 k"   data_mem[116] [63:0] $end
$var reg      64 l"   data_mem[117] [63:0] $end
$var reg      64 m"   data_mem[118] [63:0] $end
$var reg      64 n"   data_mem[119] [63:0] $end
$var reg      64 o"   data_mem[120] [63:0] $end
$var reg      64 p"   data_mem[121] [63:0] $end
$var reg      64 q"   data_mem[122] [63:0] $end
$var reg      64 r"   data_mem[123] [63:0] $end
$var reg      64 s"   data_mem[124] [63:0] $end
$var reg      64 t"   data_mem[125] [63:0] $end
$var reg      64 u"   data_mem[126] [63:0] $end
$var reg      64 v"   data_mem[127] [63:0] $end
$var integer  32 w"   counter $end
$var parameter 32 x"   CASE_N_MAX $end
$var reg      64 y"   ref_reg[0] [63:0] $end
$var reg      64 z"   ref_reg[1] [63:0] $end
$var reg      64 {"   ref_reg[2] [63:0] $end
$var reg      64 |"   ref_reg[3] [63:0] $end
$var reg      64 }"   ref_reg[4] [63:0] $end
$var reg      64 ~"   ref_reg[5] [63:0] $end
$var reg      64 !#   ref_reg[6] [63:0] $end
$var reg      64 "#   ref_reg[7] [63:0] $end
$var reg      64 ##   ref_reg[8] [63:0] $end
$var reg      64 $#   ref_reg[9] [63:0] $end
$var reg      64 %#   ref_reg[10] [63:0] $end
$var reg      64 &#   ref_reg[11] [63:0] $end
$var reg      64 '#   ref_reg[12] [63:0] $end
$var reg      64 (#   ref_reg[13] [63:0] $end
$var reg      64 )#   ref_reg[14] [63:0] $end
$var reg      64 *#   ref_reg[15] [63:0] $end
$var reg      64 +#   ref_reg[16] [63:0] $end
$var reg      64 ,#   ref_reg[17] [63:0] $end
$var reg      64 -#   ref_reg[18] [63:0] $end
$var reg      64 .#   ref_reg[19] [63:0] $end
$var reg      64 /#   ref_reg[20] [63:0] $end
$var reg      64 0#   ref_reg[21] [63:0] $end
$var reg      64 1#   ref_reg[22] [63:0] $end
$var reg      64 2#   ref_reg[23] [63:0] $end
$var reg      64 3#   ref_reg[24] [63:0] $end
$var reg      64 4#   ref_reg[25] [63:0] $end
$var reg      64 5#   ref_reg[26] [63:0] $end
$var reg      64 6#   ref_reg[27] [63:0] $end
$var reg      64 7#   ref_reg[28] [63:0] $end
$var reg      64 8#   ref_reg[29] [63:0] $end
$var reg      64 9#   ref_reg[30] [63:0] $end
$var reg      64 :#   ref_reg[31] [63:0] $end
$var reg      64 ;#   ref_reg[32] [63:0] $end
$var reg      64 <#   ref_reg[33] [63:0] $end
$var reg      64 =#   ref_reg[34] [63:0] $end
$var reg      64 >#   ref_reg[35] [63:0] $end
$var reg      64 ?#   ref_reg[36] [63:0] $end
$var reg      64 @#   ref_reg[37] [63:0] $end
$var reg      64 A#   ref_reg[38] [63:0] $end
$var reg      64 B#   ref_reg[39] [63:0] $end
$var reg      64 C#   ref_reg[40] [63:0] $end
$var reg      64 D#   ref_reg[41] [63:0] $end
$var reg      64 E#   ref_reg[42] [63:0] $end
$var reg      64 F#   ref_reg[43] [63:0] $end
$var reg      64 G#   ref_reg[44] [63:0] $end
$var reg      64 H#   ref_reg[45] [63:0] $end
$var reg      64 I#   ref_reg[46] [63:0] $end
$var reg      64 J#   ref_reg[47] [63:0] $end
$var reg      64 K#   ref_reg[48] [63:0] $end
$var reg      64 L#   ref_reg[49] [63:0] $end
$var reg      64 M#   ref_reg[50] [63:0] $end
$var reg      64 N#   ref_reg[51] [63:0] $end
$var reg      64 O#   ref_reg[52] [63:0] $end
$var reg      64 P#   ref_reg[53] [63:0] $end
$var reg      64 Q#   ref_reg[54] [63:0] $end
$var reg      64 R#   ref_reg[55] [63:0] $end
$var reg      64 S#   ref_reg[56] [63:0] $end
$var reg      64 T#   ref_reg[57] [63:0] $end
$var reg      64 U#   ref_reg[58] [63:0] $end
$var reg      64 V#   ref_reg[59] [63:0] $end
$var reg      64 W#   ref_reg[60] [63:0] $end
$var reg      64 X#   ref_reg[61] [63:0] $end
$var reg      64 Y#   ref_reg[62] [63:0] $end
$var reg      64 Z#   ref_reg[63] [63:0] $end
$var reg      64 [#   ref_reg[64] [63:0] $end
$var reg      64 \#   ref_reg[65] [63:0] $end
$var reg      64 ]#   ref_reg[66] [63:0] $end
$var reg      64 ^#   ref_reg[67] [63:0] $end
$var reg      64 _#   ref_reg[68] [63:0] $end
$var reg      64 `#   ref_reg[69] [63:0] $end
$var reg      64 a#   ref_reg[70] [63:0] $end
$var reg      64 b#   ref_reg[71] [63:0] $end
$var reg      64 c#   ref_reg[72] [63:0] $end
$var reg      64 d#   ref_reg[73] [63:0] $end
$var reg      64 e#   ref_reg[74] [63:0] $end
$var reg      64 f#   ref_reg[75] [63:0] $end
$var reg      64 g#   ref_reg[76] [63:0] $end
$var reg      64 h#   ref_reg[77] [63:0] $end
$var reg      64 i#   ref_reg[78] [63:0] $end
$var reg      64 j#   ref_reg[79] [63:0] $end
$var reg      64 k#   ref_reg[80] [63:0] $end
$var reg      64 l#   ref_reg[81] [63:0] $end
$var reg      64 m#   ref_reg[82] [63:0] $end
$var reg      64 n#   ref_reg[83] [63:0] $end
$var reg      64 o#   ref_reg[84] [63:0] $end
$var reg      64 p#   ref_reg[85] [63:0] $end
$var reg      64 q#   ref_reg[86] [63:0] $end
$var reg      64 r#   ref_reg[87] [63:0] $end
$var reg      64 s#   ref_reg[88] [63:0] $end
$var reg      64 t#   ref_reg[89] [63:0] $end
$var reg      64 u#   ref_reg[90] [63:0] $end
$var reg      64 v#   ref_reg[91] [63:0] $end
$var reg      64 w#   ref_reg[92] [63:0] $end
$var reg      64 x#   ref_reg[93] [63:0] $end
$var reg      64 y#   ref_reg[94] [63:0] $end
$var reg      64 z#   ref_reg[95] [63:0] $end
$var reg      64 {#   ref_reg[96] [63:0] $end
$var reg      64 |#   ref_reg[97] [63:0] $end
$var reg      64 }#   ref_reg[98] [63:0] $end
$var reg      64 ~#   ref_reg[99] [63:0] $end
$var reg      64 !$   ref_reg[100] [63:0] $end
$var reg      64 "$   ref_reg[101] [63:0] $end
$var reg      64 #$   ref_reg[102] [63:0] $end
$var reg      64 $$   ref_reg[103] [63:0] $end
$var reg      64 %$   ref_reg[104] [63:0] $end
$var reg      64 &$   ref_reg[105] [63:0] $end
$var reg      64 '$   ref_reg[106] [63:0] $end
$var reg      64 ($   ref_reg[107] [63:0] $end
$var reg      64 )$   ref_reg[108] [63:0] $end
$var reg      64 *$   ref_reg[109] [63:0] $end
$var reg      64 +$   ref_reg[110] [63:0] $end
$var reg      64 ,$   ref_reg[111] [63:0] $end
$var reg      64 -$   ref_reg[112] [63:0] $end
$var reg      64 .$   ref_reg[113] [63:0] $end
$var reg      64 /$   ref_reg[114] [63:0] $end
$var reg      64 0$   ref_reg[115] [63:0] $end
$var reg      64 1$   ref_reg[116] [63:0] $end
$var reg      64 2$   ref_reg[117] [63:0] $end
$var reg      64 3$   ref_reg[118] [63:0] $end
$var reg      64 4$   ref_reg[119] [63:0] $end
$var reg      64 5$   ref_reg[120] [63:0] $end
$var reg      64 6$   ref_reg[121] [63:0] $end
$var reg      64 7$   ref_reg[122] [63:0] $end
$var reg      64 8$   ref_reg[123] [63:0] $end
$var reg      64 9$   ref_reg[124] [63:0] $end
$var reg      64 :$   ref_reg[125] [63:0] $end
$var reg      64 ;$   ref_reg[126] [63:0] $end
$var reg      64 <$   ref_reg[127] [63:0] $end
$var reg      256 =$   ref_str[0] [255:0] $end
$var reg      256 >$   ref_str[1] [255:0] $end
$var reg      256 ?$   ref_str[2] [255:0] $end
$var reg      256 @$   ref_str[3] [255:0] $end
$var reg      256 A$   ref_str[4] [255:0] $end
$var reg      256 B$   ref_str[5] [255:0] $end
$var reg      256 C$   ref_str[6] [255:0] $end
$var reg      256 D$   ref_str[7] [255:0] $end
$var reg      256 E$   ref_str[8] [255:0] $end
$var reg      256 F$   ref_str[9] [255:0] $end
$var reg      256 G$   ref_str[10] [255:0] $end
$var reg      256 H$   ref_str[11] [255:0] $end
$var reg      256 I$   ref_str[12] [255:0] $end
$var reg      256 J$   ref_str[13] [255:0] $end
$var reg      256 K$   ref_str[14] [255:0] $end
$var reg      256 L$   ref_str[15] [255:0] $end
$var reg      256 M$   ref_str[16] [255:0] $end
$var reg      256 N$   ref_str[17] [255:0] $end
$var reg      256 O$   ref_str[18] [255:0] $end
$var reg      256 P$   ref_str[19] [255:0] $end
$var reg      256 Q$   ref_str[20] [255:0] $end
$var reg      256 R$   ref_str[21] [255:0] $end
$var reg      256 S$   ref_str[22] [255:0] $end
$var reg      256 T$   ref_str[23] [255:0] $end
$var reg      256 U$   ref_str[24] [255:0] $end
$var reg      256 V$   ref_str[25] [255:0] $end
$var reg      256 W$   ref_str[26] [255:0] $end
$var reg      256 X$   ref_str[27] [255:0] $end
$var reg      256 Y$   ref_str[28] [255:0] $end
$var reg      256 Z$   ref_str[29] [255:0] $end
$var reg      256 [$   ref_str[30] [255:0] $end
$var reg      256 \$   ref_str[31] [255:0] $end
$var reg      256 ]$   ref_str[32] [255:0] $end
$var reg      256 ^$   ref_str[33] [255:0] $end
$var reg      256 _$   ref_str[34] [255:0] $end
$var reg      256 `$   ref_str[35] [255:0] $end
$var reg      256 a$   ref_str[36] [255:0] $end
$var reg      256 b$   ref_str[37] [255:0] $end
$var reg      256 c$   ref_str[38] [255:0] $end
$var reg      256 d$   ref_str[39] [255:0] $end
$var reg      256 e$   ref_str[40] [255:0] $end
$var reg      256 f$   ref_str[41] [255:0] $end
$var reg      256 g$   ref_str[42] [255:0] $end
$var reg      256 h$   ref_str[43] [255:0] $end
$var reg      256 i$   ref_str[44] [255:0] $end
$var reg      256 j$   ref_str[45] [255:0] $end
$var reg      256 k$   ref_str[46] [255:0] $end
$var reg      256 l$   ref_str[47] [255:0] $end
$var reg      256 m$   ref_str[48] [255:0] $end
$var reg      256 n$   ref_str[49] [255:0] $end
$var reg      256 o$   ref_str[50] [255:0] $end
$var reg      256 p$   ref_str[51] [255:0] $end
$var reg      256 q$   ref_str[52] [255:0] $end
$var reg      256 r$   ref_str[53] [255:0] $end
$var reg      256 s$   ref_str[54] [255:0] $end
$var reg      256 t$   ref_str[55] [255:0] $end
$var reg      256 u$   ref_str[56] [255:0] $end
$var reg      256 v$   ref_str[57] [255:0] $end
$var reg      256 w$   ref_str[58] [255:0] $end
$var reg      256 x$   ref_str[59] [255:0] $end
$var reg      256 y$   ref_str[60] [255:0] $end
$var reg      256 z$   ref_str[61] [255:0] $end
$var reg      256 {$   ref_str[62] [255:0] $end
$var reg      256 |$   ref_str[63] [255:0] $end
$var reg      256 }$   ref_str[64] [255:0] $end
$var reg      256 ~$   ref_str[65] [255:0] $end
$var reg      256 !%   ref_str[66] [255:0] $end
$var reg      256 "%   ref_str[67] [255:0] $end
$var reg      256 #%   ref_str[68] [255:0] $end
$var reg      256 $%   ref_str[69] [255:0] $end
$var reg      256 %%   ref_str[70] [255:0] $end
$var reg      256 &%   ref_str[71] [255:0] $end
$var reg      256 '%   ref_str[72] [255:0] $end
$var reg      256 (%   ref_str[73] [255:0] $end
$var reg      256 )%   ref_str[74] [255:0] $end
$var reg      256 *%   ref_str[75] [255:0] $end
$var reg      256 +%   ref_str[76] [255:0] $end
$var reg      256 ,%   ref_str[77] [255:0] $end
$var reg      256 -%   ref_str[78] [255:0] $end
$var reg      256 .%   ref_str[79] [255:0] $end
$var reg      256 /%   ref_str[80] [255:0] $end
$var reg      256 0%   ref_str[81] [255:0] $end
$var reg      256 1%   ref_str[82] [255:0] $end
$var reg      256 2%   ref_str[83] [255:0] $end
$var reg      256 3%   ref_str[84] [255:0] $end
$var reg      256 4%   ref_str[85] [255:0] $end
$var reg      256 5%   ref_str[86] [255:0] $end
$var reg      256 6%   ref_str[87] [255:0] $end
$var reg      256 7%   ref_str[88] [255:0] $end
$var reg      256 8%   ref_str[89] [255:0] $end
$var reg      256 9%   ref_str[90] [255:0] $end
$var reg      256 :%   ref_str[91] [255:0] $end
$var reg      256 ;%   ref_str[92] [255:0] $end
$var reg      256 <%   ref_str[93] [255:0] $end
$var reg      256 =%   ref_str[94] [255:0] $end
$var reg      256 >%   ref_str[95] [255:0] $end
$var reg      256 ?%   ref_str[96] [255:0] $end
$var reg      256 @%   ref_str[97] [255:0] $end
$var reg      256 A%   ref_str[98] [255:0] $end
$var reg      256 B%   ref_str[99] [255:0] $end
$var reg      256 C%   ref_str[100] [255:0] $end
$var reg      256 D%   ref_str[101] [255:0] $end
$var reg      256 E%   ref_str[102] [255:0] $end
$var reg      256 F%   ref_str[103] [255:0] $end
$var reg      256 G%   ref_str[104] [255:0] $end
$var reg      256 H%   ref_str[105] [255:0] $end
$var reg      256 I%   ref_str[106] [255:0] $end
$var reg      256 J%   ref_str[107] [255:0] $end
$var reg      256 K%   ref_str[108] [255:0] $end
$var reg      256 L%   ref_str[109] [255:0] $end
$var reg      256 M%   ref_str[110] [255:0] $end
$var reg      256 N%   ref_str[111] [255:0] $end
$var reg      256 O%   ref_str[112] [255:0] $end
$var reg      256 P%   ref_str[113] [255:0] $end
$var reg      256 Q%   ref_str[114] [255:0] $end
$var reg      256 R%   ref_str[115] [255:0] $end
$var reg      256 S%   ref_str[116] [255:0] $end
$var reg      256 T%   ref_str[117] [255:0] $end
$var reg      256 U%   ref_str[118] [255:0] $end
$var reg      256 V%   ref_str[119] [255:0] $end
$var reg      256 W%   ref_str[120] [255:0] $end
$var reg      256 X%   ref_str[121] [255:0] $end
$var reg      256 Y%   ref_str[122] [255:0] $end
$var reg      256 Z%   ref_str[123] [255:0] $end
$var reg      256 [%   ref_str[124] [255:0] $end
$var reg      256 \%   ref_str[125] [255:0] $end
$var reg      256 ]%   ref_str[126] [255:0] $end
$var reg      256 ^%   ref_str[127] [255:0] $end

$scope module dut $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   enable  $end
$var wire     64 b%   addr_ext [63:0] $end
$var wire      1 c%   wen_ext  $end
$var wire      1 d%   ren_ext  $end
$var wire     32 e%   wdata_ext [31:0] $end
$var wire     64 f%   addr_ext_2 [63:0] $end
$var wire      1 g%   wen_ext_2  $end
$var wire      1 h%   ren_ext_2  $end
$var wire     64 i%   wdata_ext_2 [63:0] $end
$var wire     32 +    rdata_ext [31:0] $end
$var wire     64 ,    rdata_ext_2 [63:0] $end
$var wire     32 j%   instruction [31:0] $end
$var wire     64 k%   updated_pc [63:0] $end
$var wire     64 l%   current_pc [63:0] $end
$var wire     64 m%   pc_IF_ID [63:0] $end
$var wire      1 n%   instruction_IF_ID [31] $end
$var wire      1 o%   instruction_IF_ID [30] $end
$var wire      1 p%   instruction_IF_ID [29] $end
$var wire      1 q%   instruction_IF_ID [28] $end
$var wire      1 r%   instruction_IF_ID [27] $end
$var wire      1 s%   instruction_IF_ID [26] $end
$var wire      1 t%   instruction_IF_ID [25] $end
$var wire      1 u%   instruction_IF_ID [24] $end
$var wire      1 v%   instruction_IF_ID [23] $end
$var wire      1 w%   instruction_IF_ID [22] $end
$var wire      1 x%   instruction_IF_ID [21] $end
$var wire      1 y%   instruction_IF_ID [20] $end
$var wire      1 z%   instruction_IF_ID [19] $end
$var wire      1 {%   instruction_IF_ID [18] $end
$var wire      1 |%   instruction_IF_ID [17] $end
$var wire      1 }%   instruction_IF_ID [16] $end
$var wire      1 ~%   instruction_IF_ID [15] $end
$var wire      1 !&   instruction_IF_ID [14] $end
$var wire      1 "&   instruction_IF_ID [13] $end
$var wire      1 #&   instruction_IF_ID [12] $end
$var wire      1 $&   instruction_IF_ID [11] $end
$var wire      1 %&   instruction_IF_ID [10] $end
$var wire      1 &&   instruction_IF_ID [9] $end
$var wire      1 '&   instruction_IF_ID [8] $end
$var wire      1 (&   instruction_IF_ID [7] $end
$var wire      1 )&   instruction_IF_ID [6] $end
$var wire      1 *&   instruction_IF_ID [5] $end
$var wire      1 +&   instruction_IF_ID [4] $end
$var wire      1 ,&   instruction_IF_ID [3] $end
$var wire      1 -&   instruction_IF_ID [2] $end
$var wire      1 .&   instruction_IF_ID [1] $end
$var wire      1 /&   instruction_IF_ID [0] $end
$var wire      1 0&   reg_dst  $end
$var wire      1 1&   branch  $end
$var wire      1 2&   mem_read  $end
$var wire      1 3&   mem_2_reg  $end
$var wire      1 4&   mem_write  $end
$var wire      1 5&   alu_src  $end
$var wire      1 6&   reg_write  $end
$var wire      1 7&   jump  $end
$var wire      2 8&   alu_op [1:0] $end
$var wire     64 9&   regfile_rdata_1 [63:0] $end
$var wire     64 :&   regfile_rdata_2 [63:0] $end
$var wire     64 ;&   immediate_extended [63:0] $end
$var wire      2 <&   alu_op_ID_EX [1:0] $end
$var wire      1 =&   reg_dst_ID_EX  $end
$var wire      1 >&   branch_ID_EX  $end
$var wire      1 ?&   mem_read_ID_EX  $end
$var wire      1 @&   mem_2_reg_ID_EX  $end
$var wire      1 A&   mem_write_ID_EX  $end
$var wire      1 B&   alu_src_ID_EX  $end
$var wire      1 C&   reg_write_ID_EX  $end
$var wire      1 D&   jump_ID_EX  $end
$var wire     64 E&   pc_ID_EX [63:0] $end
$var wire     64 F&   regfile_rdata_1_ID_EX [63:0] $end
$var wire     64 G&   regfile_rdata_2_ID_EX [63:0] $end
$var wire     64 H&   immediate_extended_ID_EX [63:0] $end
$var wire      1 I&   func75_ID_EX  $end
$var wire      1 J&   func70_ID_EX  $end
$var wire      3 K&   func3_ID_EX [2:0] $end
$var wire      5 L&   waddr_ID_EX [4:0] $end
$var wire     64 M&   branch_pc [63:0] $end
$var wire     64 N&   jump_pc [63:0] $end
$var wire     64 O&   alu_operand_2 [63:0] $end
$var wire     64 P&   alu_out [63:0] $end
$var wire      1 Q&   zero_flag  $end
$var wire      4 R&   alu_control [3:0] $end
$var wire      1 S&   reg_dst_EX_MEM  $end
$var wire      1 T&   branch_EX_MEM  $end
$var wire      1 U&   mem_read_EX_MEM  $end
$var wire      1 V&   mem_2_reg_EX_MEM  $end
$var wire      1 W&   mem_write_EX_MEM  $end
$var wire      1 X&   reg_write_EX_MEM  $end
$var wire      1 Y&   jump_EX_MEM  $end
$var wire     64 Z&   pc_EX_MEM [63:0] $end
$var wire      1 [&   zero_flag_EX_MEM  $end
$var wire     64 \&   alu_out_EX_MEM [63:0] $end
$var wire     64 ]&   regfile_rdata_2_EX_MEM [63:0] $end
$var wire      5 ^&   waddr_EX_MEM [4:0] $end
$var wire     64 _&   mem_data_MEM [63:0] $end
$var wire      1 `&   reg_dst_MEM_WB  $end
$var wire      1 a&   mem_2_reg_MEM_WB  $end
$var wire      1 b&   reg_write_MEM_WB  $end
$var wire     64 c&   mem_data_MEM_WB [63:0] $end
$var wire     64 d&   alu_out_MEM_WB [63:0] $end
$var wire      5 e&   waddr_MEM_WB [4:0] $end
$var wire     64 f&   regfile_wdata_WB [63:0] $end
$var wire      2 g&   MUX_A [1:0] $end
$var wire      2 h&   MUX_B [1:0] $end
$var wire     64 i&   MUX_A_out [63:0] $end
$var wire     64 j&   MUX_B_out [63:0] $end
$var wire      5 k&   RS1_ID_EX [4:0] $end
$var wire      5 l&   RS2_ID_EX [4:0] $end

$scope module program_counter $end
$var parameter 32 m&   DATA_W $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   enable  $end
$var wire     64 M&   branch_pc [63:0] $end
$var wire     64 N&   jump_pc [63:0] $end
$var wire      1 [&   zero_flag  $end
$var wire      1 T&   branch  $end
$var wire      1 Y&   jump  $end
$var reg      64 n&   updated_pc [63:0] $end
$var reg      64 o&   current_pc [63:0] $end
$var parameter 64 p&   PC_INCREASE [63:0] $end
$var wire     64 q&   pc_r [63:0] $end
$var wire     64 r&   next_pc [63:0] $end
$var wire     64 s&   next_pc_i [63:0] $end
$var reg       1 t&   pc_src $end

$scope module mux_branch $end
$var parameter 32 u&   DATA_W $end
$var wire     64 M&   input_a [63:0] $end
$var wire     64 v&   input_b [63:0] $end
$var wire      1 w&   select_a  $end
$var reg      64 x&   mux_out [63:0] $end
$upscope $end


$scope module mux_jump $end
$var parameter 32 y&   DATA_W $end
$var wire     64 N&   input_a [63:0] $end
$var wire     64 s&   input_b [63:0] $end
$var wire      1 Y&   select_a  $end
$var reg      64 z&   mux_out [63:0] $end
$upscope $end


$scope module pc_register $end
$var parameter 32 {&   DATA_W $end
$var parameter 32 |&   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire     64 r&   din [63:0] $end
$var wire     64 }&   dout [63:0] $end
$var reg      64 ~&   r [63:0] $end
$var reg      64 !'   nxt [63:0] $end
$upscope $end

$upscope $end


$scope module instruction_memory $end
$var parameter 32 "'   ADDR_W $end
$var wire      1 _%   clk  $end
$var wire     64 l%   addr [63:0] $end
$var wire     64 b%   addr_ext [63:0] $end
$var wire      1 #'   wen  $end
$var wire      1 c%   wen_ext  $end
$var wire      1 $'   ren  $end
$var wire      1 d%   ren_ext  $end
$var wire     32 %'   wdata [31:0] $end
$var wire     32 e%   wdata_ext [31:0] $end
$var reg      32 &'   rdata [31:0] $end
$var reg      32 ''   rdata_ext [31:0] $end
$var parameter 32 ('   SEL_W $end
$var parameter 32 )'   MACRO_DEPTH $end
$var parameter 32 *'   N_MEMS $end
$var reg       7 +'   addr_i [6:0] $end
$var reg       7 ,'   addr_ext_i [6:0] $end
$var reg       1 -'   mem_sel [0:0] $end
$var reg       1 .'   mem_sel_ext [0:0] $end
$var wire     32 /'   data_i [0] $end
$var wire     32 0'   data_ext_i [0] $end
$var reg       1 1'   cs_i [0:0] $end
$var reg       1 2'   cs_ext_i [0:0] $end
$var reg       1 3'   web0 $end
$var reg       1 4'   web1 $end
$var reg       1 5'   csb0 $end
$var reg       1 6'   csb1 $end

$scope begin process_for_mem[0] $end
$var parameter 32 7'   index_depth $end

$scope module dram_inst $end
$var parameter 32 8'   DATA_WIDTH $end
$var parameter 32 9'   ADDR_WIDTH $end
$var parameter 32 :'   RAM_DEPTH $end
$var parameter 32 ;'   DELAY $end
$var parameter 32 <'   VERBOSE $end
$var parameter 32 ='   T_HOLD $end
$var wire      1 >'   clk0  $end
$var wire      1 ?'   csb0  $end
$var wire      1 @'   web0  $end
$var wire      7 A'   addr0 [6:0] $end
$var wire     32 %'   din0 [31:0] $end
$var reg      32 B'   dout0 [31:0] $end
$var wire      1 C'   clk1  $end
$var wire      1 D'   csb1  $end
$var wire      1 E'   web1  $end
$var wire      7 F'   addr1 [6:0] $end
$var wire     32 e%   din1 [31:0] $end
$var reg      32 G'   dout1 [31:0] $end
$var reg      32 H'   mem[0] [31:0] $end
$var reg      32 I'   mem[1] [31:0] $end
$var reg      32 J'   mem[2] [31:0] $end
$var reg      32 K'   mem[3] [31:0] $end
$var reg      32 L'   mem[4] [31:0] $end
$var reg      32 M'   mem[5] [31:0] $end
$var reg      32 N'   mem[6] [31:0] $end
$var reg      32 O'   mem[7] [31:0] $end
$var reg      32 P'   mem[8] [31:0] $end
$var reg      32 Q'   mem[9] [31:0] $end
$var reg      32 R'   mem[10] [31:0] $end
$var reg      32 S'   mem[11] [31:0] $end
$var reg      32 T'   mem[12] [31:0] $end
$var reg      32 U'   mem[13] [31:0] $end
$var reg      32 V'   mem[14] [31:0] $end
$var reg      32 W'   mem[15] [31:0] $end
$var reg      32 X'   mem[16] [31:0] $end
$var reg      32 Y'   mem[17] [31:0] $end
$var reg      32 Z'   mem[18] [31:0] $end
$var reg      32 ['   mem[19] [31:0] $end
$var reg      32 \'   mem[20] [31:0] $end
$var reg      32 ]'   mem[21] [31:0] $end
$var reg      32 ^'   mem[22] [31:0] $end
$var reg      32 _'   mem[23] [31:0] $end
$var reg      32 `'   mem[24] [31:0] $end
$var reg      32 a'   mem[25] [31:0] $end
$var reg      32 b'   mem[26] [31:0] $end
$var reg      32 c'   mem[27] [31:0] $end
$var reg      32 d'   mem[28] [31:0] $end
$var reg      32 e'   mem[29] [31:0] $end
$var reg      32 f'   mem[30] [31:0] $end
$var reg      32 g'   mem[31] [31:0] $end
$var reg      32 h'   mem[32] [31:0] $end
$var reg      32 i'   mem[33] [31:0] $end
$var reg      32 j'   mem[34] [31:0] $end
$var reg      32 k'   mem[35] [31:0] $end
$var reg      32 l'   mem[36] [31:0] $end
$var reg      32 m'   mem[37] [31:0] $end
$var reg      32 n'   mem[38] [31:0] $end
$var reg      32 o'   mem[39] [31:0] $end
$var reg      32 p'   mem[40] [31:0] $end
$var reg      32 q'   mem[41] [31:0] $end
$var reg      32 r'   mem[42] [31:0] $end
$var reg      32 s'   mem[43] [31:0] $end
$var reg      32 t'   mem[44] [31:0] $end
$var reg      32 u'   mem[45] [31:0] $end
$var reg      32 v'   mem[46] [31:0] $end
$var reg      32 w'   mem[47] [31:0] $end
$var reg      32 x'   mem[48] [31:0] $end
$var reg      32 y'   mem[49] [31:0] $end
$var reg      32 z'   mem[50] [31:0] $end
$var reg      32 {'   mem[51] [31:0] $end
$var reg      32 |'   mem[52] [31:0] $end
$var reg      32 }'   mem[53] [31:0] $end
$var reg      32 ~'   mem[54] [31:0] $end
$var reg      32 !(   mem[55] [31:0] $end
$var reg      32 "(   mem[56] [31:0] $end
$var reg      32 #(   mem[57] [31:0] $end
$var reg      32 $(   mem[58] [31:0] $end
$var reg      32 %(   mem[59] [31:0] $end
$var reg      32 &(   mem[60] [31:0] $end
$var reg      32 '(   mem[61] [31:0] $end
$var reg      32 ((   mem[62] [31:0] $end
$var reg      32 )(   mem[63] [31:0] $end
$var reg      32 *(   mem[64] [31:0] $end
$var reg      32 +(   mem[65] [31:0] $end
$var reg      32 ,(   mem[66] [31:0] $end
$var reg      32 -(   mem[67] [31:0] $end
$var reg      32 .(   mem[68] [31:0] $end
$var reg      32 /(   mem[69] [31:0] $end
$var reg      32 0(   mem[70] [31:0] $end
$var reg      32 1(   mem[71] [31:0] $end
$var reg      32 2(   mem[72] [31:0] $end
$var reg      32 3(   mem[73] [31:0] $end
$var reg      32 4(   mem[74] [31:0] $end
$var reg      32 5(   mem[75] [31:0] $end
$var reg      32 6(   mem[76] [31:0] $end
$var reg      32 7(   mem[77] [31:0] $end
$var reg      32 8(   mem[78] [31:0] $end
$var reg      32 9(   mem[79] [31:0] $end
$var reg      32 :(   mem[80] [31:0] $end
$var reg      32 ;(   mem[81] [31:0] $end
$var reg      32 <(   mem[82] [31:0] $end
$var reg      32 =(   mem[83] [31:0] $end
$var reg      32 >(   mem[84] [31:0] $end
$var reg      32 ?(   mem[85] [31:0] $end
$var reg      32 @(   mem[86] [31:0] $end
$var reg      32 A(   mem[87] [31:0] $end
$var reg      32 B(   mem[88] [31:0] $end
$var reg      32 C(   mem[89] [31:0] $end
$var reg      32 D(   mem[90] [31:0] $end
$var reg      32 E(   mem[91] [31:0] $end
$var reg      32 F(   mem[92] [31:0] $end
$var reg      32 G(   mem[93] [31:0] $end
$var reg      32 H(   mem[94] [31:0] $end
$var reg      32 I(   mem[95] [31:0] $end
$var reg      32 J(   mem[96] [31:0] $end
$var reg      32 K(   mem[97] [31:0] $end
$var reg      32 L(   mem[98] [31:0] $end
$var reg      32 M(   mem[99] [31:0] $end
$var reg      32 N(   mem[100] [31:0] $end
$var reg      32 O(   mem[101] [31:0] $end
$var reg      32 P(   mem[102] [31:0] $end
$var reg      32 Q(   mem[103] [31:0] $end
$var reg      32 R(   mem[104] [31:0] $end
$var reg      32 S(   mem[105] [31:0] $end
$var reg      32 T(   mem[106] [31:0] $end
$var reg      32 U(   mem[107] [31:0] $end
$var reg      32 V(   mem[108] [31:0] $end
$var reg      32 W(   mem[109] [31:0] $end
$var reg      32 X(   mem[110] [31:0] $end
$var reg      32 Y(   mem[111] [31:0] $end
$var reg      32 Z(   mem[112] [31:0] $end
$var reg      32 [(   mem[113] [31:0] $end
$var reg      32 \(   mem[114] [31:0] $end
$var reg      32 ](   mem[115] [31:0] $end
$var reg      32 ^(   mem[116] [31:0] $end
$var reg      32 _(   mem[117] [31:0] $end
$var reg      32 `(   mem[118] [31:0] $end
$var reg      32 a(   mem[119] [31:0] $end
$var reg      32 b(   mem[120] [31:0] $end
$var reg      32 c(   mem[121] [31:0] $end
$var reg      32 d(   mem[122] [31:0] $end
$var reg      32 e(   mem[123] [31:0] $end
$var reg      32 f(   mem[124] [31:0] $end
$var reg      32 g(   mem[125] [31:0] $end
$var reg      32 h(   mem[126] [31:0] $end
$var reg      32 i(   mem[127] [31:0] $end
$upscope $end

$upscope $end

$upscope $end


$scope module pc_pipe_IF_ID $end
$var parameter 32 j(   DATA_W $end
$var parameter 32 k(   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire     64 k%   din [63:0] $end
$var wire     64 m%   dout [63:0] $end
$var reg      64 l(   r [63:0] $end
$var reg      64 m(   nxt [63:0] $end
$upscope $end


$scope module signal_pipe_IF_ID $end
$var parameter 32 n(   DATA_W $end
$var parameter 32 o(   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire     32 j%   din [31:0] $end
$var wire      1 n%   dout [31] $end
$var wire      1 o%   dout [30] $end
$var wire      1 p%   dout [29] $end
$var wire      1 q%   dout [28] $end
$var wire      1 r%   dout [27] $end
$var wire      1 s%   dout [26] $end
$var wire      1 t%   dout [25] $end
$var wire      1 u%   dout [24] $end
$var wire      1 v%   dout [23] $end
$var wire      1 w%   dout [22] $end
$var wire      1 x%   dout [21] $end
$var wire      1 y%   dout [20] $end
$var wire      1 z%   dout [19] $end
$var wire      1 {%   dout [18] $end
$var wire      1 |%   dout [17] $end
$var wire      1 }%   dout [16] $end
$var wire      1 ~%   dout [15] $end
$var wire      1 !&   dout [14] $end
$var wire      1 "&   dout [13] $end
$var wire      1 #&   dout [12] $end
$var wire      1 $&   dout [11] $end
$var wire      1 %&   dout [10] $end
$var wire      1 &&   dout [9] $end
$var wire      1 '&   dout [8] $end
$var wire      1 (&   dout [7] $end
$var wire      1 )&   dout [6] $end
$var wire      1 *&   dout [5] $end
$var wire      1 +&   dout [4] $end
$var wire      1 ,&   dout [3] $end
$var wire      1 -&   dout [2] $end
$var wire      1 .&   dout [1] $end
$var wire      1 /&   dout [0] $end
$var reg      32 p(   r [31:0] $end
$var reg      32 q(   nxt [31:0] $end
$upscope $end


$scope module control_unit $end
$var wire      1 )&   opcode [6] $end
$var wire      1 *&   opcode [5] $end
$var wire      1 +&   opcode [4] $end
$var wire      1 ,&   opcode [3] $end
$var wire      1 -&   opcode [2] $end
$var wire      1 .&   opcode [1] $end
$var wire      1 /&   opcode [0] $end
$var reg       2 r(   alu_op [1:0] $end
$var reg       1 s(   reg_dst $end
$var reg       1 t(   branch $end
$var reg       1 u(   mem_read $end
$var reg       1 v(   mem_2_reg $end
$var reg       1 w(   mem_write $end
$var reg       1 x(   alu_src $end
$var reg       1 y(   reg_write $end
$var reg       1 z(   jump $end
$var parameter 32 {(   ALU_R $end
$var parameter 32 |(   ALU_I $end
$var parameter 32 }(   BRANCH_EQ $end
$var parameter 32 ~(   JUMP $end
$var parameter 32 !)   LOAD $end
$var parameter 32 ")   STORE $end
$var parameter  2 #)   ADD_OPCODE [1:0] $end
$var parameter  2 $)   SUB_OPCODE [1:0] $end
$var parameter  2 %)   R_TYPE_OPCODE [1:0] $end
$upscope $end


$scope module register_file $end
$var parameter 32 &)   DATA_W $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 b&   reg_write  $end
$var wire      1 z%   raddr_1 [4] $end
$var wire      1 {%   raddr_1 [3] $end
$var wire      1 |%   raddr_1 [2] $end
$var wire      1 }%   raddr_1 [1] $end
$var wire      1 ~%   raddr_1 [0] $end
$var wire      1 u%   raddr_2 [4] $end
$var wire      1 v%   raddr_2 [3] $end
$var wire      1 w%   raddr_2 [2] $end
$var wire      1 x%   raddr_2 [1] $end
$var wire      1 y%   raddr_2 [0] $end
$var wire      5 e&   waddr [4:0] $end
$var wire     64 f&   wdata [63:0] $end
$var reg      64 ')   rdata_1 [63:0] $end
$var reg      64 ()   rdata_2 [63:0] $end
$var parameter 32 ))   N_REG $end
$var reg      64 *)   reg_array[0] [63:0] $end
$var reg      64 +)   reg_array[1] [63:0] $end
$var reg      64 ,)   reg_array[2] [63:0] $end
$var reg      64 -)   reg_array[3] [63:0] $end
$var reg      64 .)   reg_array[4] [63:0] $end
$var reg      64 /)   reg_array[5] [63:0] $end
$var reg      64 0)   reg_array[6] [63:0] $end
$var reg      64 1)   reg_array[7] [63:0] $end
$var reg      64 2)   reg_array[8] [63:0] $end
$var reg      64 3)   reg_array[9] [63:0] $end
$var reg      64 4)   reg_array[10] [63:0] $end
$var reg      64 5)   reg_array[11] [63:0] $end
$var reg      64 6)   reg_array[12] [63:0] $end
$var reg      64 7)   reg_array[13] [63:0] $end
$var reg      64 8)   reg_array[14] [63:0] $end
$var reg      64 9)   reg_array[15] [63:0] $end
$var reg      64 :)   reg_array[16] [63:0] $end
$var reg      64 ;)   reg_array[17] [63:0] $end
$var reg      64 <)   reg_array[18] [63:0] $end
$var reg      64 =)   reg_array[19] [63:0] $end
$var reg      64 >)   reg_array[20] [63:0] $end
$var reg      64 ?)   reg_array[21] [63:0] $end
$var reg      64 @)   reg_array[22] [63:0] $end
$var reg      64 A)   reg_array[23] [63:0] $end
$var reg      64 B)   reg_array[24] [63:0] $end
$var reg      64 C)   reg_array[25] [63:0] $end
$var reg      64 D)   reg_array[26] [63:0] $end
$var reg      64 E)   reg_array[27] [63:0] $end
$var reg      64 F)   reg_array[28] [63:0] $end
$var reg      64 G)   reg_array[29] [63:0] $end
$var reg      64 H)   reg_array[30] [63:0] $end
$var reg      64 I)   reg_array[31] [63:0] $end
$var reg      64 J)   reg_array_nxt[0] [63:0] $end
$var reg      64 K)   reg_array_nxt[1] [63:0] $end
$var reg      64 L)   reg_array_nxt[2] [63:0] $end
$var reg      64 M)   reg_array_nxt[3] [63:0] $end
$var reg      64 N)   reg_array_nxt[4] [63:0] $end
$var reg      64 O)   reg_array_nxt[5] [63:0] $end
$var reg      64 P)   reg_array_nxt[6] [63:0] $end
$var reg      64 Q)   reg_array_nxt[7] [63:0] $end
$var reg      64 R)   reg_array_nxt[8] [63:0] $end
$var reg      64 S)   reg_array_nxt[9] [63:0] $end
$var reg      64 T)   reg_array_nxt[10] [63:0] $end
$var reg      64 U)   reg_array_nxt[11] [63:0] $end
$var reg      64 V)   reg_array_nxt[12] [63:0] $end
$var reg      64 W)   reg_array_nxt[13] [63:0] $end
$var reg      64 X)   reg_array_nxt[14] [63:0] $end
$var reg      64 Y)   reg_array_nxt[15] [63:0] $end
$var reg      64 Z)   reg_array_nxt[16] [63:0] $end
$var reg      64 [)   reg_array_nxt[17] [63:0] $end
$var reg      64 \)   reg_array_nxt[18] [63:0] $end
$var reg      64 ])   reg_array_nxt[19] [63:0] $end
$var reg      64 ^)   reg_array_nxt[20] [63:0] $end
$var reg      64 _)   reg_array_nxt[21] [63:0] $end
$var reg      64 `)   reg_array_nxt[22] [63:0] $end
$var reg      64 a)   reg_array_nxt[23] [63:0] $end
$var reg      64 b)   reg_array_nxt[24] [63:0] $end
$var reg      64 c)   reg_array_nxt[25] [63:0] $end
$var reg      64 d)   reg_array_nxt[26] [63:0] $end
$var reg      64 e)   reg_array_nxt[27] [63:0] $end
$var reg      64 f)   reg_array_nxt[28] [63:0] $end
$var reg      64 g)   reg_array_nxt[29] [63:0] $end
$var reg      64 h)   reg_array_nxt[30] [63:0] $end
$var reg      64 i)   reg_array_nxt[31] [63:0] $end
$var integer  32 j)   idx $end
$upscope $end


$scope module immediate_extend_u $end
$var wire      1 n%   instruction [31] $end
$var wire      1 o%   instruction [30] $end
$var wire      1 p%   instruction [29] $end
$var wire      1 q%   instruction [28] $end
$var wire      1 r%   instruction [27] $end
$var wire      1 s%   instruction [26] $end
$var wire      1 t%   instruction [25] $end
$var wire      1 u%   instruction [24] $end
$var wire      1 v%   instruction [23] $end
$var wire      1 w%   instruction [22] $end
$var wire      1 x%   instruction [21] $end
$var wire      1 y%   instruction [20] $end
$var wire      1 z%   instruction [19] $end
$var wire      1 {%   instruction [18] $end
$var wire      1 |%   instruction [17] $end
$var wire      1 }%   instruction [16] $end
$var wire      1 ~%   instruction [15] $end
$var wire      1 !&   instruction [14] $end
$var wire      1 "&   instruction [13] $end
$var wire      1 #&   instruction [12] $end
$var wire      1 $&   instruction [11] $end
$var wire      1 %&   instruction [10] $end
$var wire      1 &&   instruction [9] $end
$var wire      1 '&   instruction [8] $end
$var wire      1 (&   instruction [7] $end
$var wire      1 )&   instruction [6] $end
$var wire      1 *&   instruction [5] $end
$var wire      1 +&   instruction [4] $end
$var wire      1 ,&   instruction [3] $end
$var wire      1 -&   instruction [2] $end
$var wire      1 .&   instruction [1] $end
$var wire      1 /&   instruction [0] $end
$var reg      64 k)   immediate_extended [63:0] $end
$var wire     25 l)   instr [31:7] $end
$var wire      7 m)   opcode [6:0] $end
$var reg       3 n)   instr_type [2:0] $end
$var parameter 32 o)   ALU_R $end
$var parameter 32 p)   ALU_I $end
$var parameter 32 q)   BRANCH_EQ $end
$var parameter 32 r)   JUMP $end
$var parameter 32 s)   LOAD_WORD $end
$var parameter 32 t)   STORE_WORD $end
$upscope $end


$scope module aluop_IDEX $end
$var parameter 32 u)   DATA_W $end
$var parameter 32 v)   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      2 8&   din [1:0] $end
$var wire      2 <&   dout [1:0] $end
$var reg       2 w)   r [1:0] $end
$var reg       2 x)   nxt [1:0] $end
$upscope $end


$scope module alusrc_IDEX $end
$var parameter 32 y)   DATA_W $end
$var parameter 32 z)   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 5&   din [0] $end
$var wire      1 B&   dout [0] $end
$var reg       1 {)   r [0:0] $end
$var reg       1 |)   nxt [0:0] $end
$upscope $end


$scope module regdst_IDEX $end
$var parameter 32 })   DATA_W $end
$var parameter 32 ~)   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 0&   din [0] $end
$var wire      1 =&   dout [0] $end
$var reg       1 !*   r [0:0] $end
$var reg       1 "*   nxt [0:0] $end
$upscope $end


$scope module regwrite_IDEX $end
$var parameter 32 #*   DATA_W $end
$var parameter 32 $*   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 6&   din [0] $end
$var wire      1 C&   dout [0] $end
$var reg       1 %*   r [0:0] $end
$var reg       1 &*   nxt [0:0] $end
$upscope $end


$scope module memwrite_IDEX $end
$var parameter 32 '*   DATA_W $end
$var parameter 32 (*   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 4&   din [0] $end
$var wire      1 A&   dout [0] $end
$var reg       1 )*   r [0:0] $end
$var reg       1 **   nxt [0:0] $end
$upscope $end


$scope module branch_IDEX $end
$var parameter 32 +*   DATA_W $end
$var parameter 32 ,*   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 1&   din [0] $end
$var wire      1 >&   dout [0] $end
$var reg       1 -*   r [0:0] $end
$var reg       1 .*   nxt [0:0] $end
$upscope $end


$scope module memread_IDEX $end
$var parameter 32 /*   DATA_W $end
$var parameter 32 0*   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 2&   din [0] $end
$var wire      1 ?&   dout [0] $end
$var reg       1 1*   r [0:0] $end
$var reg       1 2*   nxt [0:0] $end
$upscope $end


$scope module mem2reg_IDEX $end
$var parameter 32 3*   DATA_W $end
$var parameter 32 4*   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 3&   din [0] $end
$var wire      1 @&   dout [0] $end
$var reg       1 5*   r [0:0] $end
$var reg       1 6*   nxt [0:0] $end
$upscope $end


$scope module jump_IDEX $end
$var parameter 32 7*   DATA_W $end
$var parameter 32 8*   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 7&   din [0] $end
$var wire      1 D&   dout [0] $end
$var reg       1 9*   r [0:0] $end
$var reg       1 :*   nxt [0:0] $end
$upscope $end


$scope module PC_IDEX $end
$var parameter 32 ;*   DATA_W $end
$var parameter 32 <*   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire     64 m%   din [63:0] $end
$var wire     64 E&   dout [63:0] $end
$var reg      64 =*   r [63:0] $end
$var reg      64 >*   nxt [63:0] $end
$upscope $end


$scope module readdata1_IDEX $end
$var parameter 32 ?*   DATA_W $end
$var parameter 32 @*   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire     64 9&   din [63:0] $end
$var wire     64 F&   dout [63:0] $end
$var reg      64 A*   r [63:0] $end
$var reg      64 B*   nxt [63:0] $end
$upscope $end


$scope module readdata2_IDEX $end
$var parameter 32 C*   DATA_W $end
$var parameter 32 D*   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire     64 :&   din [63:0] $end
$var wire     64 G&   dout [63:0] $end
$var reg      64 E*   r [63:0] $end
$var reg      64 F*   nxt [63:0] $end
$upscope $end


$scope module immediate_IDEX $end
$var parameter 32 G*   DATA_W $end
$var parameter 32 H*   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire     64 ;&   din [63:0] $end
$var wire     64 H&   dout [63:0] $end
$var reg      64 I*   r [63:0] $end
$var reg      64 J*   nxt [63:0] $end
$upscope $end


$scope module waddr_IDEX $end
$var parameter 32 K*   DATA_W $end
$var parameter 32 L*   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 $&   din [4] $end
$var wire      1 %&   din [3] $end
$var wire      1 &&   din [2] $end
$var wire      1 '&   din [1] $end
$var wire      1 (&   din [0] $end
$var wire      5 L&   dout [4:0] $end
$var reg       5 M*   r [4:0] $end
$var reg       5 N*   nxt [4:0] $end
$upscope $end


$scope module func75_IDEX $end
$var parameter 32 O*   DATA_W $end
$var parameter 32 P*   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 o%   din [0] $end
$var wire      1 I&   dout [0] $end
$var reg       1 Q*   r [0:0] $end
$var reg       1 R*   nxt [0:0] $end
$upscope $end


$scope module func70_IDEX $end
$var parameter 32 S*   DATA_W $end
$var parameter 32 T*   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 t%   din [0] $end
$var wire      1 J&   dout [0] $end
$var reg       1 U*   r [0:0] $end
$var reg       1 V*   nxt [0:0] $end
$upscope $end


$scope module func3_IDEX $end
$var parameter 32 W*   DATA_W $end
$var parameter 32 X*   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 !&   din [2] $end
$var wire      1 "&   din [1] $end
$var wire      1 #&   din [0] $end
$var wire      3 K&   dout [2:0] $end
$var reg       3 Y*   r [2:0] $end
$var reg       3 Z*   nxt [2:0] $end
$upscope $end


$scope module forwarding_MUX_A $end
$var parameter 32 [*   DATA_W $end
$var parameter 32 \*   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 z%   din [4] $end
$var wire      1 {%   din [3] $end
$var wire      1 |%   din [2] $end
$var wire      1 }%   din [1] $end
$var wire      1 ~%   din [0] $end
$var wire      5 k&   dout [4:0] $end
$var reg       5 ]*   r [4:0] $end
$var reg       5 ^*   nxt [4:0] $end
$upscope $end


$scope module forwarding_MUX_B $end
$var parameter 32 _*   DATA_W $end
$var parameter 32 `*   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 u%   din [4] $end
$var wire      1 v%   din [3] $end
$var wire      1 w%   din [2] $end
$var wire      1 x%   din [1] $end
$var wire      1 y%   din [0] $end
$var wire      5 l&   dout [4:0] $end
$var reg       5 a*   r [4:0] $end
$var reg       5 b*   nxt [4:0] $end
$upscope $end


$scope module ALU_forward_mux_operand0 $end
$var parameter 32 c*   DATA_W $end
$var wire     64 F&   input_a [63:0] $end
$var wire     64 f&   input_b [63:0] $end
$var wire     64 \&   input_c [63:0] $end
$var wire      2 g&   select [1:0] $end
$var reg      64 d*   mux_out [63:0] $end
$upscope $end


$scope module ALU_forward_mux_operand1 $end
$var parameter 32 e*   DATA_W $end
$var wire     64 G&   input_a [63:0] $end
$var wire     64 f&   input_b [63:0] $end
$var wire     64 \&   input_c [63:0] $end
$var wire      2 h&   select [1:0] $end
$var reg      64 f*   mux_out [63:0] $end
$upscope $end


$scope module alu_ctrl $end
$var wire      1 I&   func7_5  $end
$var wire      1 J&   func7_0  $end
$var wire      3 K&   func3 [2:0] $end
$var wire      2 <&   alu_op [1:0] $end
$var reg       4 g*   alu_control [3:0] $end
$var parameter  2 h*   ADD_OPCODE [1:0] $end
$var parameter  2 i*   SUB_OPCODE [1:0] $end
$var parameter  2 j*   R_TYPE_OPCODE [1:0] $end
$var parameter  4 k*   AND_OP [3:0] $end
$var parameter  4 l*   OR_OP [3:0] $end
$var parameter  4 m*   ADD_OP [3:0] $end
$var parameter  4 n*   SLL_OP [3:0] $end
$var parameter  4 o*   SRL_OP [3:0] $end
$var parameter  4 p*   SUB_OP [3:0] $end
$var parameter  4 q*   SLT_OP [3:0] $end
$var parameter  4 r*   MUL_OP [3:0] $end
$var wire      5 s*   function_field [4:0] $end
$var parameter  5 t*   FUNC_ADD [4:0] $end
$var parameter  5 u*   FUNC_SUB [4:0] $end
$var parameter  5 v*   FUNC_AND [4:0] $end
$var parameter  5 w*   FUNC_OR [4:0] $end
$var parameter  5 x*   FUNC_SLT [4:0] $end
$var parameter  5 y*   FUNC_SLL [4:0] $end
$var parameter  5 z*   FUNC_SRL [4:0] $end
$var parameter  5 {*   FUNC_MUL [4:0] $end
$var reg       4 |*   rtype_op [3:0] $end
$upscope $end


$scope module alu_operand_mux $end
$var parameter 32 }*   DATA_W $end
$var wire     64 H&   input_a [63:0] $end
$var wire     64 j&   input_b [63:0] $end
$var wire      1 B&   select_a  $end
$var reg      64 ~*   mux_out [63:0] $end
$upscope $end


$scope module alu $end
$var parameter 32 !+   DATA_W $end
$var wire     64 i&   alu_in_0 [63:0] $end
$var wire     64 O&   alu_in_1 [63:0] $end
$var wire      4 R&   alu_ctrl [3:0] $end
$var reg      64 "+   alu_out [63:0] $end
$var reg       1 #+   zero_flag $end
$var reg       1 $+   overflow $end
$var parameter  4 %+   AND_OP [3:0] $end
$var parameter  4 &+   OR_OP [3:0] $end
$var parameter  4 '+   ADD_OP [3:0] $end
$var parameter  4 (+   SLL_OP [3:0] $end
$var parameter  4 )+   SRL_OP [3:0] $end
$var parameter  4 *+   SUB_OP [3:0] $end
$var parameter  4 ++   SLT_OP [3:0] $end
$var parameter  4 ,+   MUL_OP [3:0] $end
$var reg      64 -+   sub_out [63:0] $end
$var reg      64 .+   add_out [63:0] $end
$var reg      64 /+   and_out [63:0] $end
$var reg      64 0+   or_out [63:0] $end
$var reg      64 1+   nor_out [63:0] $end
$var reg      64 2+   slt_out [63:0] $end
$var reg      64 3+   sll_out [63:0] $end
$var reg      64 4+   srl_out [63:0] $end
$var reg      64 5+   mul_out [63:0] $end
$var reg       1 6+   overflow_add $end
$var reg       1 7+   overflow_sub $end
$var reg       1 8+   msb_equal_flag $end
$upscope $end


$scope module forwarding_unitt $end
$var wire      1 X&   WB__EX_MEM  $end
$var wire      1 b&   WB__MEM_WB  $end
$var wire      5 ^&   RD__EX_MEM [4:0] $end
$var wire      5 e&   RD__MEM_WB [4:0] $end
$var wire      5 k&   RS1__ID_EX [4:0] $end
$var wire      5 l&   RS2__ID_EX [4:0] $end
$var reg       2 9+   MUX_A [1:0] $end
$var reg       2 :+   MUX_B [1:0] $end
$var reg       2 ;+   reg_A [1:0] $end
$var reg       2 <+   reg_B [1:0] $end
$upscope $end


$scope module branch_unit $end
$var parameter 32 =+   DATA_W $end
$var wire     64 E&   updated_pc [63:0] $end
$var wire     64 H&   immediate_extended [63:0] $end
$var reg      64 >+   branch_pc [63:0] $end
$var reg      64 ?+   jump_pc [63:0] $end
$var parameter 64 @+   PC_INCREASE [63:0] $end
$upscope $end


$scope module regdst_EXMEM $end
$var parameter 32 A+   DATA_W $end
$var parameter 32 B+   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 =&   din [0] $end
$var wire      1 S&   dout [0] $end
$var reg       1 C+   r [0:0] $end
$var reg       1 D+   nxt [0:0] $end
$upscope $end


$scope module branch_EXMEM $end
$var parameter 32 E+   DATA_W $end
$var parameter 32 F+   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 >&   din [0] $end
$var wire      1 T&   dout [0] $end
$var reg       1 G+   r [0:0] $end
$var reg       1 H+   nxt [0:0] $end
$upscope $end


$scope module memread_EXMEM $end
$var parameter 32 I+   DATA_W $end
$var parameter 32 J+   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 ?&   din [0] $end
$var wire      1 U&   dout [0] $end
$var reg       1 K+   r [0:0] $end
$var reg       1 L+   nxt [0:0] $end
$upscope $end


$scope module mem2reg_EXMEM $end
$var parameter 32 M+   DATA_W $end
$var parameter 32 N+   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 @&   din [0] $end
$var wire      1 V&   dout [0] $end
$var reg       1 O+   r [0:0] $end
$var reg       1 P+   nxt [0:0] $end
$upscope $end


$scope module memwrite_EXMEM $end
$var parameter 32 Q+   DATA_W $end
$var parameter 32 R+   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 A&   din [0] $end
$var wire      1 W&   dout [0] $end
$var reg       1 S+   r [0:0] $end
$var reg       1 T+   nxt [0:0] $end
$upscope $end


$scope module regwrite_EXMEM $end
$var parameter 32 U+   DATA_W $end
$var parameter 32 V+   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 C&   din [0] $end
$var wire      1 X&   dout [0] $end
$var reg       1 W+   r [0:0] $end
$var reg       1 X+   nxt [0:0] $end
$upscope $end


$scope module jump_EXMEM $end
$var parameter 32 Y+   DATA_W $end
$var parameter 32 Z+   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 D&   din [0] $end
$var wire      1 Y&   dout [0] $end
$var reg       1 [+   r [0:0] $end
$var reg       1 \+   nxt [0:0] $end
$upscope $end


$scope module PC_EXMEM $end
$var parameter 32 ]+   DATA_W $end
$var parameter 32 ^+   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire     64 E&   din [63:0] $end
$var wire     64 Z&   dout [63:0] $end
$var reg      64 _+   r [63:0] $end
$var reg      64 `+   nxt [63:0] $end
$upscope $end


$scope module zero_EXMEM $end
$var parameter 32 a+   DATA_W $end
$var parameter 32 b+   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 Q&   din [0] $end
$var wire      1 [&   dout [0] $end
$var reg       1 c+   r [0:0] $end
$var reg       1 d+   nxt [0:0] $end
$upscope $end


$scope module aluout_EXMEM $end
$var parameter 32 e+   DATA_W $end
$var parameter 32 f+   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire     64 P&   din [63:0] $end
$var wire     64 \&   dout [63:0] $end
$var reg      64 g+   r [63:0] $end
$var reg      64 h+   nxt [63:0] $end
$upscope $end


$scope module readdata2_EXMEM $end
$var parameter 32 i+   DATA_W $end
$var parameter 32 j+   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire     64 G&   din [63:0] $end
$var wire     64 ]&   dout [63:0] $end
$var reg      64 k+   r [63:0] $end
$var reg      64 l+   nxt [63:0] $end
$upscope $end


$scope module waddr_EXMEM $end
$var parameter 32 m+   DATA_W $end
$var parameter 32 n+   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      5 L&   din [4:0] $end
$var wire      5 ^&   dout [4:0] $end
$var reg       5 o+   r [4:0] $end
$var reg       5 p+   nxt [4:0] $end
$upscope $end


$scope module data_memory $end
$var parameter 32 q+   ADDR_W $end
$var wire      1 _%   clk  $end
$var wire     64 \&   addr [63:0] $end
$var wire     64 f%   addr_ext [63:0] $end
$var wire      1 W&   wen  $end
$var wire      1 g%   wen_ext  $end
$var wire      1 U&   ren  $end
$var wire      1 h%   ren_ext  $end
$var wire     64 ]&   wdata [63:0] $end
$var wire     64 i%   wdata_ext [63:0] $end
$var reg      64 r+   rdata [63:0] $end
$var reg      64 s+   rdata_ext [63:0] $end
$var parameter 32 t+   SEL_W $end
$var parameter 32 u+   MACRO_DEPTH $end
$var parameter 32 v+   N_MEMS $end
$var reg       7 w+   addr_i [6:0] $end
$var reg       7 x+   addr_ext_i [6:0] $end
$var reg       1 y+   mem_sel [0:0] $end
$var reg       1 z+   mem_sel_ext [0:0] $end
$var wire     64 {+   data_i [0] $end
$var wire     64 |+   data_ext_i [0] $end
$var reg       1 }+   cs_i [0:0] $end
$var reg       1 ~+   cs_ext_i [0:0] $end
$var reg       1 !,   web0 $end
$var reg       1 ",   web1 $end
$var reg       1 #,   csb0 $end
$var reg       1 $,   csb1 $end

$scope begin process_for_mem[0] $end
$var parameter 32 %,   index_depth $end

$scope module spad_inst $end
$var parameter 32 &,   DATA_WIDTH $end
$var parameter 32 ',   ADDR_WIDTH $end
$var parameter 32 (,   RAM_DEPTH $end
$var parameter 32 ),   DELAY $end
$var parameter 32 *,   VERBOSE $end
$var parameter 32 +,   T_HOLD $end
$var wire      1 ,,   clk0  $end
$var wire      1 -,   csb0  $end
$var wire      1 .,   web0  $end
$var wire      7 /,   addr0 [6:0] $end
$var wire     64 ]&   din0 [63:0] $end
$var reg      64 0,   dout0 [63:0] $end
$var wire      1 1,   clk1  $end
$var wire      1 2,   csb1  $end
$var wire      1 3,   web1  $end
$var wire      7 4,   addr1 [6:0] $end
$var wire     64 i%   din1 [63:0] $end
$var reg      64 5,   dout1 [63:0] $end
$var reg      64 6,   mem[0] [63:0] $end
$var reg      64 7,   mem[1] [63:0] $end
$var reg      64 8,   mem[2] [63:0] $end
$var reg      64 9,   mem[3] [63:0] $end
$var reg      64 :,   mem[4] [63:0] $end
$var reg      64 ;,   mem[5] [63:0] $end
$var reg      64 <,   mem[6] [63:0] $end
$var reg      64 =,   mem[7] [63:0] $end
$var reg      64 >,   mem[8] [63:0] $end
$var reg      64 ?,   mem[9] [63:0] $end
$var reg      64 @,   mem[10] [63:0] $end
$var reg      64 A,   mem[11] [63:0] $end
$var reg      64 B,   mem[12] [63:0] $end
$var reg      64 C,   mem[13] [63:0] $end
$var reg      64 D,   mem[14] [63:0] $end
$var reg      64 E,   mem[15] [63:0] $end
$var reg      64 F,   mem[16] [63:0] $end
$var reg      64 G,   mem[17] [63:0] $end
$var reg      64 H,   mem[18] [63:0] $end
$var reg      64 I,   mem[19] [63:0] $end
$var reg      64 J,   mem[20] [63:0] $end
$var reg      64 K,   mem[21] [63:0] $end
$var reg      64 L,   mem[22] [63:0] $end
$var reg      64 M,   mem[23] [63:0] $end
$var reg      64 N,   mem[24] [63:0] $end
$var reg      64 O,   mem[25] [63:0] $end
$var reg      64 P,   mem[26] [63:0] $end
$var reg      64 Q,   mem[27] [63:0] $end
$var reg      64 R,   mem[28] [63:0] $end
$var reg      64 S,   mem[29] [63:0] $end
$var reg      64 T,   mem[30] [63:0] $end
$var reg      64 U,   mem[31] [63:0] $end
$var reg      64 V,   mem[32] [63:0] $end
$var reg      64 W,   mem[33] [63:0] $end
$var reg      64 X,   mem[34] [63:0] $end
$var reg      64 Y,   mem[35] [63:0] $end
$var reg      64 Z,   mem[36] [63:0] $end
$var reg      64 [,   mem[37] [63:0] $end
$var reg      64 \,   mem[38] [63:0] $end
$var reg      64 ],   mem[39] [63:0] $end
$var reg      64 ^,   mem[40] [63:0] $end
$var reg      64 _,   mem[41] [63:0] $end
$var reg      64 `,   mem[42] [63:0] $end
$var reg      64 a,   mem[43] [63:0] $end
$var reg      64 b,   mem[44] [63:0] $end
$var reg      64 c,   mem[45] [63:0] $end
$var reg      64 d,   mem[46] [63:0] $end
$var reg      64 e,   mem[47] [63:0] $end
$var reg      64 f,   mem[48] [63:0] $end
$var reg      64 g,   mem[49] [63:0] $end
$var reg      64 h,   mem[50] [63:0] $end
$var reg      64 i,   mem[51] [63:0] $end
$var reg      64 j,   mem[52] [63:0] $end
$var reg      64 k,   mem[53] [63:0] $end
$var reg      64 l,   mem[54] [63:0] $end
$var reg      64 m,   mem[55] [63:0] $end
$var reg      64 n,   mem[56] [63:0] $end
$var reg      64 o,   mem[57] [63:0] $end
$var reg      64 p,   mem[58] [63:0] $end
$var reg      64 q,   mem[59] [63:0] $end
$var reg      64 r,   mem[60] [63:0] $end
$var reg      64 s,   mem[61] [63:0] $end
$var reg      64 t,   mem[62] [63:0] $end
$var reg      64 u,   mem[63] [63:0] $end
$var reg      64 v,   mem[64] [63:0] $end
$var reg      64 w,   mem[65] [63:0] $end
$var reg      64 x,   mem[66] [63:0] $end
$var reg      64 y,   mem[67] [63:0] $end
$var reg      64 z,   mem[68] [63:0] $end
$var reg      64 {,   mem[69] [63:0] $end
$var reg      64 |,   mem[70] [63:0] $end
$var reg      64 },   mem[71] [63:0] $end
$var reg      64 ~,   mem[72] [63:0] $end
$var reg      64 !-   mem[73] [63:0] $end
$var reg      64 "-   mem[74] [63:0] $end
$var reg      64 #-   mem[75] [63:0] $end
$var reg      64 $-   mem[76] [63:0] $end
$var reg      64 %-   mem[77] [63:0] $end
$var reg      64 &-   mem[78] [63:0] $end
$var reg      64 '-   mem[79] [63:0] $end
$var reg      64 (-   mem[80] [63:0] $end
$var reg      64 )-   mem[81] [63:0] $end
$var reg      64 *-   mem[82] [63:0] $end
$var reg      64 +-   mem[83] [63:0] $end
$var reg      64 ,-   mem[84] [63:0] $end
$var reg      64 --   mem[85] [63:0] $end
$var reg      64 .-   mem[86] [63:0] $end
$var reg      64 /-   mem[87] [63:0] $end
$var reg      64 0-   mem[88] [63:0] $end
$var reg      64 1-   mem[89] [63:0] $end
$var reg      64 2-   mem[90] [63:0] $end
$var reg      64 3-   mem[91] [63:0] $end
$var reg      64 4-   mem[92] [63:0] $end
$var reg      64 5-   mem[93] [63:0] $end
$var reg      64 6-   mem[94] [63:0] $end
$var reg      64 7-   mem[95] [63:0] $end
$var reg      64 8-   mem[96] [63:0] $end
$var reg      64 9-   mem[97] [63:0] $end
$var reg      64 :-   mem[98] [63:0] $end
$var reg      64 ;-   mem[99] [63:0] $end
$var reg      64 <-   mem[100] [63:0] $end
$var reg      64 =-   mem[101] [63:0] $end
$var reg      64 >-   mem[102] [63:0] $end
$var reg      64 ?-   mem[103] [63:0] $end
$var reg      64 @-   mem[104] [63:0] $end
$var reg      64 A-   mem[105] [63:0] $end
$var reg      64 B-   mem[106] [63:0] $end
$var reg      64 C-   mem[107] [63:0] $end
$var reg      64 D-   mem[108] [63:0] $end
$var reg      64 E-   mem[109] [63:0] $end
$var reg      64 F-   mem[110] [63:0] $end
$var reg      64 G-   mem[111] [63:0] $end
$var reg      64 H-   mem[112] [63:0] $end
$var reg      64 I-   mem[113] [63:0] $end
$var reg      64 J-   mem[114] [63:0] $end
$var reg      64 K-   mem[115] [63:0] $end
$var reg      64 L-   mem[116] [63:0] $end
$var reg      64 M-   mem[117] [63:0] $end
$var reg      64 N-   mem[118] [63:0] $end
$var reg      64 O-   mem[119] [63:0] $end
$var reg      64 P-   mem[120] [63:0] $end
$var reg      64 Q-   mem[121] [63:0] $end
$var reg      64 R-   mem[122] [63:0] $end
$var reg      64 S-   mem[123] [63:0] $end
$var reg      64 T-   mem[124] [63:0] $end
$var reg      64 U-   mem[125] [63:0] $end
$var reg      64 V-   mem[126] [63:0] $end
$var reg      64 W-   mem[127] [63:0] $end
$upscope $end

$upscope $end

$upscope $end


$scope module regdst_MEMWB $end
$var parameter 32 X-   DATA_W $end
$var parameter 32 Y-   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 S&   din [0] $end
$var wire      1 `&   dout [0] $end
$var reg       1 Z-   r [0:0] $end
$var reg       1 [-   nxt [0:0] $end
$upscope $end


$scope module mem2reg_MEMWB $end
$var parameter 32 \-   DATA_W $end
$var parameter 32 ]-   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 V&   din [0] $end
$var wire      1 a&   dout [0] $end
$var reg       1 ^-   r [0:0] $end
$var reg       1 _-   nxt [0:0] $end
$upscope $end


$scope module regwrite_MEMWB $end
$var parameter 32 `-   DATA_W $end
$var parameter 32 a-   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      1 X&   din [0] $end
$var wire      1 b&   dout [0] $end
$var reg       1 b-   r [0:0] $end
$var reg       1 c-   nxt [0:0] $end
$upscope $end


$scope module mem_data_MEMWB $end
$var parameter 32 d-   DATA_W $end
$var parameter 32 e-   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire     64 _&   din [63:0] $end
$var wire     64 c&   dout [63:0] $end
$var reg      64 f-   r [63:0] $end
$var reg      64 g-   nxt [63:0] $end
$upscope $end


$scope module aluout_MEMWB $end
$var parameter 32 h-   DATA_W $end
$var parameter 32 i-   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire     64 \&   din [63:0] $end
$var wire     64 d&   dout [63:0] $end
$var reg      64 j-   r [63:0] $end
$var reg      64 k-   nxt [63:0] $end
$upscope $end


$scope module waddr_MEMWB $end
$var parameter 32 l-   DATA_W $end
$var parameter 32 m-   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire      5 ^&   din [4:0] $end
$var wire      5 e&   dout [4:0] $end
$var reg       5 n-   r [4:0] $end
$var reg       5 o-   nxt [4:0] $end
$upscope $end


$scope module regfile_data_mux $end
$var parameter 32 p-   DATA_W $end
$var wire     64 c&   input_a [63:0] $end
$var wire     64 d&   input_b [63:0] $end
$var wire      1 a&   select_a  $end
$var reg      64 q-   mux_out [63:0] $end
$upscope $end

$upscope $end


$scope task debug_regfile $end
$var integer  32 r-   i $end
$upscope $end


$scope task test_basic $end
$var integer  32 s-   i $end
$var integer  32 t-   j $end
$var integer  32 u-   ref_reg_idx[0] $end
$var integer  32 v-   ref_reg_idx[1] $end
$var integer  32 w-   ref_reg_idx[2] $end
$var integer  32 x-   ref_reg_idx[3] $end
$var integer  32 y-   ref_reg_idx[4] $end
$var integer  32 z-   ref_reg_idx[5] $end
$var integer  32 {-   ref_reg_idx[6] $end
$var integer  32 |-   ref_reg_idx[7] $end
$var integer  32 }-   ref_reg_idx[8] $end
$var integer  32 ~-   ref_reg_idx[9] $end
$var integer  32 !.   ref_reg_idx[10] $end
$var integer  32 ".   ref_reg_idx[11] $end
$var integer  32 #.   ref_reg_idx[12] $end
$var integer  32 $.   ref_reg_idx[13] $end
$var integer  32 %.   ref_reg_idx[14] $end
$var integer  32 &.   ref_reg_idx[15] $end
$var integer  32 '.   ref_reg_idx[16] $end
$var integer  32 (.   ref_reg_idx[17] $end
$var integer  32 ).   ref_reg_idx[18] $end
$var integer  32 *.   ref_reg_idx[19] $end
$var integer  32 +.   ref_reg_idx[20] $end
$var integer  32 ,.   ref_reg_idx[21] $end
$var integer  32 -.   ref_reg_idx[22] $end
$var integer  32 ..   ref_reg_idx[23] $end
$var integer  32 /.   ref_reg_idx[24] $end
$var integer  32 0.   ref_reg_idx[25] $end
$var integer  32 1.   ref_reg_idx[26] $end
$var integer  32 2.   ref_reg_idx[27] $end
$var integer  32 3.   ref_reg_idx[28] $end
$var integer  32 4.   ref_reg_idx[29] $end
$var integer  32 5.   ref_reg_idx[30] $end
$var integer  32 6.   ref_reg_idx[31] $end
$var integer  32 7.   ref_reg_idx[32] $end
$var integer  32 8.   ref_reg_idx[33] $end
$var integer  32 9.   ref_reg_idx[34] $end
$var integer  32 :.   ref_reg_idx[35] $end
$var integer  32 ;.   ref_reg_idx[36] $end
$var integer  32 <.   ref_reg_idx[37] $end
$var integer  32 =.   ref_reg_idx[38] $end
$var integer  32 >.   ref_reg_idx[39] $end
$var integer  32 ?.   ref_reg_idx[40] $end
$var integer  32 @.   ref_reg_idx[41] $end
$var integer  32 A.   ref_reg_idx[42] $end
$var integer  32 B.   ref_reg_idx[43] $end
$var integer  32 C.   ref_reg_idx[44] $end
$var integer  32 D.   ref_reg_idx[45] $end
$var integer  32 E.   ref_reg_idx[46] $end
$var integer  32 F.   ref_reg_idx[47] $end
$var integer  32 G.   ref_reg_idx[48] $end
$var integer  32 H.   ref_reg_idx[49] $end
$var integer  32 I.   ref_reg_idx[50] $end
$var integer  32 J.   ref_reg_idx[51] $end
$var integer  32 K.   ref_reg_idx[52] $end
$var integer  32 L.   ref_reg_idx[53] $end
$var integer  32 M.   ref_reg_idx[54] $end
$var integer  32 N.   ref_reg_idx[55] $end
$var integer  32 O.   ref_reg_idx[56] $end
$var integer  32 P.   ref_reg_idx[57] $end
$var integer  32 Q.   ref_reg_idx[58] $end
$var integer  32 R.   ref_reg_idx[59] $end
$var integer  32 S.   ref_reg_idx[60] $end
$var integer  32 T.   ref_reg_idx[61] $end
$var integer  32 U.   ref_reg_idx[62] $end
$var integer  32 V.   ref_reg_idx[63] $end
$var integer  32 W.   ref_reg_idx[64] $end
$var integer  32 X.   ref_reg_idx[65] $end
$var integer  32 Y.   ref_reg_idx[66] $end
$var integer  32 Z.   ref_reg_idx[67] $end
$var integer  32 [.   ref_reg_idx[68] $end
$var integer  32 \.   ref_reg_idx[69] $end
$var integer  32 ].   ref_reg_idx[70] $end
$var integer  32 ^.   ref_reg_idx[71] $end
$var integer  32 _.   ref_reg_idx[72] $end
$var integer  32 `.   ref_reg_idx[73] $end
$var integer  32 a.   ref_reg_idx[74] $end
$var integer  32 b.   ref_reg_idx[75] $end
$var integer  32 c.   ref_reg_idx[76] $end
$var integer  32 d.   ref_reg_idx[77] $end
$var integer  32 e.   ref_reg_idx[78] $end
$var integer  32 f.   ref_reg_idx[79] $end
$var integer  32 g.   ref_reg_idx[80] $end
$var integer  32 h.   ref_reg_idx[81] $end
$var integer  32 i.   ref_reg_idx[82] $end
$var integer  32 j.   ref_reg_idx[83] $end
$var integer  32 k.   ref_reg_idx[84] $end
$var integer  32 l.   ref_reg_idx[85] $end
$var integer  32 m.   ref_reg_idx[86] $end
$var integer  32 n.   ref_reg_idx[87] $end
$var integer  32 o.   ref_reg_idx[88] $end
$var integer  32 p.   ref_reg_idx[89] $end
$var integer  32 q.   ref_reg_idx[90] $end
$var integer  32 r.   ref_reg_idx[91] $end
$var integer  32 s.   ref_reg_idx[92] $end
$var integer  32 t.   ref_reg_idx[93] $end
$var integer  32 u.   ref_reg_idx[94] $end
$var integer  32 v.   ref_reg_idx[95] $end
$var integer  32 w.   ref_reg_idx[96] $end
$var integer  32 x.   ref_reg_idx[97] $end
$var integer  32 y.   ref_reg_idx[98] $end
$var integer  32 z.   ref_reg_idx[99] $end
$var integer  32 {.   ref_reg_idx[100] $end
$var integer  32 |.   ref_reg_idx[101] $end
$var integer  32 }.   ref_reg_idx[102] $end
$var integer  32 ~.   ref_reg_idx[103] $end
$var integer  32 !/   ref_reg_idx[104] $end
$var integer  32 "/   ref_reg_idx[105] $end
$var integer  32 #/   ref_reg_idx[106] $end
$var integer  32 $/   ref_reg_idx[107] $end
$var integer  32 %/   ref_reg_idx[108] $end
$var integer  32 &/   ref_reg_idx[109] $end
$var integer  32 '/   ref_reg_idx[110] $end
$var integer  32 (/   ref_reg_idx[111] $end
$var integer  32 )/   ref_reg_idx[112] $end
$var integer  32 */   ref_reg_idx[113] $end
$var integer  32 +/   ref_reg_idx[114] $end
$var integer  32 ,/   ref_reg_idx[115] $end
$var integer  32 -/   ref_reg_idx[116] $end
$var integer  32 ./   ref_reg_idx[117] $end
$var integer  32 //   ref_reg_idx[118] $end
$var integer  32 0/   ref_reg_idx[119] $end
$var integer  32 1/   ref_reg_idx[120] $end
$var integer  32 2/   ref_reg_idx[121] $end
$var integer  32 3/   ref_reg_idx[122] $end
$var integer  32 4/   ref_reg_idx[123] $end
$var integer  32 5/   ref_reg_idx[124] $end
$var integer  32 6/   ref_reg_idx[125] $end
$var integer  32 7/   ref_reg_idx[126] $end
$var integer  32 8/   ref_reg_idx[127] $end
$upscope $end


$scope task test_mult_4 $end
$var integer  32 9/   i $end
$var integer  32 :/   j $end
$var reg       1 ;/   error_flag $end
$var reg      64 </   result_mem_mult4[0] [63:0] $end
$var reg      64 =/   result_mem_mult4[1] [63:0] $end
$var reg      64 >/   result_mem_mult4[2] [63:0] $end
$var reg      64 ?/   result_mem_mult4[3] [63:0] $end
$var reg      64 @/   result_mem_mult4[4] [63:0] $end
$var reg      64 A/   result_mem_mult4[5] [63:0] $end
$var reg      64 B/   result_mem_mult4[6] [63:0] $end
$var reg      64 C/   result_mem_mult4[7] [63:0] $end
$var reg      64 D/   result_mem_mult4[8] [63:0] $end
$var reg      64 E/   result_mem_mult4[9] [63:0] $end
$var reg      64 F/   result_mem_mult4[10] [63:0] $end
$var reg      64 G/   result_mem_mult4[11] [63:0] $end
$var reg      64 H/   result_mem_mult4[12] [63:0] $end
$var reg      64 I/   result_mem_mult4[13] [63:0] $end
$var reg      64 J/   result_mem_mult4[14] [63:0] $end
$var reg      64 K/   result_mem_mult4[15] [63:0] $end
$var reg      64 L/   result_mem_mult4[16] [63:0] $end
$var reg      64 M/   result_mem_mult4[17] [63:0] $end
$var reg      64 N/   result_mem_mult4[18] [63:0] $end
$var reg      64 O/   result_mem_mult4[19] [63:0] $end
$var reg      64 P/   result_mem_mult4[20] [63:0] $end
$var reg      64 Q/   result_mem_mult4[21] [63:0] $end
$var reg      64 R/   result_mem_mult4[22] [63:0] $end
$var reg      64 S/   result_mem_mult4[23] [63:0] $end
$var reg      64 T/   result_mem_mult4[24] [63:0] $end
$var reg      64 U/   result_mem_mult4[25] [63:0] $end
$var reg      64 V/   result_mem_mult4[26] [63:0] $end
$var reg      64 W/   result_mem_mult4[27] [63:0] $end
$var reg      64 X/   result_mem_mult4[28] [63:0] $end
$var reg      64 Y/   result_mem_mult4[29] [63:0] $end
$var reg      64 Z/   result_mem_mult4[30] [63:0] $end
$var reg      64 [/   result_mem_mult4[31] [63:0] $end
$var reg      64 \/   result_mem_mult4[32] [63:0] $end
$var reg      64 ]/   result_mem_mult4[33] [63:0] $end
$var reg      64 ^/   result_mem_mult4[34] [63:0] $end
$var reg      64 _/   result_mem_mult4[35] [63:0] $end
$var reg      64 `/   result_mem_mult4[36] [63:0] $end
$var reg      64 a/   result_mem_mult4[37] [63:0] $end
$var reg      64 b/   result_mem_mult4[38] [63:0] $end
$var reg      64 c/   result_mem_mult4[39] [63:0] $end
$var reg      64 d/   result_mem_mult4[40] [63:0] $end
$var reg      64 e/   result_mem_mult4[41] [63:0] $end
$var reg      64 f/   result_mem_mult4[42] [63:0] $end
$var reg      64 g/   result_mem_mult4[43] [63:0] $end
$var reg      64 h/   result_mem_mult4[44] [63:0] $end
$var reg      64 i/   result_mem_mult4[45] [63:0] $end
$var reg      64 j/   result_mem_mult4[46] [63:0] $end
$upscope $end


$scope task cnt_and_wait $end
$var reg      32 k/   stop_counter [31:0] $end
$var integer  32 l/   cnt_cycles $end
$upscope $end


$scope task wait_for_STOP_instruction $end
$var integer  32 m/   counter_result $end
$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
b1000000 p-
b0 m-
b101 l-
b0 i-
b1000000 h-
b0 e-
b1000000 d-
b0 a-
b1 `-
b0 ]-
b1 \-
b0 Y-
b1 X-
b1 +,
b1 *,
b0 ),
b10000000 (,
b111 ',
b1000000 &,
b0 %,
b1 v+
b10000000 u+
b0 t+
b1010 q+
b0 n+
b101 m+
b0 j+
b1000000 i+
b0 f+
b1000000 e+
b0 b+
b1 a+
b0 ^+
b1000000 ]+
b0 Z+
b1 Y+
b0 V+
b1 U+
b0 R+
b1 Q+
b0 N+
b1 M+
b0 J+
b1 I+
b0 F+
b1 E+
b0 B+
b1 A+
b100 @+
b1000000 =+
b1000 ,+
b111 ++
b110 *+
b100 )+
b11 (+
b10 '+
b1 &+
b0 %+
b1000000 !+
b1000000 }*
b1000 {*
b1101 z*
b1001 y*
b1010 x*
b10110 w*
b111 v*
b10000 u*
b0 t*
b1000 r*
b111 q*
b110 p*
b100 o*
b11 n*
b10 m*
b1 l*
b0 k*
b10 j*
b1 i*
b0 h*
b1000000 e*
b1000000 c*
b0 `*
b101 _*
b0 \*
b101 [*
b0 X*
b11 W*
b0 T*
b1 S*
b0 P*
b1 O*
b0 L*
b101 K*
b0 H*
b1000000 G*
b0 D*
b1000000 C*
b0 @*
b1000000 ?*
b0 <*
b1000000 ;*
b0 8*
b1 7*
b0 4*
b1 3*
b0 0*
b1 /*
b0 ,*
b1 +*
b0 (*
b1 '*
b0 $*
b1 #*
b0 ~)
b1 })
b0 z)
b1 y)
b0 v)
b10 u)
b100011 t)
b11 s)
b1101111 r)
b1100011 q)
b10011 p)
b110011 o)
b100000 ))
b1000000 &)
b10 %)
b1 $)
b0 #)
b100011 ")
b11 !)
b1101111 ~(
b1100011 }(
b10011 |(
b110011 {(
b0 o(
b100000 n(
b0 k(
b1000000 j(
b1 ='
b1 <'
b0 ;'
b10000000 :'
b111 9'
b100000 8'
b0 7'
b1 *'
b10000000 )'
b0 ('
b1001 "'
b0 |&
b1000000 {&
b1000000 y&
b1000000 u&
b100 p&
b1000000 m&
b10000000 x"
b10000000 2
b10000000 1
0!
0"
b0 #
0$
0%
b0 &
b0 '
0(
0)
b0 *
bx +
bx ,
0-
b110010 .
bx /
bx 0
bx 3
bx 4
bx 5
bx 6
bx 7
bx 8
bx 9
bx :
bx ;
bx <
bx =
bx >
bx ?
bx @
bx A
bx B
bx C
bx D
bx E
bx F
bx G
bx H
bx I
bx J
bx K
bx L
bx M
bx N
bx O
bx P
bx Q
bx R
bx S
bx T
bx U
bx V
bx W
bx X
bx Y
bx Z
bx [
bx \
bx ]
bx ^
bx _
bx `
bx a
bx b
bx c
bx d
bx e
bx f
bx g
bx h
bx i
bx j
bx k
bx l
bx m
bx n
bx o
bx p
bx q
bx r
bx s
bx t
bx u
bx v
bx w
bx x
bx y
bx z
bx {
bx |
bx }
bx ~
bx !!
bx "!
bx #!
bx $!
bx %!
bx &!
bx '!
bx (!
bx )!
bx *!
bx +!
bx ,!
bx -!
bx .!
bx /!
bx 0!
bx 1!
bx 2!
bx 3!
bx 4!
bx 5!
bx 6!
bx 7!
bx 8!
bx 9!
bx :!
bx ;!
bx <!
bx =!
bx >!
bx ?!
bx @!
bx A!
bx B!
bx C!
bx D!
bx E!
bx F!
bx G!
bx H!
bx I!
bx J!
bx K!
bx L!
bx M!
bx N!
bx O!
bx P!
bx Q!
bx R!
bx S!
bx T!
bx U!
bx V!
bx W!
bx X!
bx Y!
bx Z!
bx [!
bx \!
bx ]!
bx ^!
bx _!
bx `!
bx a!
bx b!
bx c!
bx d!
bx e!
bx f!
bx g!
bx h!
bx i!
bx j!
bx k!
bx l!
bx m!
bx n!
bx o!
bx p!
bx q!
bx r!
bx s!
bx t!
bx u!
bx v!
bx w!
bx x!
bx y!
bx z!
bx {!
bx |!
bx }!
bx ~!
bx !"
bx ""
bx #"
bx $"
bx %"
bx &"
bx '"
bx ("
bx )"
bx *"
bx +"
bx ,"
bx -"
bx ."
bx /"
bx 0"
bx 1"
bx 2"
bx 3"
bx 4"
bx 5"
bx 6"
bx 7"
bx 8"
bx 9"
bx :"
bx ;"
bx <"
bx ="
bx >"
bx ?"
bx @"
bx A"
bx B"
bx C"
bx D"
bx E"
bx F"
bx G"
bx H"
bx I"
bx J"
bx K"
bx L"
bx M"
bx N"
bx O"
bx P"
bx Q"
bx R"
bx S"
bx T"
bx U"
bx V"
bx W"
bx X"
bx Y"
bx Z"
bx ["
bx \"
bx ]"
bx ^"
bx _"
bx `"
bx a"
bx b"
bx c"
bx d"
bx e"
bx f"
bx g"
bx h"
bx i"
bx j"
bx k"
bx l"
bx m"
bx n"
bx o"
bx p"
bx q"
bx r"
bx s"
bx t"
bx u"
bx v"
bx w"
bx y"
bx z"
bx {"
bx |"
bx }"
bx ~"
bx !#
bx "#
bx ##
bx $#
bx %#
bx &#
bx '#
bx (#
bx )#
bx *#
bx +#
bx ,#
bx -#
bx .#
bx /#
bx 0#
bx 1#
bx 2#
bx 3#
bx 4#
bx 5#
bx 6#
bx 7#
bx 8#
bx 9#
bx :#
bx ;#
bx <#
bx =#
bx >#
bx ?#
bx @#
bx A#
bx B#
bx C#
bx D#
bx E#
bx F#
bx G#
bx H#
bx I#
bx J#
bx K#
bx L#
bx M#
bx N#
bx O#
bx P#
bx Q#
bx R#
bx S#
bx T#
bx U#
bx V#
bx W#
bx X#
bx Y#
bx Z#
bx [#
bx \#
bx ]#
bx ^#
bx _#
bx `#
bx a#
bx b#
bx c#
bx d#
bx e#
bx f#
bx g#
bx h#
bx i#
bx j#
bx k#
bx l#
bx m#
bx n#
bx o#
bx p#
bx q#
bx r#
bx s#
bx t#
bx u#
bx v#
bx w#
bx x#
bx y#
bx z#
bx {#
bx |#
bx }#
bx ~#
bx !$
bx "$
bx #$
bx $$
bx %$
bx &$
bx '$
bx ($
bx )$
bx *$
bx +$
bx ,$
bx -$
bx .$
bx /$
bx 0$
bx 1$
bx 2$
bx 3$
bx 4$
bx 5$
bx 6$
bx 7$
bx 8$
bx 9$
bx :$
bx ;$
bx <$
bx =$
bx >$
bx ?$
bx @$
bx A$
bx B$
bx C$
bx D$
bx E$
bx F$
bx G$
bx H$
bx I$
bx J$
bx K$
bx L$
bx M$
bx N$
bx O$
bx P$
bx Q$
bx R$
bx S$
bx T$
bx U$
bx V$
bx W$
bx X$
bx Y$
bx Z$
bx [$
bx \$
bx ]$
bx ^$
bx _$
bx `$
bx a$
bx b$
bx c$
bx d$
bx e$
bx f$
bx g$
bx h$
bx i$
bx j$
bx k$
bx l$
bx m$
bx n$
bx o$
bx p$
bx q$
bx r$
bx s$
bx t$
bx u$
bx v$
bx w$
bx x$
bx y$
bx z$
bx {$
bx |$
bx }$
bx ~$
bx !%
bx "%
bx #%
bx $%
bx %%
bx &%
bx '%
bx (%
bx )%
bx *%
bx +%
bx ,%
bx -%
bx .%
bx /%
bx 0%
bx 1%
bx 2%
bx 3%
bx 4%
bx 5%
bx 6%
bx 7%
bx 8%
bx 9%
bx :%
bx ;%
bx <%
bx =%
bx >%
bx ?%
bx @%
bx A%
bx B%
bx C%
bx D%
bx E%
bx F%
bx G%
bx H%
bx I%
bx J%
bx K%
bx L%
bx M%
bx N%
bx O%
bx P%
bx Q%
bx R%
bx S%
bx T%
bx U%
bx V%
bx W%
bx X%
bx Y%
bx Z%
bx [%
bx \%
bx ]%
bx ^%
0_%
0`%
0a%
b0 b%
0c%
0d%
b0 e%
b0 f%
0g%
0h%
b0 i%
bx j%
b100 k%
b0 l%
b0 m%
0n%
0o%
0p%
0q%
0r%
0s%
0t%
0u%
0v%
0w%
0x%
0y%
0z%
0{%
0|%
0}%
0~%
0!&
0"&
0#&
0$&
0%&
0&&
0'&
0(&
0)&
0*&
0+&
0,&
0-&
0.&
0/&
x0&
01&
02&
03&
04&
05&
06&
07&
b10 8&
b0 9&
b0 :&
bx ;&
b0 <&
0=&
0>&
0?&
0@&
0A&
0B&
0C&
0D&
b0 E&
b0 F&
b0 G&
b0 H&
0I&
0J&
b0 K&
b0 L&
b1111111111111111111111111111111111111111111111111111111111111100 M&
b1111111111111111111111111111111111111111111111111111111111111100 N&
b0 O&
b0 P&
1Q&
b10 R&
0S&
0T&
0U&
0V&
0W&
0X&
0Y&
b0 Z&
0[&
b0 \&
b0 ]&
b0 ^&
bx _&
0`&
0a&
0b&
b0 c&
b0 d&
b0 e&
b0 f&
b0 g&
b0 h&
b0 i&
b0 j&
b0 k&
b0 l&
b100 n&
b0 o&
bz q&
b100 r&
b100 s&
0t&
b100 v&
0w&
b100 x&
b100 z&
b0 }&
b0 ~&
b0 !'
0#'
1$'
b0 %'
bx &'
bx ''
b0 +'
b0 ,'
0-'
0.'
bx /'
bx 0'
01'
02'
13'
14'
05'
16'
1>'
0?'
1@'
b0 A'
bx B'
1C'
1D'
1E'
b0 F'
bx G'
bx H'
bx I'
bx J'
bx K'
bx L'
bx M'
bx N'
bx O'
bx P'
bx Q'
bx R'
bx S'
bx T'
bx U'
bx V'
bx W'
bx X'
bx Y'
bx Z'
bx ['
bx \'
bx ]'
bx ^'
bx _'
bx `'
bx a'
bx b'
bx c'
bx d'
bx e'
bx f'
bx g'
bx h'
bx i'
bx j'
bx k'
bx l'
bx m'
bx n'
bx o'
bx p'
bx q'
bx r'
bx s'
bx t'
bx u'
bx v'
bx w'
bx x'
bx y'
bx z'
bx {'
bx |'
bx }'
bx ~'
bx !(
bx "(
bx #(
bx $(
bx %(
bx &(
bx '(
bx ((
bx )(
bx *(
bx +(
bx ,(
bx -(
bx .(
bx /(
bx 0(
bx 1(
bx 2(
bx 3(
bx 4(
bx 5(
bx 6(
bx 7(
bx 8(
bx 9(
bx :(
bx ;(
bx <(
bx =(
bx >(
bx ?(
bx @(
bx A(
bx B(
bx C(
bx D(
bx E(
bx F(
bx G(
bx H(
bx I(
bx J(
bx K(
bx L(
bx M(
bx N(
bx O(
bx P(
bx Q(
bx R(
bx S(
bx T(
bx U(
bx V(
bx W(
bx X(
bx Y(
bx Z(
bx [(
bx \(
bx ](
bx ^(
bx _(
bx `(
bx a(
bx b(
bx c(
bx d(
bx e(
bx f(
bx g(
bx h(
bx i(
b0 l(
b0 m(
b0 p(
b0 q(
b10 r(
xs(
0t(
0u(
0v(
0w(
0x(
0y(
0z(
b0 ')
b0 ()
b0 *)
b0 +)
b0 ,)
b0 -)
b0 .)
b0 /)
b0 0)
b0 1)
b0 2)
b0 3)
b0 4)
b0 5)
b0 6)
b0 7)
b0 8)
b0 9)
b0 :)
b0 ;)
b0 <)
b0 =)
b0 >)
b0 ?)
b0 @)
b0 A)
b0 B)
b0 C)
b0 D)
b0 E)
b0 F)
b0 G)
b0 H)
b0 I)
b0 J)
b0 K)
b0 L)
b0 M)
b0 N)
b0 O)
b0 P)
b0 Q)
b0 R)
b0 S)
b0 T)
b0 U)
b0 V)
b0 W)
b0 X)
b0 Y)
b0 Z)
b0 [)
b0 \)
b0 ])
b0 ^)
b0 _)
b0 `)
b0 a)
b0 b)
b0 c)
b0 d)
b0 e)
b0 f)
b0 g)
b0 h)
b0 i)
b100000 j)
bx k)
b0 l)
b0 m)
bx n)
b0 w)
b0 x)
0{)
0|)
0!*
0"*
0%*
0&*
0)*
0**
0-*
0.*
01*
02*
05*
06*
09*
0:*
b0 =*
b0 >*
b0 A*
b0 B*
b0 E*
b0 F*
b0 I*
b0 J*
b0 M*
b0 N*
0Q*
0R*
0U*
0V*
b0 Y*
b0 Z*
b0 ]*
b0 ^*
b0 a*
b0 b*
b0 d*
b0 f*
b10 g*
b0 s*
b10 |*
b0 ~*
b0 "+
1#+
0$+
b0 -+
b0 .+
b0 /+
b0 0+
bx 1+
b0 2+
b0 3+
b0 4+
b0 5+
06+
07+
18+
b0 9+
b0 :+
b0 ;+
b0 <+
b1111111111111111111111111111111111111111111111111111111111111100 >+
b1111111111111111111111111111111111111111111111111111111111111100 ?+
0C+
0D+
0G+
0H+
0K+
0L+
0O+
0P+
0S+
0T+
0W+
0X+
0[+
0\+
b0 _+
b0 `+
0c+
0d+
b0 g+
b0 h+
b0 k+
b0 l+
b0 o+
b0 p+
bx r+
bx s+
b0 w+
b0 x+
0y+
0z+
bx {+
bx |+
0}+
0~+
1!,
1",
1#,
1$,
1,,
1-,
1.,
b0 /,
bx 0,
11,
12,
13,
b0 4,
bx 5,
bx 6,
bx 7,
bx 8,
bx 9,
bx :,
bx ;,
bx <,
bx =,
bx >,
bx ?,
bx @,
bx A,
bx B,
bx C,
bx D,
bx E,
bx F,
bx G,
bx H,
bx I,
bx J,
bx K,
bx L,
bx M,
bx N,
bx O,
bx P,
bx Q,
bx R,
bx S,
bx T,
bx U,
bx V,
bx W,
bx X,
bx Y,
bx Z,
bx [,
bx \,
bx ],
bx ^,
bx _,
bx `,
bx a,
bx b,
bx c,
bx d,
bx e,
bx f,
bx g,
bx h,
bx i,
bx j,
bx k,
bx l,
bx m,
bx n,
bx o,
bx p,
bx q,
bx r,
bx s,
bx t,
bx u,
bx v,
bx w,
bx x,
bx y,
bx z,
bx {,
bx |,
bx },
bx ~,
bx !-
bx "-
bx #-
bx $-
bx %-
bx &-
bx '-
bx (-
bx )-
bx *-
bx +-
bx ,-
bx --
bx .-
bx /-
bx 0-
bx 1-
bx 2-
bx 3-
bx 4-
bx 5-
bx 6-
bx 7-
bx 8-
bx 9-
bx :-
bx ;-
bx <-
bx =-
bx >-
bx ?-
bx @-
bx A-
bx B-
bx C-
bx D-
bx E-
bx F-
bx G-
bx H-
bx I-
bx J-
bx K-
bx L-
bx M-
bx N-
bx O-
bx P-
bx Q-
bx R-
bx S-
bx T-
bx U-
bx V-
bx W-
0Z-
0[-
0^-
0_-
0b-
0c-
b0 f-
b0 g-
b0 j-
b0 k-
b0 n-
b0 o-
b0 q-
bx r-
bx s-
bx t-
bx u-
bx v-
bx w-
bx x-
bx y-
bx z-
bx {-
bx |-
bx }-
bx ~-
bx !.
bx ".
bx #.
bx $.
bx %.
bx &.
bx '.
bx (.
bx ).
bx *.
bx +.
bx ,.
bx -.
bx ..
bx /.
bx 0.
bx 1.
bx 2.
bx 3.
bx 4.
bx 5.
bx 6.
bx 7.
bx 8.
bx 9.
bx :.
bx ;.
bx <.
bx =.
bx >.
bx ?.
bx @.
bx A.
bx B.
bx C.
bx D.
bx E.
bx F.
bx G.
bx H.
bx I.
bx J.
bx K.
bx L.
bx M.
bx N.
bx O.
bx P.
bx Q.
bx R.
bx S.
bx T.
bx U.
bx V.
bx W.
bx X.
bx Y.
bx Z.
bx [.
bx \.
bx ].
bx ^.
bx _.
bx `.
bx a.
bx b.
bx c.
bx d.
bx e.
bx f.
bx g.
bx h.
bx i.
bx j.
bx k.
bx l.
bx m.
bx n.
bx o.
bx p.
bx q.
bx r.
bx s.
bx t.
bx u.
bx v.
bx w.
bx x.
bx y.
bx z.
bx {.
bx |.
bx }.
bx ~.
bx !/
bx "/
bx #/
bx $/
bx %/
bx &/
bx '/
bx (/
bx )/
bx */
bx +/
bx ,/
bx -/
bx ./
bx //
bx 0/
bx 1/
bx 2/
bx 3/
bx 4/
bx 5/
bx 6/
bx 7/
bx 8/
bx 9/
bx :/
x;/
bx </
bx =/
bx >/
bx ?/
bx @/
bx A/
bx B/
bx C/
bx D/
bx E/
bx F/
bx G/
bx H/
bx I/
bx J/
bx K/
bx L/
bx M/
bx N/
bx O/
bx P/
bx Q/
bx R/
bx S/
bx T/
bx U/
bx V/
bx W/
bx X/
bx Y/
bx Z/
bx [/
bx \/
bx ]/
bx ^/
bx _/
bx `/
bx a/
bx b/
bx c/
bx d/
bx e/
bx f/
bx g/
bx h/
bx i/
bx j/
b1010 k/
b0 l/
bx m/
$end
#5000
1!
1_%
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
#10000
0!
b1 l/
0_%
1C'
1>'
11,
1,,
#15000
1!
1_%
0C'
0>'
01,
0,,
#20000
0!
b10 l/
0_%
1C'
1>'
11,
1,,
#25000
1!
1_%
0C'
0>'
01,
0,,
#30000
0!
b11 l/
0_%
1C'
1>'
11,
1,,
#35000
1!
1_%
0C'
0>'
01,
0,,
#40000
0!
b100 l/
0_%
1C'
1>'
11,
1,,
#45000
1!
1_%
0C'
0>'
01,
0,,
#50000
0!
b101 l/
0_%
1C'
1>'
11,
1,,
#55000
1!
1_%
0C'
0>'
01,
0,,
#60000
0!
b110 l/
0_%
1C'
1>'
11,
1,,
#65000
1!
1_%
0C'
0>'
01,
0,,
#70000
0!
b111 l/
0_%
1C'
1>'
11,
1,,
#75000
1!
1_%
0C'
0>'
01,
0,,
#80000
0!
b1000 l/
0_%
1C'
1>'
11,
1,,
#85000
1!
1_%
0C'
0>'
01,
0,,
#90000
0!
b1001 l/
0_%
1C'
1>'
11,
1,,
#95000
1!
1_%
0C'
0>'
01,
0,,
#100000
0!
b1010 l/
1"
b0 U!
b0 V!
b0 W!
b0 X!
b0 Y!
b0 Z!
b0 [!
b0 \!
b0 ]!
b0 ^!
b0 _!
b0 `!
b0 a!
b0 b!
b0 c!
b0 d!
b0 e!
b0 f!
b0 g!
b0 h!
b0 i!
b0 j!
b0 k!
b0 l!
b0 m!
b0 n!
b0 o!
b0 p!
b0 q!
b0 r!
b0 s!
b0 t!
b0 u!
b0 v!
b0 w!
b0 x!
b0 y!
b0 z!
b0 {!
b0 |!
b0 }!
b0 ~!
b0 !"
b0 ""
b0 #"
b0 $"
b0 %"
b0 &"
b0 '"
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
b0 /"
b0 0"
b0 1"
b0 2"
b0 3"
b0 4"
b0 5"
b0 6"
b0 7"
b0 8"
b0 9"
b0 :"
b0 ;"
b0 <"
b0 ="
b0 >"
b0 ?"
b0 @"
b0 A"
b0 B"
b0 C"
b0 D"
b0 E"
b0 F"
b0 G"
b0 H"
b0 I"
b0 J"
b0 K"
b0 L"
b0 M"
b0 N"
b0 O"
b0 P"
b0 Q"
b0 R"
b0 S"
b0 T"
b0 U"
b0 V"
b0 W"
b0 X"
b0 Y"
b0 Z"
b0 ["
b0 \"
b0 ]"
b0 ^"
b0 _"
b0 `"
b0 a"
b0 b"
b0 c"
b0 d"
b0 e"
b0 f"
b0 g"
b0 h"
b0 i"
b0 j"
b0 k"
b0 l"
b0 m"
b0 n"
b0 o"
b0 p"
b0 q"
b0 r"
b0 s"
b0 t"
b0 u"
b0 v"
b10000000 0
b1 U!
b10 V!
b11 W!
b100 X!
b101 Y!
b110 Z!
b111 [!
b1000 \!
b1001 ]!
b1010 ^!
b0 l/
1`%
0_%
1C'
1>'
11,
1,,
#105000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
#110000
0!
b1 l/
0_%
1C'
1>'
11,
1,,
#115000
1!
1_%
0C'
0>'
01,
0,,
#120000
0!
b10 l/
0_%
1C'
1>'
11,
1,,
#125000
1!
1_%
0C'
0>'
01,
0,,
#130000
0!
b11 l/
0_%
1C'
1>'
11,
1,,
#135000
1!
1_%
0C'
0>'
01,
0,,
#140000
0!
b100 l/
0_%
1C'
1>'
11,
1,,
#145000
1!
1_%
0C'
0>'
01,
0,,
#150000
0!
b101 l/
0_%
1C'
1>'
11,
1,,
#155000
1!
1_%
0C'
0>'
01,
0,,
#160000
0!
b110 l/
0_%
1C'
1>'
11,
1,,
#165000
1!
1_%
0C'
0>'
01,
0,,
#170000
0!
b111 l/
0_%
1C'
1>'
11,
1,,
#175000
1!
1_%
0C'
0>'
01,
0,,
#180000
0!
b1000 l/
0_%
1C'
1>'
11,
1,,
#185000
1!
1_%
0C'
0>'
01,
0,,
#190000
0!
b1001 l/
0_%
1C'
1>'
11,
1,,
#195000
1!
1_%
0C'
0>'
01,
0,,
#200000
0!
b1010 l/
b0 0
1(
b1 *
b1 i%
1g%
0_%
0",
0$,
02,
03,
1C'
1>'
11,
1,,
b1 6,
#205000
1!
b1 0
1_%
0C'
0>'
01,
0,,
#210000
0!
b10 *
b1000 '
b1000 f%
b10 i%
0_%
b1 x+
b1 4,
1C'
1>'
11,
1,,
b10 7,
#215000
1!
b10 0
1_%
0C'
0>'
01,
0,,
#220000
0!
b11 *
b10000 '
b10000 f%
b11 i%
0_%
b10 x+
b10 4,
1C'
1>'
11,
1,,
b11 8,
#225000
1!
b11 0
1_%
0C'
0>'
01,
0,,
#230000
0!
b100 *
b11000 '
b11000 f%
b100 i%
0_%
b11 x+
b11 4,
1C'
1>'
11,
1,,
b100 9,
#235000
1!
b100 0
1_%
0C'
0>'
01,
0,,
#240000
0!
b101 *
b100000 '
b100000 f%
b101 i%
0_%
b100 x+
b100 4,
1C'
1>'
11,
1,,
b101 :,
#245000
1!
b101 0
1_%
0C'
0>'
01,
0,,
#250000
0!
b110 *
b101000 '
b101000 f%
b110 i%
0_%
b101 x+
b101 4,
1C'
1>'
11,
1,,
b110 ;,
#255000
1!
b110 0
1_%
0C'
0>'
01,
0,,
#260000
0!
b111 *
b110000 '
b110000 f%
b111 i%
0_%
b110 x+
b110 4,
1C'
1>'
11,
1,,
b111 <,
#265000
1!
b111 0
1_%
0C'
0>'
01,
0,,
#270000
0!
b1000 *
b111000 '
b111000 f%
b1000 i%
0_%
b111 x+
b111 4,
1C'
1>'
11,
1,,
b1000 =,
#275000
1!
b1000 0
1_%
0C'
0>'
01,
0,,
#280000
0!
b1001 *
b1000000 '
b1000000 f%
b1001 i%
0_%
b1000 x+
b1000 4,
1C'
1>'
11,
1,,
b1001 >,
#285000
1!
b1001 0
1_%
0C'
0>'
01,
0,,
#290000
0!
b1010 *
b1001000 '
b1001000 f%
b1010 i%
0_%
b1001 x+
b1001 4,
1C'
1>'
11,
1,,
b1010 ?,
#295000
1!
b1010 0
1_%
0C'
0>'
01,
0,,
#300000
0!
b0 *
b1010000 '
b1010000 f%
b0 i%
0_%
b1010 x+
b1010 4,
1C'
1>'
11,
1,,
b0 @,
#305000
1!
b1011 0
1_%
0C'
0>'
01,
0,,
#310000
0!
b1011000 '
b1011000 f%
0_%
b1011 x+
b1011 4,
1C'
1>'
11,
1,,
b0 A,
#315000
1!
b1100 0
1_%
0C'
0>'
01,
0,,
#320000
0!
b1100000 '
b1100000 f%
0_%
b1100 x+
b1100 4,
1C'
1>'
11,
1,,
b0 B,
#325000
1!
b1101 0
1_%
0C'
0>'
01,
0,,
#330000
0!
b1101000 '
b1101000 f%
0_%
b1101 x+
b1101 4,
1C'
1>'
11,
1,,
b0 C,
#335000
1!
b1110 0
1_%
0C'
0>'
01,
0,,
#340000
0!
b1110000 '
b1110000 f%
0_%
b1110 x+
b1110 4,
1C'
1>'
11,
1,,
b0 D,
#345000
1!
b1111 0
1_%
0C'
0>'
01,
0,,
#350000
0!
b1111000 '
b1111000 f%
0_%
b1111 x+
b1111 4,
1C'
1>'
11,
1,,
b0 E,
#355000
1!
b10000 0
1_%
0C'
0>'
01,
0,,
#360000
0!
b10000000 '
b10000000 f%
0_%
b10000 x+
b10000 4,
1C'
1>'
11,
1,,
b0 F,
#365000
1!
b10001 0
1_%
0C'
0>'
01,
0,,
#370000
0!
b10001000 '
b10001000 f%
0_%
b10001 x+
b10001 4,
1C'
1>'
11,
1,,
b0 G,
#375000
1!
b10010 0
1_%
0C'
0>'
01,
0,,
#380000
0!
b10010000 '
b10010000 f%
0_%
b10010 x+
b10010 4,
1C'
1>'
11,
1,,
b0 H,
#385000
1!
b10011 0
1_%
0C'
0>'
01,
0,,
#390000
0!
b10011000 '
b10011000 f%
0_%
b10011 x+
b10011 4,
1C'
1>'
11,
1,,
b0 I,
#395000
1!
b10100 0
1_%
0C'
0>'
01,
0,,
#400000
0!
b10100000 '
b10100000 f%
0_%
b10100 x+
b10100 4,
1C'
1>'
11,
1,,
b0 J,
#405000
1!
b10101 0
1_%
0C'
0>'
01,
0,,
#410000
0!
b10101000 '
b10101000 f%
0_%
b10101 x+
b10101 4,
1C'
1>'
11,
1,,
b0 K,
#415000
1!
b10110 0
1_%
0C'
0>'
01,
0,,
#420000
0!
b10110000 '
b10110000 f%
0_%
b10110 x+
b10110 4,
1C'
1>'
11,
1,,
b0 L,
#425000
1!
b10111 0
1_%
0C'
0>'
01,
0,,
#430000
0!
b10111000 '
b10111000 f%
0_%
b10111 x+
b10111 4,
1C'
1>'
11,
1,,
b0 M,
#435000
1!
b11000 0
1_%
0C'
0>'
01,
0,,
#440000
0!
b11000000 '
b11000000 f%
0_%
b11000 x+
b11000 4,
1C'
1>'
11,
1,,
b0 N,
#445000
1!
b11001 0
1_%
0C'
0>'
01,
0,,
#450000
0!
b11001000 '
b11001000 f%
0_%
b11001 x+
b11001 4,
1C'
1>'
11,
1,,
b0 O,
#455000
1!
b11010 0
1_%
0C'
0>'
01,
0,,
#460000
0!
b11010000 '
b11010000 f%
0_%
b11010 x+
b11010 4,
1C'
1>'
11,
1,,
b0 P,
#465000
1!
b11011 0
1_%
0C'
0>'
01,
0,,
#470000
0!
b11011000 '
b11011000 f%
0_%
b11011 x+
b11011 4,
1C'
1>'
11,
1,,
b0 Q,
#475000
1!
b11100 0
1_%
0C'
0>'
01,
0,,
#480000
0!
b11100000 '
b11100000 f%
0_%
b11100 x+
b11100 4,
1C'
1>'
11,
1,,
b0 R,
#485000
1!
b11101 0
1_%
0C'
0>'
01,
0,,
#490000
0!
b11101000 '
b11101000 f%
0_%
b11101 x+
b11101 4,
1C'
1>'
11,
1,,
b0 S,
#495000
1!
b11110 0
1_%
0C'
0>'
01,
0,,
#500000
0!
b11110000 '
b11110000 f%
0_%
b11110 x+
b11110 4,
1C'
1>'
11,
1,,
b0 T,
#505000
1!
b11111 0
1_%
0C'
0>'
01,
0,,
#510000
0!
b11111000 '
b11111000 f%
0_%
b11111 x+
b11111 4,
1C'
1>'
11,
1,,
b0 U,
#515000
1!
b100000 0
1_%
0C'
0>'
01,
0,,
#520000
0!
b100000000 '
b100000000 f%
0_%
b100000 x+
b100000 4,
1C'
1>'
11,
1,,
b0 V,
#525000
1!
b100001 0
1_%
0C'
0>'
01,
0,,
#530000
0!
b100001000 '
b100001000 f%
0_%
b100001 x+
b100001 4,
1C'
1>'
11,
1,,
b0 W,
#535000
1!
b100010 0
1_%
0C'
0>'
01,
0,,
#540000
0!
b100010000 '
b100010000 f%
0_%
b100010 x+
b100010 4,
1C'
1>'
11,
1,,
b0 X,
#545000
1!
b100011 0
1_%
0C'
0>'
01,
0,,
#550000
0!
b100011000 '
b100011000 f%
0_%
b100011 x+
b100011 4,
1C'
1>'
11,
1,,
b0 Y,
#555000
1!
b100100 0
1_%
0C'
0>'
01,
0,,
#560000
0!
b100100000 '
b100100000 f%
0_%
b100100 x+
b100100 4,
1C'
1>'
11,
1,,
b0 Z,
#565000
1!
b100101 0
1_%
0C'
0>'
01,
0,,
#570000
0!
b100101000 '
b100101000 f%
0_%
b100101 x+
b100101 4,
1C'
1>'
11,
1,,
b0 [,
#575000
1!
b100110 0
1_%
0C'
0>'
01,
0,,
#580000
0!
b100110000 '
b100110000 f%
0_%
b100110 x+
b100110 4,
1C'
1>'
11,
1,,
b0 \,
#585000
1!
b100111 0
1_%
0C'
0>'
01,
0,,
#590000
0!
b100111000 '
b100111000 f%
0_%
b100111 x+
b100111 4,
1C'
1>'
11,
1,,
b0 ],
#595000
1!
b101000 0
1_%
0C'
0>'
01,
0,,
#600000
0!
b101000000 '
b101000000 f%
0_%
b101000 x+
b101000 4,
1C'
1>'
11,
1,,
b0 ^,
#605000
1!
b101001 0
1_%
0C'
0>'
01,
0,,
#610000
0!
b101001000 '
b101001000 f%
0_%
b101001 x+
b101001 4,
1C'
1>'
11,
1,,
b0 _,
#615000
1!
b101010 0
1_%
0C'
0>'
01,
0,,
#620000
0!
b101010000 '
b101010000 f%
0_%
b101010 x+
b101010 4,
1C'
1>'
11,
1,,
b0 `,
#625000
1!
b101011 0
1_%
0C'
0>'
01,
0,,
#630000
0!
b101011000 '
b101011000 f%
0_%
b101011 x+
b101011 4,
1C'
1>'
11,
1,,
b0 a,
#635000
1!
b101100 0
1_%
0C'
0>'
01,
0,,
#640000
0!
b101100000 '
b101100000 f%
0_%
b101100 x+
b101100 4,
1C'
1>'
11,
1,,
b0 b,
#645000
1!
b101101 0
1_%
0C'
0>'
01,
0,,
#650000
0!
b101101000 '
b101101000 f%
0_%
b101101 x+
b101101 4,
1C'
1>'
11,
1,,
b0 c,
#655000
1!
b101110 0
1_%
0C'
0>'
01,
0,,
#660000
0!
b101110000 '
b101110000 f%
0_%
b101110 x+
b101110 4,
1C'
1>'
11,
1,,
b0 d,
#665000
1!
b101111 0
1_%
0C'
0>'
01,
0,,
#670000
0!
b101111000 '
b101111000 f%
0_%
b101111 x+
b101111 4,
1C'
1>'
11,
1,,
b0 e,
#675000
1!
b110000 0
1_%
0C'
0>'
01,
0,,
#680000
0!
b110000000 '
b110000000 f%
0_%
b110000 x+
b110000 4,
1C'
1>'
11,
1,,
b0 f,
#685000
1!
b110001 0
1_%
0C'
0>'
01,
0,,
#690000
0!
b110001000 '
b110001000 f%
0_%
b110001 x+
b110001 4,
1C'
1>'
11,
1,,
b0 g,
#695000
1!
b110010 0
1_%
0C'
0>'
01,
0,,
#700000
0!
b110010000 '
b110010000 f%
0_%
b110010 x+
b110010 4,
1C'
1>'
11,
1,,
b0 h,
#705000
1!
b110011 0
1_%
0C'
0>'
01,
0,,
#710000
0!
b110011000 '
b110011000 f%
0_%
b110011 x+
b110011 4,
1C'
1>'
11,
1,,
b0 i,
#715000
1!
b110100 0
1_%
0C'
0>'
01,
0,,
#720000
0!
b110100000 '
b110100000 f%
0_%
b110100 x+
b110100 4,
1C'
1>'
11,
1,,
b0 j,
#725000
1!
b110101 0
1_%
0C'
0>'
01,
0,,
#730000
0!
b110101000 '
b110101000 f%
0_%
b110101 x+
b110101 4,
1C'
1>'
11,
1,,
b0 k,
#735000
1!
b110110 0
1_%
0C'
0>'
01,
0,,
#740000
0!
b110110000 '
b110110000 f%
0_%
b110110 x+
b110110 4,
1C'
1>'
11,
1,,
b0 l,
#745000
1!
b110111 0
1_%
0C'
0>'
01,
0,,
#750000
0!
b110111000 '
b110111000 f%
0_%
b110111 x+
b110111 4,
1C'
1>'
11,
1,,
b0 m,
#755000
1!
b111000 0
1_%
0C'
0>'
01,
0,,
#760000
0!
b111000000 '
b111000000 f%
0_%
b111000 x+
b111000 4,
1C'
1>'
11,
1,,
b0 n,
#765000
1!
b111001 0
1_%
0C'
0>'
01,
0,,
#770000
0!
b111001000 '
b111001000 f%
0_%
b111001 x+
b111001 4,
1C'
1>'
11,
1,,
b0 o,
#775000
1!
b111010 0
1_%
0C'
0>'
01,
0,,
#780000
0!
b111010000 '
b111010000 f%
0_%
b111010 x+
b111010 4,
1C'
1>'
11,
1,,
b0 p,
#785000
1!
b111011 0
1_%
0C'
0>'
01,
0,,
#790000
0!
b111011000 '
b111011000 f%
0_%
b111011 x+
b111011 4,
1C'
1>'
11,
1,,
b0 q,
#795000
1!
b111100 0
1_%
0C'
0>'
01,
0,,
#800000
0!
b111100000 '
b111100000 f%
0_%
b111100 x+
b111100 4,
1C'
1>'
11,
1,,
b0 r,
#805000
1!
b111101 0
1_%
0C'
0>'
01,
0,,
#810000
0!
b111101000 '
b111101000 f%
0_%
b111101 x+
b111101 4,
1C'
1>'
11,
1,,
b0 s,
#815000
1!
b111110 0
1_%
0C'
0>'
01,
0,,
#820000
0!
b111110000 '
b111110000 f%
0_%
b111110 x+
b111110 4,
1C'
1>'
11,
1,,
b0 t,
#825000
1!
b111111 0
1_%
0C'
0>'
01,
0,,
#830000
0!
b111111000 '
b111111000 f%
0_%
b111111 x+
b111111 4,
1C'
1>'
11,
1,,
b0 u,
#835000
1!
b1000000 0
1_%
0C'
0>'
01,
0,,
#840000
0!
b1000000000 '
b1000000000 f%
0_%
b1000000 x+
b1000000 4,
1C'
1>'
11,
1,,
b0 v,
#845000
1!
b1000001 0
1_%
0C'
0>'
01,
0,,
#850000
0!
b1000001000 '
b1000001000 f%
0_%
b1000001 x+
b1000001 4,
1C'
1>'
11,
1,,
b0 w,
#855000
1!
b1000010 0
1_%
0C'
0>'
01,
0,,
#860000
0!
b1000010000 '
b1000010000 f%
0_%
b1000010 x+
b1000010 4,
1C'
1>'
11,
1,,
b0 x,
#865000
1!
b1000011 0
1_%
0C'
0>'
01,
0,,
#870000
0!
b1000011000 '
b1000011000 f%
0_%
b1000011 x+
b1000011 4,
1C'
1>'
11,
1,,
b0 y,
#875000
1!
b1000100 0
1_%
0C'
0>'
01,
0,,
#880000
0!
b1000100000 '
b1000100000 f%
0_%
b1000100 x+
b1000100 4,
1C'
1>'
11,
1,,
b0 z,
#885000
1!
b1000101 0
1_%
0C'
0>'
01,
0,,
#890000
0!
b1000101000 '
b1000101000 f%
0_%
b1000101 x+
b1000101 4,
1C'
1>'
11,
1,,
b0 {,
#895000
1!
b1000110 0
1_%
0C'
0>'
01,
0,,
#900000
0!
b1000110000 '
b1000110000 f%
0_%
b1000110 x+
b1000110 4,
1C'
1>'
11,
1,,
b0 |,
#905000
1!
b1000111 0
1_%
0C'
0>'
01,
0,,
#910000
0!
b1000111000 '
b1000111000 f%
0_%
b1000111 x+
b1000111 4,
1C'
1>'
11,
1,,
b0 },
#915000
1!
b1001000 0
1_%
0C'
0>'
01,
0,,
#920000
0!
b1001000000 '
b1001000000 f%
0_%
b1001000 x+
b1001000 4,
1C'
1>'
11,
1,,
b0 ~,
#925000
1!
b1001001 0
1_%
0C'
0>'
01,
0,,
#930000
0!
b1001001000 '
b1001001000 f%
0_%
b1001001 x+
b1001001 4,
1C'
1>'
11,
1,,
b0 !-
#935000
1!
b1001010 0
1_%
0C'
0>'
01,
0,,
#940000
0!
b1001010000 '
b1001010000 f%
0_%
b1001010 x+
b1001010 4,
1C'
1>'
11,
1,,
b0 "-
#945000
1!
b1001011 0
1_%
0C'
0>'
01,
0,,
#950000
0!
b1001011000 '
b1001011000 f%
0_%
b1001011 x+
b1001011 4,
1C'
1>'
11,
1,,
b0 #-
#955000
1!
b1001100 0
1_%
0C'
0>'
01,
0,,
#960000
0!
b1001100000 '
b1001100000 f%
0_%
b1001100 x+
b1001100 4,
1C'
1>'
11,
1,,
b0 $-
#965000
1!
b1001101 0
1_%
0C'
0>'
01,
0,,
#970000
0!
b1001101000 '
b1001101000 f%
0_%
b1001101 x+
b1001101 4,
1C'
1>'
11,
1,,
b0 %-
#975000
1!
b1001110 0
1_%
0C'
0>'
01,
0,,
#980000
0!
b1001110000 '
b1001110000 f%
0_%
b1001110 x+
b1001110 4,
1C'
1>'
11,
1,,
b0 &-
#985000
1!
b1001111 0
1_%
0C'
0>'
01,
0,,
#990000
0!
b1001111000 '
b1001111000 f%
0_%
b1001111 x+
b1001111 4,
1C'
1>'
11,
1,,
b0 '-
#995000
1!
b1010000 0
1_%
0C'
0>'
01,
0,,
#1000000
0!
b1010000000 '
b1010000000 f%
0_%
b1010000 x+
b1010000 4,
1C'
1>'
11,
1,,
b0 (-
#1005000
1!
b1010001 0
1_%
0C'
0>'
01,
0,,
#1010000
0!
b1010001000 '
b1010001000 f%
0_%
b1010001 x+
b1010001 4,
1C'
1>'
11,
1,,
b0 )-
#1015000
1!
b1010010 0
1_%
0C'
0>'
01,
0,,
#1020000
0!
b1010010000 '
b1010010000 f%
0_%
b1010010 x+
b1010010 4,
1C'
1>'
11,
1,,
b0 *-
#1025000
1!
b1010011 0
1_%
0C'
0>'
01,
0,,
#1030000
0!
b1010011000 '
b1010011000 f%
0_%
b1010011 x+
b1010011 4,
1C'
1>'
11,
1,,
b0 +-
#1035000
1!
b1010100 0
1_%
0C'
0>'
01,
0,,
#1040000
0!
b1010100000 '
b1010100000 f%
0_%
b1010100 x+
b1010100 4,
1C'
1>'
11,
1,,
b0 ,-
#1045000
1!
b1010101 0
1_%
0C'
0>'
01,
0,,
#1050000
0!
b1010101000 '
b1010101000 f%
0_%
b1010101 x+
b1010101 4,
1C'
1>'
11,
1,,
b0 --
#1055000
1!
b1010110 0
1_%
0C'
0>'
01,
0,,
#1060000
0!
b1010110000 '
b1010110000 f%
0_%
b1010110 x+
b1010110 4,
1C'
1>'
11,
1,,
b0 .-
#1065000
1!
b1010111 0
1_%
0C'
0>'
01,
0,,
#1070000
0!
b1010111000 '
b1010111000 f%
0_%
b1010111 x+
b1010111 4,
1C'
1>'
11,
1,,
b0 /-
#1075000
1!
b1011000 0
1_%
0C'
0>'
01,
0,,
#1080000
0!
b1011000000 '
b1011000000 f%
0_%
b1011000 x+
b1011000 4,
1C'
1>'
11,
1,,
b0 0-
#1085000
1!
b1011001 0
1_%
0C'
0>'
01,
0,,
#1090000
0!
b1011001000 '
b1011001000 f%
0_%
b1011001 x+
b1011001 4,
1C'
1>'
11,
1,,
b0 1-
#1095000
1!
b1011010 0
1_%
0C'
0>'
01,
0,,
#1100000
0!
b1011010000 '
b1011010000 f%
0_%
b1011010 x+
b1011010 4,
1C'
1>'
11,
1,,
b0 2-
#1105000
1!
b1011011 0
1_%
0C'
0>'
01,
0,,
#1110000
0!
b1011011000 '
b1011011000 f%
0_%
b1011011 x+
b1011011 4,
1C'
1>'
11,
1,,
b0 3-
#1115000
1!
b1011100 0
1_%
0C'
0>'
01,
0,,
#1120000
0!
b1011100000 '
b1011100000 f%
0_%
b1011100 x+
b1011100 4,
1C'
1>'
11,
1,,
b0 4-
#1125000
1!
b1011101 0
1_%
0C'
0>'
01,
0,,
#1130000
0!
b1011101000 '
b1011101000 f%
0_%
b1011101 x+
b1011101 4,
1C'
1>'
11,
1,,
b0 5-
#1135000
1!
b1011110 0
1_%
0C'
0>'
01,
0,,
#1140000
0!
b1011110000 '
b1011110000 f%
0_%
b1011110 x+
b1011110 4,
1C'
1>'
11,
1,,
b0 6-
#1145000
1!
b1011111 0
1_%
0C'
0>'
01,
0,,
#1150000
0!
b1011111000 '
b1011111000 f%
0_%
b1011111 x+
b1011111 4,
1C'
1>'
11,
1,,
b0 7-
#1155000
1!
b1100000 0
1_%
0C'
0>'
01,
0,,
#1160000
0!
b1100000000 '
b1100000000 f%
0_%
b1100000 x+
b1100000 4,
1C'
1>'
11,
1,,
b0 8-
#1165000
1!
b1100001 0
1_%
0C'
0>'
01,
0,,
#1170000
0!
b1100001000 '
b1100001000 f%
0_%
b1100001 x+
b1100001 4,
1C'
1>'
11,
1,,
b0 9-
#1175000
1!
b1100010 0
1_%
0C'
0>'
01,
0,,
#1180000
0!
b1100010000 '
b1100010000 f%
0_%
b1100010 x+
b1100010 4,
1C'
1>'
11,
1,,
b0 :-
#1185000
1!
b1100011 0
1_%
0C'
0>'
01,
0,,
#1190000
0!
b1100011000 '
b1100011000 f%
0_%
b1100011 x+
b1100011 4,
1C'
1>'
11,
1,,
b0 ;-
#1195000
1!
b1100100 0
1_%
0C'
0>'
01,
0,,
#1200000
0!
b1100100000 '
b1100100000 f%
0_%
b1100100 x+
b1100100 4,
1C'
1>'
11,
1,,
b0 <-
#1205000
1!
b1100101 0
1_%
0C'
0>'
01,
0,,
#1210000
0!
b1100101000 '
b1100101000 f%
0_%
b1100101 x+
b1100101 4,
1C'
1>'
11,
1,,
b0 =-
#1215000
1!
b1100110 0
1_%
0C'
0>'
01,
0,,
#1220000
0!
b1100110000 '
b1100110000 f%
0_%
b1100110 x+
b1100110 4,
1C'
1>'
11,
1,,
b0 >-
#1225000
1!
b1100111 0
1_%
0C'
0>'
01,
0,,
#1230000
0!
b1100111000 '
b1100111000 f%
0_%
b1100111 x+
b1100111 4,
1C'
1>'
11,
1,,
b0 ?-
#1235000
1!
b1101000 0
1_%
0C'
0>'
01,
0,,
#1240000
0!
b1101000000 '
b1101000000 f%
0_%
b1101000 x+
b1101000 4,
1C'
1>'
11,
1,,
b0 @-
#1245000
1!
b1101001 0
1_%
0C'
0>'
01,
0,,
#1250000
0!
b1101001000 '
b1101001000 f%
0_%
b1101001 x+
b1101001 4,
1C'
1>'
11,
1,,
b0 A-
#1255000
1!
b1101010 0
1_%
0C'
0>'
01,
0,,
#1260000
0!
b1101010000 '
b1101010000 f%
0_%
b1101010 x+
b1101010 4,
1C'
1>'
11,
1,,
b0 B-
#1265000
1!
b1101011 0
1_%
0C'
0>'
01,
0,,
#1270000
0!
b1101011000 '
b1101011000 f%
0_%
b1101011 x+
b1101011 4,
1C'
1>'
11,
1,,
b0 C-
#1275000
1!
b1101100 0
1_%
0C'
0>'
01,
0,,
#1280000
0!
b1101100000 '
b1101100000 f%
0_%
b1101100 x+
b1101100 4,
1C'
1>'
11,
1,,
b0 D-
#1285000
1!
b1101101 0
1_%
0C'
0>'
01,
0,,
#1290000
0!
b1101101000 '
b1101101000 f%
0_%
b1101101 x+
b1101101 4,
1C'
1>'
11,
1,,
b0 E-
#1295000
1!
b1101110 0
1_%
0C'
0>'
01,
0,,
#1300000
0!
b1101110000 '
b1101110000 f%
0_%
b1101110 x+
b1101110 4,
1C'
1>'
11,
1,,
b0 F-
#1305000
1!
b1101111 0
1_%
0C'
0>'
01,
0,,
#1310000
0!
b1101111000 '
b1101111000 f%
0_%
b1101111 x+
b1101111 4,
1C'
1>'
11,
1,,
b0 G-
#1315000
1!
b1110000 0
1_%
0C'
0>'
01,
0,,
#1320000
0!
b1110000000 '
b1110000000 f%
0_%
b1110000 x+
b1110000 4,
1C'
1>'
11,
1,,
b0 H-
#1325000
1!
b1110001 0
1_%
0C'
0>'
01,
0,,
#1330000
0!
b1110001000 '
b1110001000 f%
0_%
b1110001 x+
b1110001 4,
1C'
1>'
11,
1,,
b0 I-
#1335000
1!
b1110010 0
1_%
0C'
0>'
01,
0,,
#1340000
0!
b1110010000 '
b1110010000 f%
0_%
b1110010 x+
b1110010 4,
1C'
1>'
11,
1,,
b0 J-
#1345000
1!
b1110011 0
1_%
0C'
0>'
01,
0,,
#1350000
0!
b1110011000 '
b1110011000 f%
0_%
b1110011 x+
b1110011 4,
1C'
1>'
11,
1,,
b0 K-
#1355000
1!
b1110100 0
1_%
0C'
0>'
01,
0,,
#1360000
0!
b1110100000 '
b1110100000 f%
0_%
b1110100 x+
b1110100 4,
1C'
1>'
11,
1,,
b0 L-
#1365000
1!
b1110101 0
1_%
0C'
0>'
01,
0,,
#1370000
0!
b1110101000 '
b1110101000 f%
0_%
b1110101 x+
b1110101 4,
1C'
1>'
11,
1,,
b0 M-
#1375000
1!
b1110110 0
1_%
0C'
0>'
01,
0,,
#1380000
0!
b1110110000 '
b1110110000 f%
0_%
b1110110 x+
b1110110 4,
1C'
1>'
11,
1,,
b0 N-
#1385000
1!
b1110111 0
1_%
0C'
0>'
01,
0,,
#1390000
0!
b1110111000 '
b1110111000 f%
0_%
b1110111 x+
b1110111 4,
1C'
1>'
11,
1,,
b0 O-
#1395000
1!
b1111000 0
1_%
0C'
0>'
01,
0,,
#1400000
0!
b1111000000 '
b1111000000 f%
0_%
b1111000 x+
b1111000 4,
1C'
1>'
11,
1,,
b0 P-
#1405000
1!
b1111001 0
1_%
0C'
0>'
01,
0,,
#1410000
0!
b1111001000 '
b1111001000 f%
0_%
b1111001 x+
b1111001 4,
1C'
1>'
11,
1,,
b0 Q-
#1415000
1!
b1111010 0
1_%
0C'
0>'
01,
0,,
#1420000
0!
b1111010000 '
b1111010000 f%
0_%
b1111010 x+
b1111010 4,
1C'
1>'
11,
1,,
b0 R-
#1425000
1!
b1111011 0
1_%
0C'
0>'
01,
0,,
#1430000
0!
b1111011000 '
b1111011000 f%
0_%
b1111011 x+
b1111011 4,
1C'
1>'
11,
1,,
b0 S-
#1435000
1!
b1111100 0
1_%
0C'
0>'
01,
0,,
#1440000
0!
b1111100000 '
b1111100000 f%
0_%
b1111100 x+
b1111100 4,
1C'
1>'
11,
1,,
b0 T-
#1445000
1!
b1111101 0
1_%
0C'
0>'
01,
0,,
#1450000
0!
b1111101000 '
b1111101000 f%
0_%
b1111101 x+
b1111101 4,
1C'
1>'
11,
1,,
b0 U-
#1455000
1!
b1111110 0
1_%
0C'
0>'
01,
0,,
#1460000
0!
b1111110000 '
b1111110000 f%
0_%
b1111110 x+
b1111110 4,
1C'
1>'
11,
1,,
b0 V-
#1465000
1!
b1111111 0
1_%
0C'
0>'
01,
0,,
#1470000
0!
b1111111000 '
b1111111000 f%
0_%
b1111111 x+
b1111111 4,
1C'
1>'
11,
1,,
b0 W-
#1475000
1!
b10000000 0
0(
b0 '
b0 3
b0 4
b0 5
b0 6
b0 7
b0 8
b0 9
b0 :
b0 ;
b0 <
b0 =
b0 >
b0 ?
b0 @
b0 A
b0 B
b0 C
b0 D
b0 E
b0 F
b0 G
b0 H
b0 I
b0 J
b0 K
b0 L
b0 M
b0 N
b0 O
b0 P
b0 Q
b0 R
b0 S
b0 T
b0 U
b0 V
b0 W
b0 X
b0 Y
b0 Z
b0 [
b0 \
b0 ]
b0 ^
b0 _
b0 `
b0 a
b0 b
b0 c
b0 d
b0 e
b0 f
b0 g
b0 h
b0 i
b0 j
b0 k
b0 l
b0 m
b0 n
b0 o
b0 p
b0 q
b0 r
b0 s
b0 t
b0 u
b0 v
b0 w
b0 x
b0 y
b0 z
b0 {
b0 |
b0 }
b0 ~
b0 !!
b0 "!
b0 #!
b0 $!
b0 %!
b0 &!
b0 '!
b0 (!
b0 )!
b0 *!
b0 +!
b0 ,!
b0 -!
b0 .!
b0 /!
b0 0!
b0 1!
b0 2!
b0 3!
b0 4!
b0 5!
b0 6!
b0 7!
b0 8!
b0 9!
b0 :!
b0 ;!
b0 <!
b0 =!
b0 >!
b0 ?!
b0 @!
b0 A!
b0 B!
b0 C!
b0 D!
b0 E!
b0 F!
b0 G!
b0 H!
b0 I!
b0 J!
b0 K!
b0 L!
b0 M!
b0 N!
b0 O!
b0 P!
b0 Q!
b0 R!
b0 S!
b0 T!
b10000000 /
b11010000000011 3
b100000000011010010000011 4
b1000000000011010100000011 5
b1100000000011010110000011 6
b10000000000011011000000011 7
b10100000000011011010000011 8
b11000000000011011100000011 9
b11100000000011011110000011 :
b100000000000011100000000011 ;
b100100000000011100010000011 <
b10100101000000100100110011 =
b10101101010000100110110011 >
b10110101100000101000110011 ?
b10111101110000101010110011 @
b11000110000000101100110011 A
b101110010011 B
b1001010111000101110110011 C
b1001110111000101110110011 D
b1010010111000101110110011 E
b1010110111000101110110011 F
b1011010111000101110110011 G
b10011 H
b10011 I
b10011 J
b10011 K
b110000000000000000000001111110 L
b0 l/
b0 f%
0g%
1_%
b0 x+
1",
1$,
12,
13,
b0 4,
0C'
0>'
01,
0,,
#1480000
0!
b1 l/
0_%
1C'
1>'
11,
1,,
#1485000
1!
1_%
0C'
0>'
01,
0,,
#1490000
0!
b10 l/
0_%
1C'
1>'
11,
1,,
#1495000
1!
1_%
0C'
0>'
01,
0,,
#1500000
0!
b11 l/
0_%
1C'
1>'
11,
1,,
#1505000
1!
1_%
0C'
0>'
01,
0,,
#1510000
0!
b100 l/
0_%
1C'
1>'
11,
1,,
#1515000
1!
1_%
0C'
0>'
01,
0,,
#1520000
0!
b101 l/
0_%
1C'
1>'
11,
1,,
#1525000
1!
1_%
0C'
0>'
01,
0,,
#1530000
0!
b110 l/
0_%
1C'
1>'
11,
1,,
#1535000
1!
1_%
0C'
0>'
01,
0,,
#1540000
0!
b111 l/
0_%
1C'
1>'
11,
1,,
#1545000
1!
1_%
0C'
0>'
01,
0,,
#1550000
0!
b1000 l/
0_%
1C'
1>'
11,
1,,
#1555000
1!
1_%
0C'
0>'
01,
0,,
#1560000
0!
b1001 l/
0_%
1C'
1>'
11,
1,,
#1565000
1!
1_%
0C'
0>'
01,
0,,
#1570000
0!
b1010 l/
b0 /
1$
b11010000000011 &
b11010000000011 e%
1c%
0_%
04'
06'
0D'
0E'
1C'
1>'
11,
1,,
b11010000000011 H'
b11010000000011 B'
b11010000000011 /'
b11010000000011 &'
b11010000000011 j%
#1575000
1!
b1 /
1_%
0C'
0>'
01,
0,,
#1580000
0!
b100000000011010010000011 &
b100 #
b100 b%
b100000000011010010000011 e%
0_%
b1 ,'
b1 F'
1C'
1>'
11,
1,,
b100000000011010010000011 I'
#1585000
1!
b10 /
1_%
0C'
0>'
01,
0,,
#1590000
0!
b1000000000011010100000011 &
b1000 #
b1000 b%
b1000000000011010100000011 e%
0_%
b10 ,'
b10 F'
1C'
1>'
11,
1,,
b1000000000011010100000011 J'
#1595000
1!
b11 /
1_%
0C'
0>'
01,
0,,
#1600000
0!
b1100000000011010110000011 &
b1100 #
b1100 b%
b1100000000011010110000011 e%
0_%
b11 ,'
b11 F'
1C'
1>'
11,
1,,
b1100000000011010110000011 K'
#1605000
1!
b100 /
1_%
0C'
0>'
01,
0,,
#1610000
0!
b10000000000011011000000011 &
b10000 #
b10000 b%
b10000000000011011000000011 e%
0_%
b100 ,'
b100 F'
1C'
1>'
11,
1,,
b10000000000011011000000011 L'
#1615000
1!
b101 /
1_%
0C'
0>'
01,
0,,
#1620000
0!
b10100000000011011010000011 &
b10100 #
b10100 b%
b10100000000011011010000011 e%
0_%
b101 ,'
b101 F'
1C'
1>'
11,
1,,
b10100000000011011010000011 M'
#1625000
1!
b110 /
1_%
0C'
0>'
01,
0,,
#1630000
0!
b11000000000011011100000011 &
b11000 #
b11000 b%
b11000000000011011100000011 e%
0_%
b110 ,'
b110 F'
1C'
1>'
11,
1,,
b11000000000011011100000011 N'
#1635000
1!
b111 /
1_%
0C'
0>'
01,
0,,
#1640000
0!
b11100000000011011110000011 &
b11100 #
b11100 b%
b11100000000011011110000011 e%
0_%
b111 ,'
b111 F'
1C'
1>'
11,
1,,
b11100000000011011110000011 O'
#1645000
1!
b1000 /
1_%
0C'
0>'
01,
0,,
#1650000
0!
b100000000000011100000000011 &
b100000 #
b100000 b%
b100000000000011100000000011 e%
0_%
b1000 ,'
b1000 F'
1C'
1>'
11,
1,,
b100000000000011100000000011 P'
#1655000
1!
b1001 /
1_%
0C'
0>'
01,
0,,
#1660000
0!
b100100000000011100010000011 &
b100100 #
b100100 b%
b100100000000011100010000011 e%
0_%
b1001 ,'
b1001 F'
1C'
1>'
11,
1,,
b100100000000011100010000011 Q'
#1665000
1!
b1010 /
1_%
0C'
0>'
01,
0,,
#1670000
0!
b10100101000000100100110011 &
b101000 #
b101000 b%
b10100101000000100100110011 e%
0_%
b1010 ,'
b1010 F'
1C'
1>'
11,
1,,
b10100101000000100100110011 R'
#1675000
1!
b1011 /
1_%
0C'
0>'
01,
0,,
#1680000
0!
b10101101010000100110110011 &
b101100 #
b101100 b%
b10101101010000100110110011 e%
0_%
b1011 ,'
b1011 F'
1C'
1>'
11,
1,,
b10101101010000100110110011 S'
#1685000
1!
b1100 /
1_%
0C'
0>'
01,
0,,
#1690000
0!
b10110101100000101000110011 &
b110000 #
b110000 b%
b10110101100000101000110011 e%
0_%
b1100 ,'
b1100 F'
1C'
1>'
11,
1,,
b10110101100000101000110011 T'
#1695000
1!
b1101 /
1_%
0C'
0>'
01,
0,,
#1700000
0!
b10111101110000101010110011 &
b110100 #
b110100 b%
b10111101110000101010110011 e%
0_%
b1101 ,'
b1101 F'
1C'
1>'
11,
1,,
b10111101110000101010110011 U'
#1705000
1!
b1110 /
1_%
0C'
0>'
01,
0,,
#1710000
0!
b11000110000000101100110011 &
b111000 #
b111000 b%
b11000110000000101100110011 e%
0_%
b1110 ,'
b1110 F'
1C'
1>'
11,
1,,
b11000110000000101100110011 V'
#1715000
1!
b1111 /
1_%
0C'
0>'
01,
0,,
#1720000
0!
b101110010011 &
b111100 #
b111100 b%
b101110010011 e%
0_%
b1111 ,'
b1111 F'
1C'
1>'
11,
1,,
b101110010011 W'
#1725000
1!
b10000 /
1_%
0C'
0>'
01,
0,,
#1730000
0!
b1001010111000101110110011 &
b1000000 #
b1000000 b%
b1001010111000101110110011 e%
0_%
b10000 ,'
b10000 F'
1C'
1>'
11,
1,,
b1001010111000101110110011 X'
#1735000
1!
b10001 /
1_%
0C'
0>'
01,
0,,
#1740000
0!
b1001110111000101110110011 &
b1000100 #
b1000100 b%
b1001110111000101110110011 e%
0_%
b10001 ,'
b10001 F'
1C'
1>'
11,
1,,
b1001110111000101110110011 Y'
#1745000
1!
b10010 /
1_%
0C'
0>'
01,
0,,
#1750000
0!
b1010010111000101110110011 &
b1001000 #
b1001000 b%
b1010010111000101110110011 e%
0_%
b10010 ,'
b10010 F'
1C'
1>'
11,
1,,
b1010010111000101110110011 Z'
#1755000
1!
b10011 /
1_%
0C'
0>'
01,
0,,
#1760000
0!
b1010110111000101110110011 &
b1001100 #
b1001100 b%
b1010110111000101110110011 e%
0_%
b10011 ,'
b10011 F'
1C'
1>'
11,
1,,
b1010110111000101110110011 ['
#1765000
1!
b10100 /
1_%
0C'
0>'
01,
0,,
#1770000
0!
b1011010111000101110110011 &
b1010000 #
b1010000 b%
b1011010111000101110110011 e%
0_%
b10100 ,'
b10100 F'
1C'
1>'
11,
1,,
b1011010111000101110110011 \'
#1775000
1!
b10101 /
1_%
0C'
0>'
01,
0,,
#1780000
0!
b10011 &
b1010100 #
b1010100 b%
b10011 e%
0_%
b10101 ,'
b10101 F'
1C'
1>'
11,
1,,
b10011 ]'
#1785000
1!
b10110 /
1_%
0C'
0>'
01,
0,,
#1790000
0!
b1011000 #
b1011000 b%
0_%
b10110 ,'
b10110 F'
1C'
1>'
11,
1,,
b10011 ^'
#1795000
1!
b10111 /
1_%
0C'
0>'
01,
0,,
#1800000
0!
b1011100 #
b1011100 b%
0_%
b10111 ,'
b10111 F'
1C'
1>'
11,
1,,
b10011 _'
#1805000
1!
b11000 /
1_%
0C'
0>'
01,
0,,
#1810000
0!
b1100000 #
b1100000 b%
0_%
b11000 ,'
b11000 F'
1C'
1>'
11,
1,,
b10011 `'
#1815000
1!
b11001 /
1_%
0C'
0>'
01,
0,,
#1820000
0!
b110000000000000000000001111110 &
b1100100 #
b1100100 b%
b110000000000000000000001111110 e%
0_%
b11001 ,'
b11001 F'
1C'
1>'
11,
1,,
b110000000000000000000001111110 a'
#1825000
1!
b11010 /
1_%
0C'
0>'
01,
0,,
#1830000
0!
b0 &
b1101000 #
b1101000 b%
b0 e%
0_%
b11010 ,'
b11010 F'
1C'
1>'
11,
1,,
b0 b'
#1835000
1!
b11011 /
1_%
0C'
0>'
01,
0,,
#1840000
0!
b1101100 #
b1101100 b%
0_%
b11011 ,'
b11011 F'
1C'
1>'
11,
1,,
b0 c'
#1845000
1!
b11100 /
1_%
0C'
0>'
01,
0,,
#1850000
0!
b1110000 #
b1110000 b%
0_%
b11100 ,'
b11100 F'
1C'
1>'
11,
1,,
b0 d'
#1855000
1!
b11101 /
1_%
0C'
0>'
01,
0,,
#1860000
0!
b1110100 #
b1110100 b%
0_%
b11101 ,'
b11101 F'
1C'
1>'
11,
1,,
b0 e'
#1865000
1!
b11110 /
1_%
0C'
0>'
01,
0,,
#1870000
0!
b1111000 #
b1111000 b%
0_%
b11110 ,'
b11110 F'
1C'
1>'
11,
1,,
b0 f'
#1875000
1!
b11111 /
1_%
0C'
0>'
01,
0,,
#1880000
0!
b1111100 #
b1111100 b%
0_%
b11111 ,'
b11111 F'
1C'
1>'
11,
1,,
b0 g'
#1885000
1!
b100000 /
1_%
0C'
0>'
01,
0,,
#1890000
0!
b10000000 #
b10000000 b%
0_%
b100000 ,'
b100000 F'
1C'
1>'
11,
1,,
b0 h'
#1895000
1!
b100001 /
1_%
0C'
0>'
01,
0,,
#1900000
0!
b10000100 #
b10000100 b%
0_%
b100001 ,'
b100001 F'
1C'
1>'
11,
1,,
b0 i'
#1905000
1!
b100010 /
1_%
0C'
0>'
01,
0,,
#1910000
0!
b10001000 #
b10001000 b%
0_%
b100010 ,'
b100010 F'
1C'
1>'
11,
1,,
b0 j'
#1915000
1!
b100011 /
1_%
0C'
0>'
01,
0,,
#1920000
0!
b10001100 #
b10001100 b%
0_%
b100011 ,'
b100011 F'
1C'
1>'
11,
1,,
b0 k'
#1925000
1!
b100100 /
1_%
0C'
0>'
01,
0,,
#1930000
0!
b10010000 #
b10010000 b%
0_%
b100100 ,'
b100100 F'
1C'
1>'
11,
1,,
b0 l'
#1935000
1!
b100101 /
1_%
0C'
0>'
01,
0,,
#1940000
0!
b10010100 #
b10010100 b%
0_%
b100101 ,'
b100101 F'
1C'
1>'
11,
1,,
b0 m'
#1945000
1!
b100110 /
1_%
0C'
0>'
01,
0,,
#1950000
0!
b10011000 #
b10011000 b%
0_%
b100110 ,'
b100110 F'
1C'
1>'
11,
1,,
b0 n'
#1955000
1!
b100111 /
1_%
0C'
0>'
01,
0,,
#1960000
0!
b10011100 #
b10011100 b%
0_%
b100111 ,'
b100111 F'
1C'
1>'
11,
1,,
b0 o'
#1965000
1!
b101000 /
1_%
0C'
0>'
01,
0,,
#1970000
0!
b10100000 #
b10100000 b%
0_%
b101000 ,'
b101000 F'
1C'
1>'
11,
1,,
b0 p'
#1975000
1!
b101001 /
1_%
0C'
0>'
01,
0,,
#1980000
0!
b10100100 #
b10100100 b%
0_%
b101001 ,'
b101001 F'
1C'
1>'
11,
1,,
b0 q'
#1985000
1!
b101010 /
1_%
0C'
0>'
01,
0,,
#1990000
0!
b10101000 #
b10101000 b%
0_%
b101010 ,'
b101010 F'
1C'
1>'
11,
1,,
b0 r'
#1995000
1!
b101011 /
1_%
0C'
0>'
01,
0,,
#2000000
0!
b10101100 #
b10101100 b%
0_%
b101011 ,'
b101011 F'
1C'
1>'
11,
1,,
b0 s'
#2005000
1!
b101100 /
1_%
0C'
0>'
01,
0,,
#2010000
0!
b10110000 #
b10110000 b%
0_%
b101100 ,'
b101100 F'
1C'
1>'
11,
1,,
b0 t'
#2015000
1!
b101101 /
1_%
0C'
0>'
01,
0,,
#2020000
0!
b10110100 #
b10110100 b%
0_%
b101101 ,'
b101101 F'
1C'
1>'
11,
1,,
b0 u'
#2025000
1!
b101110 /
1_%
0C'
0>'
01,
0,,
#2030000
0!
b10111000 #
b10111000 b%
0_%
b101110 ,'
b101110 F'
1C'
1>'
11,
1,,
b0 v'
#2035000
1!
b101111 /
1_%
0C'
0>'
01,
0,,
#2040000
0!
b10111100 #
b10111100 b%
0_%
b101111 ,'
b101111 F'
1C'
1>'
11,
1,,
b0 w'
#2045000
1!
b110000 /
1_%
0C'
0>'
01,
0,,
#2050000
0!
b11000000 #
b11000000 b%
0_%
b110000 ,'
b110000 F'
1C'
1>'
11,
1,,
b0 x'
#2055000
1!
b110001 /
1_%
0C'
0>'
01,
0,,
#2060000
0!
b11000100 #
b11000100 b%
0_%
b110001 ,'
b110001 F'
1C'
1>'
11,
1,,
b0 y'
#2065000
1!
b110010 /
1_%
0C'
0>'
01,
0,,
#2070000
0!
b11001000 #
b11001000 b%
0_%
b110010 ,'
b110010 F'
1C'
1>'
11,
1,,
b0 z'
#2075000
1!
b110011 /
1_%
0C'
0>'
01,
0,,
#2080000
0!
b11001100 #
b11001100 b%
0_%
b110011 ,'
b110011 F'
1C'
1>'
11,
1,,
b0 {'
#2085000
1!
b110100 /
1_%
0C'
0>'
01,
0,,
#2090000
0!
b11010000 #
b11010000 b%
0_%
b110100 ,'
b110100 F'
1C'
1>'
11,
1,,
b0 |'
#2095000
1!
b110101 /
1_%
0C'
0>'
01,
0,,
#2100000
0!
b11010100 #
b11010100 b%
0_%
b110101 ,'
b110101 F'
1C'
1>'
11,
1,,
b0 }'
#2105000
1!
b110110 /
1_%
0C'
0>'
01,
0,,
#2110000
0!
b11011000 #
b11011000 b%
0_%
b110110 ,'
b110110 F'
1C'
1>'
11,
1,,
b0 ~'
#2115000
1!
b110111 /
1_%
0C'
0>'
01,
0,,
#2120000
0!
b11011100 #
b11011100 b%
0_%
b110111 ,'
b110111 F'
1C'
1>'
11,
1,,
b0 !(
#2125000
1!
b111000 /
1_%
0C'
0>'
01,
0,,
#2130000
0!
b11100000 #
b11100000 b%
0_%
b111000 ,'
b111000 F'
1C'
1>'
11,
1,,
b0 "(
#2135000
1!
b111001 /
1_%
0C'
0>'
01,
0,,
#2140000
0!
b11100100 #
b11100100 b%
0_%
b111001 ,'
b111001 F'
1C'
1>'
11,
1,,
b0 #(
#2145000
1!
b111010 /
1_%
0C'
0>'
01,
0,,
#2150000
0!
b11101000 #
b11101000 b%
0_%
b111010 ,'
b111010 F'
1C'
1>'
11,
1,,
b0 $(
#2155000
1!
b111011 /
1_%
0C'
0>'
01,
0,,
#2160000
0!
b11101100 #
b11101100 b%
0_%
b111011 ,'
b111011 F'
1C'
1>'
11,
1,,
b0 %(
#2165000
1!
b111100 /
1_%
0C'
0>'
01,
0,,
#2170000
0!
b11110000 #
b11110000 b%
0_%
b111100 ,'
b111100 F'
1C'
1>'
11,
1,,
b0 &(
#2175000
1!
b111101 /
1_%
0C'
0>'
01,
0,,
#2180000
0!
b11110100 #
b11110100 b%
0_%
b111101 ,'
b111101 F'
1C'
1>'
11,
1,,
b0 '(
#2185000
1!
b111110 /
1_%
0C'
0>'
01,
0,,
#2190000
0!
b11111000 #
b11111000 b%
0_%
b111110 ,'
b111110 F'
1C'
1>'
11,
1,,
b0 ((
#2195000
1!
b111111 /
1_%
0C'
0>'
01,
0,,
#2200000
0!
b11111100 #
b11111100 b%
0_%
b111111 ,'
b111111 F'
1C'
1>'
11,
1,,
b0 )(
#2205000
1!
b1000000 /
1_%
0C'
0>'
01,
0,,
#2210000
0!
b100000000 #
b100000000 b%
0_%
b1000000 ,'
b1000000 F'
1C'
1>'
11,
1,,
b0 *(
#2215000
1!
b1000001 /
1_%
0C'
0>'
01,
0,,
#2220000
0!
b100000100 #
b100000100 b%
0_%
b1000001 ,'
b1000001 F'
1C'
1>'
11,
1,,
b0 +(
#2225000
1!
b1000010 /
1_%
0C'
0>'
01,
0,,
#2230000
0!
b100001000 #
b100001000 b%
0_%
b1000010 ,'
b1000010 F'
1C'
1>'
11,
1,,
b0 ,(
#2235000
1!
b1000011 /
1_%
0C'
0>'
01,
0,,
#2240000
0!
b100001100 #
b100001100 b%
0_%
b1000011 ,'
b1000011 F'
1C'
1>'
11,
1,,
b0 -(
#2245000
1!
b1000100 /
1_%
0C'
0>'
01,
0,,
#2250000
0!
b100010000 #
b100010000 b%
0_%
b1000100 ,'
b1000100 F'
1C'
1>'
11,
1,,
b0 .(
#2255000
1!
b1000101 /
1_%
0C'
0>'
01,
0,,
#2260000
0!
b100010100 #
b100010100 b%
0_%
b1000101 ,'
b1000101 F'
1C'
1>'
11,
1,,
b0 /(
#2265000
1!
b1000110 /
1_%
0C'
0>'
01,
0,,
#2270000
0!
b100011000 #
b100011000 b%
0_%
b1000110 ,'
b1000110 F'
1C'
1>'
11,
1,,
b0 0(
#2275000
1!
b1000111 /
1_%
0C'
0>'
01,
0,,
#2280000
0!
b100011100 #
b100011100 b%
0_%
b1000111 ,'
b1000111 F'
1C'
1>'
11,
1,,
b0 1(
#2285000
1!
b1001000 /
1_%
0C'
0>'
01,
0,,
#2290000
0!
b100100000 #
b100100000 b%
0_%
b1001000 ,'
b1001000 F'
1C'
1>'
11,
1,,
b0 2(
#2295000
1!
b1001001 /
1_%
0C'
0>'
01,
0,,
#2300000
0!
b100100100 #
b100100100 b%
0_%
b1001001 ,'
b1001001 F'
1C'
1>'
11,
1,,
b0 3(
#2305000
1!
b1001010 /
1_%
0C'
0>'
01,
0,,
#2310000
0!
b100101000 #
b100101000 b%
0_%
b1001010 ,'
b1001010 F'
1C'
1>'
11,
1,,
b0 4(
#2315000
1!
b1001011 /
1_%
0C'
0>'
01,
0,,
#2320000
0!
b100101100 #
b100101100 b%
0_%
b1001011 ,'
b1001011 F'
1C'
1>'
11,
1,,
b0 5(
#2325000
1!
b1001100 /
1_%
0C'
0>'
01,
0,,
#2330000
0!
b100110000 #
b100110000 b%
0_%
b1001100 ,'
b1001100 F'
1C'
1>'
11,
1,,
b0 6(
#2335000
1!
b1001101 /
1_%
0C'
0>'
01,
0,,
#2340000
0!
b100110100 #
b100110100 b%
0_%
b1001101 ,'
b1001101 F'
1C'
1>'
11,
1,,
b0 7(
#2345000
1!
b1001110 /
1_%
0C'
0>'
01,
0,,
#2350000
0!
b100111000 #
b100111000 b%
0_%
b1001110 ,'
b1001110 F'
1C'
1>'
11,
1,,
b0 8(
#2355000
1!
b1001111 /
1_%
0C'
0>'
01,
0,,
#2360000
0!
b100111100 #
b100111100 b%
0_%
b1001111 ,'
b1001111 F'
1C'
1>'
11,
1,,
b0 9(
#2365000
1!
b1010000 /
1_%
0C'
0>'
01,
0,,
#2370000
0!
b101000000 #
b101000000 b%
0_%
b1010000 ,'
b1010000 F'
1C'
1>'
11,
1,,
b0 :(
#2375000
1!
b1010001 /
1_%
0C'
0>'
01,
0,,
#2380000
0!
b101000100 #
b101000100 b%
0_%
b1010001 ,'
b1010001 F'
1C'
1>'
11,
1,,
b0 ;(
#2385000
1!
b1010010 /
1_%
0C'
0>'
01,
0,,
#2390000
0!
b101001000 #
b101001000 b%
0_%
b1010010 ,'
b1010010 F'
1C'
1>'
11,
1,,
b0 <(
#2395000
1!
b1010011 /
1_%
0C'
0>'
01,
0,,
#2400000
0!
b101001100 #
b101001100 b%
0_%
b1010011 ,'
b1010011 F'
1C'
1>'
11,
1,,
b0 =(
#2405000
1!
b1010100 /
1_%
0C'
0>'
01,
0,,
#2410000
0!
b101010000 #
b101010000 b%
0_%
b1010100 ,'
b1010100 F'
1C'
1>'
11,
1,,
b0 >(
#2415000
1!
b1010101 /
1_%
0C'
0>'
01,
0,,
#2420000
0!
b101010100 #
b101010100 b%
0_%
b1010101 ,'
b1010101 F'
1C'
1>'
11,
1,,
b0 ?(
#2425000
1!
b1010110 /
1_%
0C'
0>'
01,
0,,
#2430000
0!
b101011000 #
b101011000 b%
0_%
b1010110 ,'
b1010110 F'
1C'
1>'
11,
1,,
b0 @(
#2435000
1!
b1010111 /
1_%
0C'
0>'
01,
0,,
#2440000
0!
b101011100 #
b101011100 b%
0_%
b1010111 ,'
b1010111 F'
1C'
1>'
11,
1,,
b0 A(
#2445000
1!
b1011000 /
1_%
0C'
0>'
01,
0,,
#2450000
0!
b101100000 #
b101100000 b%
0_%
b1011000 ,'
b1011000 F'
1C'
1>'
11,
1,,
b0 B(
#2455000
1!
b1011001 /
1_%
0C'
0>'
01,
0,,
#2460000
0!
b101100100 #
b101100100 b%
0_%
b1011001 ,'
b1011001 F'
1C'
1>'
11,
1,,
b0 C(
#2465000
1!
b1011010 /
1_%
0C'
0>'
01,
0,,
#2470000
0!
b101101000 #
b101101000 b%
0_%
b1011010 ,'
b1011010 F'
1C'
1>'
11,
1,,
b0 D(
#2475000
1!
b1011011 /
1_%
0C'
0>'
01,
0,,
#2480000
0!
b101101100 #
b101101100 b%
0_%
b1011011 ,'
b1011011 F'
1C'
1>'
11,
1,,
b0 E(
#2485000
1!
b1011100 /
1_%
0C'
0>'
01,
0,,
#2490000
0!
b101110000 #
b101110000 b%
0_%
b1011100 ,'
b1011100 F'
1C'
1>'
11,
1,,
b0 F(
#2495000
1!
b1011101 /
1_%
0C'
0>'
01,
0,,
#2500000
0!
b101110100 #
b101110100 b%
0_%
b1011101 ,'
b1011101 F'
1C'
1>'
11,
1,,
b0 G(
#2505000
1!
b1011110 /
1_%
0C'
0>'
01,
0,,
#2510000
0!
b101111000 #
b101111000 b%
0_%
b1011110 ,'
b1011110 F'
1C'
1>'
11,
1,,
b0 H(
#2515000
1!
b1011111 /
1_%
0C'
0>'
01,
0,,
#2520000
0!
b101111100 #
b101111100 b%
0_%
b1011111 ,'
b1011111 F'
1C'
1>'
11,
1,,
b0 I(
#2525000
1!
b1100000 /
1_%
0C'
0>'
01,
0,,
#2530000
0!
b110000000 #
b110000000 b%
0_%
b1100000 ,'
b1100000 F'
1C'
1>'
11,
1,,
b0 J(
#2535000
1!
b1100001 /
1_%
0C'
0>'
01,
0,,
#2540000
0!
b110000100 #
b110000100 b%
0_%
b1100001 ,'
b1100001 F'
1C'
1>'
11,
1,,
b0 K(
#2545000
1!
b1100010 /
1_%
0C'
0>'
01,
0,,
#2550000
0!
b110001000 #
b110001000 b%
0_%
b1100010 ,'
b1100010 F'
1C'
1>'
11,
1,,
b0 L(
#2555000
1!
b1100011 /
1_%
0C'
0>'
01,
0,,
#2560000
0!
b110001100 #
b110001100 b%
0_%
b1100011 ,'
b1100011 F'
1C'
1>'
11,
1,,
b0 M(
#2565000
1!
b1100100 /
1_%
0C'
0>'
01,
0,,
#2570000
0!
b110010000 #
b110010000 b%
0_%
b1100100 ,'
b1100100 F'
1C'
1>'
11,
1,,
b0 N(
#2575000
1!
b1100101 /
1_%
0C'
0>'
01,
0,,
#2580000
0!
b110010100 #
b110010100 b%
0_%
b1100101 ,'
b1100101 F'
1C'
1>'
11,
1,,
b0 O(
#2585000
1!
b1100110 /
1_%
0C'
0>'
01,
0,,
#2590000
0!
b110011000 #
b110011000 b%
0_%
b1100110 ,'
b1100110 F'
1C'
1>'
11,
1,,
b0 P(
#2595000
1!
b1100111 /
1_%
0C'
0>'
01,
0,,
#2600000
0!
b110011100 #
b110011100 b%
0_%
b1100111 ,'
b1100111 F'
1C'
1>'
11,
1,,
b0 Q(
#2605000
1!
b1101000 /
1_%
0C'
0>'
01,
0,,
#2610000
0!
b110100000 #
b110100000 b%
0_%
b1101000 ,'
b1101000 F'
1C'
1>'
11,
1,,
b0 R(
#2615000
1!
b1101001 /
1_%
0C'
0>'
01,
0,,
#2620000
0!
b110100100 #
b110100100 b%
0_%
b1101001 ,'
b1101001 F'
1C'
1>'
11,
1,,
b0 S(
#2625000
1!
b1101010 /
1_%
0C'
0>'
01,
0,,
#2630000
0!
b110101000 #
b110101000 b%
0_%
b1101010 ,'
b1101010 F'
1C'
1>'
11,
1,,
b0 T(
#2635000
1!
b1101011 /
1_%
0C'
0>'
01,
0,,
#2640000
0!
b110101100 #
b110101100 b%
0_%
b1101011 ,'
b1101011 F'
1C'
1>'
11,
1,,
b0 U(
#2645000
1!
b1101100 /
1_%
0C'
0>'
01,
0,,
#2650000
0!
b110110000 #
b110110000 b%
0_%
b1101100 ,'
b1101100 F'
1C'
1>'
11,
1,,
b0 V(
#2655000
1!
b1101101 /
1_%
0C'
0>'
01,
0,,
#2660000
0!
b110110100 #
b110110100 b%
0_%
b1101101 ,'
b1101101 F'
1C'
1>'
11,
1,,
b0 W(
#2665000
1!
b1101110 /
1_%
0C'
0>'
01,
0,,
#2670000
0!
b110111000 #
b110111000 b%
0_%
b1101110 ,'
b1101110 F'
1C'
1>'
11,
1,,
b0 X(
#2675000
1!
b1101111 /
1_%
0C'
0>'
01,
0,,
#2680000
0!
b110111100 #
b110111100 b%
0_%
b1101111 ,'
b1101111 F'
1C'
1>'
11,
1,,
b0 Y(
#2685000
1!
b1110000 /
1_%
0C'
0>'
01,
0,,
#2690000
0!
b111000000 #
b111000000 b%
0_%
b1110000 ,'
b1110000 F'
1C'
1>'
11,
1,,
b0 Z(
#2695000
1!
b1110001 /
1_%
0C'
0>'
01,
0,,
#2700000
0!
b111000100 #
b111000100 b%
0_%
b1110001 ,'
b1110001 F'
1C'
1>'
11,
1,,
b0 [(
#2705000
1!
b1110010 /
1_%
0C'
0>'
01,
0,,
#2710000
0!
b111001000 #
b111001000 b%
0_%
b1110010 ,'
b1110010 F'
1C'
1>'
11,
1,,
b0 \(
#2715000
1!
b1110011 /
1_%
0C'
0>'
01,
0,,
#2720000
0!
b111001100 #
b111001100 b%
0_%
b1110011 ,'
b1110011 F'
1C'
1>'
11,
1,,
b0 ](
#2725000
1!
b1110100 /
1_%
0C'
0>'
01,
0,,
#2730000
0!
b111010000 #
b111010000 b%
0_%
b1110100 ,'
b1110100 F'
1C'
1>'
11,
1,,
b0 ^(
#2735000
1!
b1110101 /
1_%
0C'
0>'
01,
0,,
#2740000
0!
b111010100 #
b111010100 b%
0_%
b1110101 ,'
b1110101 F'
1C'
1>'
11,
1,,
b0 _(
#2745000
1!
b1110110 /
1_%
0C'
0>'
01,
0,,
#2750000
0!
b111011000 #
b111011000 b%
0_%
b1110110 ,'
b1110110 F'
1C'
1>'
11,
1,,
b0 `(
#2755000
1!
b1110111 /
1_%
0C'
0>'
01,
0,,
#2760000
0!
b111011100 #
b111011100 b%
0_%
b1110111 ,'
b1110111 F'
1C'
1>'
11,
1,,
b0 a(
#2765000
1!
b1111000 /
1_%
0C'
0>'
01,
0,,
#2770000
0!
b111100000 #
b111100000 b%
0_%
b1111000 ,'
b1111000 F'
1C'
1>'
11,
1,,
b0 b(
#2775000
1!
b1111001 /
1_%
0C'
0>'
01,
0,,
#2780000
0!
b111100100 #
b111100100 b%
0_%
b1111001 ,'
b1111001 F'
1C'
1>'
11,
1,,
b0 c(
#2785000
1!
b1111010 /
1_%
0C'
0>'
01,
0,,
#2790000
0!
b111101000 #
b111101000 b%
0_%
b1111010 ,'
b1111010 F'
1C'
1>'
11,
1,,
b0 d(
#2795000
1!
b1111011 /
1_%
0C'
0>'
01,
0,,
#2800000
0!
b111101100 #
b111101100 b%
0_%
b1111011 ,'
b1111011 F'
1C'
1>'
11,
1,,
b0 e(
#2805000
1!
b1111100 /
1_%
0C'
0>'
01,
0,,
#2810000
0!
b111110000 #
b111110000 b%
0_%
b1111100 ,'
b1111100 F'
1C'
1>'
11,
1,,
b0 f(
#2815000
1!
b1111101 /
1_%
0C'
0>'
01,
0,,
#2820000
0!
b111110100 #
b111110100 b%
0_%
b1111101 ,'
b1111101 F'
1C'
1>'
11,
1,,
b0 g(
#2825000
1!
b1111110 /
1_%
0C'
0>'
01,
0,,
#2830000
0!
b111111000 #
b111111000 b%
0_%
b1111110 ,'
b1111110 F'
1C'
1>'
11,
1,,
b0 h(
#2835000
1!
b1111111 /
1_%
0C'
0>'
01,
0,,
#2840000
0!
b111111100 #
b111111100 b%
0_%
b1111111 ,'
b1111111 F'
1C'
1>'
11,
1,,
b0 i(
#2845000
1!
b10000000 /
0$
b0 #
b1 k/
b0 l/
b0 b%
0c%
1_%
b0 ,'
14'
16'
1D'
1E'
b0 F'
0C'
0>'
01,
0,,
#2850000
0!
b1 l/
1-
b0 w"
1a%
0_%
bx g-
1d+
bx J*
x"*
b10 x)
b11010000000011 q(
b100 m(
b100 !'
1C'
1>'
11,
1,,
#2855000
1!
1_%
0C'
0>'
01,
0,,
b1 w"
bx f-
bx I*
b100 l(
b100 ~&
1c+
x!*
b10 w)
b11010000000011 p(
1"&
1#&
1%&
1.&
1/&
b10 <&
x=&
1[&
b100 }&
b100 m%
bx H&
bx c&
b11 Z*
b1000 N*
1x(
1v(
1y(
1u(
b0 r(
xD+
b100 o&
b100 >*
bx >+
bx ?+
b1000 n&
b1000 v&
b1000 k%
bx N&
bx M&
b100 l%
b0 8&
12&
16&
13&
15&
b11 m)
b1101000 l)
b1000 x&
b1000 m(
b1 +'
b0 x)
12*
1&*
16*
1|)
b0 k)
b1 A'
b0 ;&
b1000 s&
b100000000011010010000011 B'
b0 J*
b1000 z&
b1000 r&
b100000000011010010000011 /'
b1000 !'
b100000000011010010000011 &'
b100000000011010010000011 j%
b100000000011010010000011 q(
#2860000
0!
0_%
1C'
1>'
11,
1,,
#2865000
1!
1_%
0C'
0>'
01,
0,,
b10 w"
b0 I*
b100 =*
b1000 l(
b1000 ~&
xC+
15*
11*
1%*
1{)
b1000 M*
b11 Y*
b0 w)
b100000000011010010000011 p(
1v%
1(&
b0 <&
b11 K&
b1000 L&
1B&
1C&
1?&
1@&
xS&
b1000 }&
b1000 m%
b100 E&
b0 H&
b1000 b*
b1001 N*
b1000 p+
1X+
1L+
1P+
x[-
b1000 o&
b1000 >*
b100 `+
b0 >+
b0 ?+
b1100 n&
b1100 v&
b1100 k%
b0 N&
b0 M&
b1000 l%
b11 s*
b10000000001101001 l)
b1100 x&
b1100 m(
b10 +'
b0 |*
b1000 k)
b10 A'
b1000 ;&
b1100 s&
b1000000000011010100000011 B'
b1000 J*
b1100 z&
b1100 r&
b1000000000011010100000011 /'
b1100 !'
b1000000000011010100000011 &'
b1000000000011010100000011 j%
b1000000000011010100000011 q(
#2870000
0!
0_%
1C'
1>'
11,
1,,
#2875000
1!
1_%
0C'
0>'
01,
0,,
b11 w"
b1000 o+
b100 _+
b1000 I*
b1000 =*
b1100 l(
b1100 ~&
xZ-
1W+
1O+
1K+
b1000 a*
b1001 M*
b1000000000011010100000011 p(
1u%
0v%
1'&
0(&
b1001 L&
b1000 l&
1U&
1V&
1X&
x`&
b1100 }&
b1100 m%
b1000 E&
b1000 H&
b100 Z&
b1000 ^&
b10000 b*
b1010 N*
b1001 p+
b10 <+
0#,
1_-
1c-
b1100 o&
b1100 >*
b1000 `+
b1100 >+
b1100 ?+
b1000 ~*
b1000 o-
b10 :+
b10000 n&
b10000 v&
b10000 k%
0-,
b10 h&
b1000 O&
b1100 N&
b1100 M&
b1100 l%
b100000000001101010 l)
b10000 x&
b10000 m(
b1 0,
b1000 .+
b1111111111111111111111111111111111111111111111111111111111111000 -+
b1000 0+
b1 2+
b11 +'
b10000 k)
b1000 "+
17+
0#+
0Q&
b11 A'
b1000 P&
b10000 ;&
b1 {+
b10000 s&
0d+
b1100000000011010110000011 B'
b1000 h+
b10000 J*
b1 r+
b10000 z&
b10000 r&
b1 _&
b1100000000011010110000011 /'
b10000 !'
b1 g-
b1100000000011010110000011 &'
b1100000000011010110000011 j%
b1100000000011010110000011 q(
#2880000
0!
0_%
1C'
1>'
11,
1,,
#2885000
1!
1_%
0C'
0>'
01,
0,,
b100 w"
b1000 n-
b1001 o+
b1 f-
b1000 g+
b1000 _+
b10000 I*
b1100 =*
b10000 l(
b10000 ~&
1b-
1^-
0c+
b10000 a*
b1010 M*
b1100000000011010110000011 p(
1v%
1(&
b1010 L&
b10000 l&
0[&
1a&
1b&
b10000 }&
b10000 m%
b1100 E&
b10000 H&
b1000 Z&
b1000 \&
b1 c&
b1001 ^&
b1000 e&
b11000 b*
b1011 N*
b1010 p+
b0 <+
b1 q-
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b10000 o&
b10000 >*
b1100 `+
b11000 >+
b11000 ?+
b10000 ~*
b1000 k-
b1 w+
b1000 f*
b1001 o-
b0 :+
b10100 n&
b10100 v&
b1 /,
b10100 k%
b0 h&
b1000 j&
b10000 O&
b11000 N&
b11000 M&
b10000 l%
b1 f&
b110000000001101011 l)
b10100 x&
b10 0,
b10100 m(
b0 f*
b10000 .+
b1111111111111111111111111111111111111111111111111111111111110000 -+
b10000 0+
b100 +'
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1 R)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b11000 k)
b10000 "+
b100 A'
b10000 P&
b11000 ;&
b0 j&
b10 {+
b10100 s&
b10000000000011011000000011 B'
b10000 h+
b11000 J*
b10 r+
b10100 z&
b10100 r&
b10 _&
b10000000000011011000000011 /'
b10100 !'
b10 g-
b10000000000011011000000011 &'
b10000000000011011000000011 j%
b10000000000011011000000011 q(
#2890000
0!
0_%
1C'
1>'
11,
1,,
#2895000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
b101 w"
b1001 n-
b1010 o+
b1000 j-
b10 f-
b10000 g+
b1100 _+
b11000 I*
b10000 =*
b10100 l(
b10100 ~&
b11000 a*
b1011 M*
b1 2)
b10000000000011011000000011 p(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
1t%
0u%
0v%
1&&
0'&
0(&
b1011 L&
b11000 l&
b10100 }&
b10100 m%
b10000 E&
b11000 H&
b1100 Z&
b10000 \&
b10 c&
b1000 d&
b1010 ^&
b1001 e&
1V*
b0 b*
b1100 N*
b1011 p+
b10100 o&
b10100 >*
b10000 `+
b100100 >+
b100100 ?+
b11000 ~*
b10000 k-
b10 w+
b10 q-
b1010 o-
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1 S)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b11000 n&
b11000 v&
b10 /,
b11000 k%
b10 f&
b11000 O&
b100100 N&
b100100 M&
b10100 l%
b1000000000001101100 l)
b11000 x&
b11 0,
b11000 m(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b10 S)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b11000 .+
b1111111111111111111111111111111111111111111111111111111111101000 -+
b11000 0+
b101 +'
b100000 k)
b11000 "+
b101 A'
b11000 P&
b100000 ;&
b11 {+
b11000 s&
b10100000000011011010000011 B'
b11000 h+
b100000 J*
b11 r+
b11000 z&
b11000 r&
b11 _&
b10100000000011011010000011 /'
b11000 !'
b11 g-
b10100000000011011010000011 &'
b10100000000011011010000011 j%
b10100000000011011010000011 q(
#2900000
0!
0_%
1C'
1>'
11,
1,,
#2905000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
b110 w"
b1010 n-
b1011 o+
b10000 j-
b11 f-
b11000 g+
b10000 _+
b100000 I*
b10100 =*
b11000 l(
b11000 ~&
1U*
b0 a*
b1100 M*
b10 3)
b10100000000011011010000011 p(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
1v%
1(&
b1100 L&
b0 l&
1J&
b11000 }&
b11000 m%
b10100 E&
b100000 H&
b10000 Z&
b11000 \&
b11 c&
b10000 d&
b1011 ^&
b1010 e&
b1000 b*
b1 ()
b1101 N*
b1100 p+
b11000 o&
b11000 >*
b10100 `+
b110000 >+
b110000 ?+
b100000 ~*
b11000 k-
b11 w+
b11 q-
b1011 o-
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b10 T)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b11100 n&
b11100 v&
b11 /,
b11100 k%
b11 f&
b100000 O&
b110000 N&
b110000 M&
b11000 l%
b1011 s*
b1 :&
b1010000000001101101 l)
b11100 x&
b100 0,
b11100 m(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b11 T)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b100000 .+
b1111111111111111111111111111111111111111111111111111111111100000 -+
b100000 0+
b110 +'
b1 F*
b101000 k)
b100000 "+
b110 A'
b100000 P&
b101000 ;&
b100 {+
b11100 s&
b11000000000011011100000011 B'
b100000 h+
b101000 J*
b100 r+
b11100 z&
b11100 r&
b100 _&
b11000000000011011100000011 /'
b11100 !'
b100 g-
b11000000000011011100000011 &'
b11000000000011011100000011 j%
b11000000000011011100000011 q(
#2910000
0!
0_%
1C'
1>'
11,
1,,
#2915000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
b111 w"
b1011 n-
b1100 o+
b11000 j-
b100 f-
b100000 g+
b10100 _+
b101000 I*
b1 E*
b11000 =*
b11100 l(
b11100 ~&
b1000 a*
b1101 M*
b11 4)
b11000000000011011100000011 p(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
1u%
0v%
1'&
0(&
b1101 L&
b1000 l&
b11100 }&
b11100 m%
b11000 E&
b1 G&
b101000 H&
b10100 Z&
b100000 \&
b100 c&
b11000 d&
b1100 ^&
b1011 e&
b10000 b*
b0 ()
b1110 N*
b1101 p+
b11100 o&
b11100 >*
b11000 `+
b111100 >+
b111100 ?+
b1 l+
b1 f*
b101000 ~*
b100000 k-
b100 w+
b100 q-
b1100 o-
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b11 U)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b100000 n&
b100000 v&
b100 /,
b100000 k%
b100 f&
b101000 O&
b1 j&
b111100 N&
b111100 M&
b11100 l%
b0 :&
b1100000000001101110 l)
b100000 x&
b101 0,
b100000 m(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b100 U)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b101000 .+
b1111111111111111111111111111111111111111111111111111111111011000 -+
b101000 0+
b111 +'
b0 F*
b110000 k)
b101000 "+
b111 A'
b101000 P&
b110000 ;&
b101 {+
b100000 s&
b11100000000011011110000011 B'
b101000 h+
b110000 J*
b101 r+
b100000 z&
b100000 r&
b101 _&
b11100000000011011110000011 /'
b100000 !'
b101 g-
b11100000000011011110000011 &'
b11100000000011011110000011 j%
b11100000000011011110000011 q(
#2920000
0!
0_%
1C'
1>'
11,
1,,
#2925000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
b1000 w"
b1100 n-
b1101 o+
b100000 j-
b101 f-
b1 k+
b101000 g+
b11000 _+
b110000 I*
b0 E*
b11100 =*
b100000 l(
b100000 ~&
b10000 a*
b1110 M*
b100 5)
b11100000000011011110000011 p(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
1v%
1(&
b1110 L&
b10000 l&
b100000 }&
b100000 m%
b11100 E&
b0 G&
b110000 H&
b11000 Z&
b101000 \&
b1 ]&
b101 c&
b100000 d&
b1101 ^&
b1100 e&
b11000 b*
b1111 N*
b1110 p+
b100000 o&
b100000 >*
b11100 `+
b1001000 >+
b1001000 ?+
b0 l+
b0 f*
b110000 ~*
b101000 k-
b101 w+
b101 q-
b1101 o-
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b100 V)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b100100 n&
b100100 v&
b101 /,
b100100 k%
b101 f&
b110000 O&
b0 j&
b1001000 N&
b1001000 M&
b100000 l%
b1110000000001101111 l)
b100100 x&
b110 0,
b100100 m(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b101 V)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b110000 .+
b1111111111111111111111111111111111111111111111111111111111010000 -+
b110000 0+
b1000 +'
b111000 k)
b110000 "+
b1000 A'
b110000 P&
b111000 ;&
b110 {+
b100100 s&
b100000000000011100000000011 B'
b110000 h+
b111000 J*
b110 r+
b100100 z&
b100100 r&
b110 _&
b100000000000011100000000011 /'
b100100 !'
b110 g-
b100000000000011100000000011 &'
b100000000000011100000000011 j%
b100000000000011100000000011 q(
#2930000
0!
0_%
1C'
1>'
11,
1,,
#2935000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
b1001 w"
b1101 n-
b1110 o+
b101000 j-
b110 f-
b0 k+
b110000 g+
b11100 _+
b111000 I*
b100000 =*
b100100 l(
b100100 ~&
b11000 a*
b1111 M*
b101 6)
b100000000000011100000000011 p(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
1s%
0t%
0u%
0v%
1$&
0%&
0&&
0'&
0(&
b1111 L&
b11000 l&
b100100 }&
b100100 m%
b100000 E&
b111000 H&
b11100 Z&
b110000 \&
b0 ]&
b110 c&
b101000 d&
b1110 ^&
b1101 e&
0V*
b0 b*
b10000 N*
b1111 p+
b100100 o&
b100100 >*
b100000 `+
b1010100 >+
b1010100 ?+
b111000 ~*
b110000 k-
b110 w+
b110 q-
b1110 o-
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b101 W)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b101000 n&
b101000 v&
b110 /,
b101000 k%
b110 f&
b111000 O&
b1010100 N&
b1010100 M&
b100100 l%
b10000000000001110000 l)
b101000 x&
b111 0,
b101000 m(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b110 W)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b111000 .+
b1111111111111111111111111111111111111111111111111111111111001000 -+
b111000 0+
b1001 +'
b1000000 k)
b111000 "+
b1001 A'
b111000 P&
b1000000 ;&
b111 {+
b101000 s&
b100100000000011100010000011 B'
b111000 h+
b1000000 J*
b111 r+
b101000 z&
b101000 r&
b111 _&
b100100000000011100010000011 /'
b101000 !'
b111 g-
b100100000000011100010000011 &'
b100100000000011100010000011 j%
b100100000000011100010000011 q(
#2940000
0!
0_%
1C'
1>'
11,
1,,
#2945000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
b1010 w"
b1110 n-
b1111 o+
b110000 j-
b111 f-
b111000 g+
b100000 _+
b1000000 I*
b100100 =*
b101000 l(
b101000 ~&
0U*
b0 a*
b10000 M*
b110 7)
b100100000000011100010000011 p(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
1v%
1(&
b10000 L&
b0 l&
0J&
b101000 }&
b101000 m%
b100100 E&
b1000000 H&
b100000 Z&
b111000 \&
b111 c&
b110000 d&
b1111 ^&
b1110 e&
b1000 b*
b1 ()
b10001 N*
b10000 p+
b101000 o&
b101000 >*
b100100 `+
b1100000 >+
b1100000 ?+
b1000000 ~*
b111000 k-
b111 w+
b111 q-
b1111 o-
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b110 X)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b101100 n&
b101100 v&
b111 /,
b101100 k%
b111 f&
b1000000 O&
b1100000 N&
b1100000 M&
b101000 l%
b11 s*
b1 :&
b10010000000001110001 l)
b101100 x&
b1000 0,
b101100 m(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b111 X)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b1000000 .+
b1111111111111111111111111111111111111111111111111111111111000000 -+
b1000000 0+
b1010 +'
b1 F*
b1001000 k)
b1000000 "+
b1010 A'
b1000000 P&
b1001000 ;&
b1000 {+
b101100 s&
b10100101000000100100110011 B'
b1000000 h+
b1001000 J*
b1000 r+
b101100 z&
b101100 r&
b1000 _&
b10100101000000100100110011 /'
b101100 !'
b1000 g-
b10100101000000100100110011 &'
b10100101000000100100110011 j%
b10100101000000100100110011 q(
#2950000
0!
0_%
1C'
1>'
11,
1,,
#2955000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
b1011 w"
b1111 n-
b10000 o+
b111000 j-
b1000 f-
b1000000 g+
b100100 _+
b1001000 I*
b1 E*
b101000 =*
b101100 l(
b101100 ~&
b1000 a*
b10001 M*
b111 8)
b10100101000000100100110011 p(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0s%
1t%
1y%
1{%
0"&
0#&
1'&
0(&
1*&
1+&
b10001 L&
b1000 l&
b101100 }&
b101100 m%
b101000 E&
b1 G&
b1001000 H&
b100100 Z&
b1000000 \&
b1000 c&
b111000 d&
b10000 ^&
b1111 e&
1V*
b1001 b*
b1 ')
b10 ()
b1000 ^*
b0 Z*
b10010 N*
0x(
0v(
0u(
b10 r(
b10001 p+
b101100 o&
b101100 >*
b101000 `+
b1101100 >+
b1101100 ?+
b1 l+
b1 f*
b1001000 ~*
b1000000 k-
b1000 w+
b1000 q-
b10000 o-
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b111 Y)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b110000 n&
b110000 v&
b1000 /,
b110000 k%
b1000 f&
b1001000 O&
b1 j&
b1101100 N&
b1101100 M&
b101100 l%
b10 8&
02&
03&
05&
b110011 m)
b10 :&
b1 9&
b1010010100000010010 l)
b110000 x&
b1001 0,
b110000 m(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b1000 Y)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b1001000 .+
b1111111111111111111111111111111111111111111111111111111110111000 -+
b1001000 0+
b1011 +'
b10 x)
02*
06*
0|)
bx k)
b10 F*
b1 B*
b1001000 "+
b1011 A'
b1001000 P&
bx ;&
b1001 {+
b110000 s&
b10101101010000100110110011 B'
b1001000 h+
bx J*
b1001 r+
b110000 z&
b110000 r&
b1001 _&
b10101101010000100110110011 /'
b110000 !'
b1001 g-
b10101101010000100110110011 &'
b10101101010000100110110011 j%
b10101101010000100110110011 q(
#2960000
0!
0_%
1C'
1>'
11,
1,,
#2965000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
b1100 w"
b10000 n-
b10001 o+
b1000000 j-
b1001 f-
b1 k+
b1001000 g+
b101000 _+
bx I*
b10 E*
b1 A*
b101100 =*
b110000 l(
b110000 ~&
1U*
05*
01*
0{)
b1001 a*
b1000 ]*
b10010 M*
b0 Y*
b10 w)
b1000 9)
b10101101010000100110110011 p(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
1x%
1}%
1(&
b10 <&
b0 K&
b10010 L&
b1000 k&
b1001 l&
0B&
0?&
0@&
1J&
b110000 }&
b110000 m%
b101100 E&
b1 F&
b10 G&
bx H&
b101000 Z&
b1001000 \&
b1 ]&
b1001 c&
b1000000 d&
b10001 ^&
b10000 e&
b1011 b*
b11 ')
b100 ()
b1010 ^*
b10011 N*
b0 g*
b10010 p+
b1 ~*
0L+
0P+
b110000 o&
b110000 >*
b101100 `+
bx >+
bx ?+
b1 d*
b10 l+
b10 f*
b1001000 k-
b1001 w+
b1001 q-
b10001 o-
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b1000 Z)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b110100 n&
b110100 v&
b1001 /,
b110100 k%
b1001 f&
b10 j&
b1 i&
bx N&
bx M&
b110000 l%
b1 O&
b1000 s*
b0 R&
b100 :&
b11 9&
b1010110101000010011 l)
b110100 x&
b1010 0,
b110100 m(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b1001 Z)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b10 ~*
b10 .+
b10 3+
b0 -+
b1 /+
b1 0+
b0 2+
b1 5+
b1100 +'
b1000 |*
1$+
b1 "+
b100 F*
b11 B*
07+
b1000 g*
0$+
b1000 R&
b1100 A'
b1 P&
b10 O&
b1010 {+
b110100 s&
b10110101100000101000110011 B'
b1 h+
b11 .+
b100 3+
b1111111111111111111111111111111111111111111111111111111111111111 -+
b0 /+
b11 0+
b1 2+
b10 5+
b1010 r+
b110100 z&
b10 "+
17+
1$+
b10 P&
b110100 r&
b1010 _&
b10110101100000101000110011 /'
b10 h+
b110100 !'
b1010 g-
b10110101100000101000110011 &'
b10110101100000101000110011 j%
b10110101100000101000110011 q(
#2970000
0!
0_%
1C'
1>'
11,
1,,
#2975000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
b1101 w"
b10001 n-
b10010 o+
b1001000 j-
b1010 f-
b10 k+
b10 g+
b101100 _+
b100 E*
b11 A*
b110000 =*
b110100 l(
b110100 ~&
0O+
0K+
b1011 a*
b1010 ]*
b10011 M*
b1001 :)
b10110101100000101000110011 p(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
1w%
0x%
1|%
0}%
1&&
0'&
0(&
b10011 L&
b1010 k&
b1011 l&
0U&
0V&
b110100 }&
b110100 m%
b110000 E&
b11 F&
b100 G&
b101100 Z&
b10 \&
b10 ]&
b1010 c&
b1001000 d&
b10010 ^&
b10001 e&
b1101 b*
b101 ')
b110 ()
b1100 ^*
b10100 N*
b10011 p+
b0 w+
1#,
0_-
b110100 o&
b110100 >*
b110000 `+
b11 d*
b100 l+
b100 f*
b10 k-
b1010 q-
b10010 o-
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b1001 [)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b111000 n&
b111000 v&
b111000 k%
1-,
b0 /,
b1010 f&
b100 j&
b11 i&
b110100 l%
b110 :&
b101 9&
b1011010110000010100 l)
b111000 x&
b111000 m(
bx 0,
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b1010 [)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b100 ~*
b101 .+
b1100 3+
b1 -+
b10 /+
b0 2+
b110 5+
b1101 +'
b110 F*
b101 B*
b110 "+
07+
0$+
b1101 A'
b110 P&
b100 O&
bx {+
b111000 s&
b10111101110000101010110011 B'
b110 h+
b111 .+
b110000 3+
b1111111111111111111111111111111111111111111111111111111111111111 -+
b0 /+
b111 0+
b1 2+
b1100 5+
bx r+
b111000 z&
b1100 "+
17+
1$+
b1100 P&
b111000 r&
bx _&
b10111101110000101010110011 /'
b1100 h+
b111000 !'
bx g-
b10111101110000101010110011 &'
b10111101110000101010110011 j%
b10111101110000101010110011 q(
#2980000
0!
0_%
1C'
1>'
11,
1,,
#2985000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
b1110 w"
b10010 n-
b10011 o+
b10 j-
bx f-
b100 k+
b1100 g+
b110000 _+
b110 E*
b101 A*
b110100 =*
b111000 l(
b111000 ~&
0^-
b1101 a*
b1100 ]*
b10100 M*
b1010 ;)
b10111101110000101010110011 p(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
1x%
1}%
1(&
b10100 L&
b1100 k&
b1101 l&
0a&
b111000 }&
b111000 m%
b110100 E&
b101 F&
b110 G&
b110000 Z&
b1100 \&
b100 ]&
bx c&
b10 d&
b10011 ^&
b10010 e&
b1111 b*
b111 ')
b1000 ()
b1110 ^*
b10101 N*
b10100 p+
b10 q-
b111000 o&
b111000 >*
b110100 `+
b101 d*
b110 l+
b110 f*
b1100 k-
b1 w+
b10011 o-
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b1010 \)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b111100 n&
b111100 v&
b1 /,
b111100 k%
b110 j&
b101 i&
b111000 l%
b10 f&
b1000 :&
b111 9&
b1011110111000010101 l)
b111100 x&
b111100 m(
b110 ~*
b1001 .+
b1010000 3+
b1 -+
b100 /+
b101 0+
b0 2+
b10100 5+
b1110 +'
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10 \)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b1000 F*
b111 B*
b10100 "+
07+
0$+
b1110 A'
b10100 P&
b110 O&
b111100 s&
b11000110000000101100110011 B'
b10100 h+
b1011 .+
b101000000 3+
b1111111111111111111111111111111111111111111111111111111111111111 -+
b111 0+
b1 2+
b11110 5+
b111100 z&
b11110 "+
17+
1$+
b11110 P&
b111100 r&
b11000110000000101100110011 /'
b11110 h+
b111100 !'
b11000110000000101100110011 &'
b11000110000000101100110011 j%
b11000110000000101100110011 q(
#2990000
0!
0_%
1C'
1>'
11,
1,,
#2995000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
b1111 w"
b10011 n-
b10100 o+
b1100 j-
b110 k+
b11110 g+
b110100 _+
b1000 E*
b111 A*
b111000 =*
b111100 l(
b111100 ~&
b1111 a*
b1110 ]*
b10101 M*
b10 <)
b11000110000000101100110011 p(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
1u%
0v%
0w%
0x%
1z%
0{%
0|%
0}%
1'&
0(&
b10101 L&
b1110 k&
b1111 l&
b111100 }&
b111100 m%
b111000 E&
b111 F&
b1000 G&
b110100 Z&
b11110 \&
b110 ]&
b1100 d&
b10100 ^&
b10011 e&
b10001 b*
b1001 ')
b1010 ()
b10000 ^*
b10110 N*
b10101 p+
b111100 o&
b111100 >*
b111000 `+
b111 d*
b1000 l+
b1000 f*
b11110 k-
b11 w+
b1100 q-
b10100 o-
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10 ])
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b1000000 n&
b1000000 v&
b11 /,
b1000000 k%
b1100 f&
b1000 j&
b111 i&
b111100 l%
b1010 :&
b1001 9&
b1100011000000010110 l)
b1000000 x&
b1000000 m(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b1100 ])
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b1000 ~*
b1101 .+
b111000000 3+
b1 -+
b110 /+
b0 2+
b101010 5+
b1111 +'
b1010 F*
b1001 B*
b101010 "+
07+
0$+
b1111 A'
b101010 P&
b1000 O&
b1000000 s&
b101110010011 B'
b101010 h+
b1111 .+
b11100000000 3+
b1111111111111111111111111111111111111111111111111111111111111111 -+
b0 /+
b1111 0+
b1 2+
b111000 5+
b1000000 z&
b111000 "+
17+
1$+
b111000 P&
b1000000 r&
b101110010011 /'
b111000 h+
b1000000 !'
b101110010011 &'
b101110010011 j%
b101110010011 q(
#3000000
0!
0_%
1C'
1>'
11,
1,,
#3005000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
b10000 w"
b10100 n-
b10101 o+
b11110 j-
b1000 k+
b111000 g+
b111000 _+
b1010 E*
b1001 A*
b111100 =*
b1000000 l(
b1000000 ~&
b10001 a*
b10000 ]*
b10110 M*
b1100 =)
b101110010011 p(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0t%
0u%
0y%
0z%
1(&
0*&
b10110 L&
b10000 k&
b10001 l&
b1000000 }&
b1000000 m%
b111100 E&
b1001 F&
b1010 G&
b111000 Z&
b111000 \&
b1000 ]&
b11110 d&
b10101 ^&
b10100 e&
0V*
b0 b*
b0 ')
b0 ()
b0 ^*
b10111 N*
1x(
b0 r(
b10110 p+
b1000000 o&
b1000000 >*
b111100 `+
b1001 d*
b1010 l+
b1010 f*
b111000 k-
b111 w+
b11110 q-
b10101 o-
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b1100 ^)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b1000100 n&
b1000100 v&
b111 /,
b1000100 k%
b11110 f&
b1010 j&
b1001 i&
b1000000 l%
b0 8&
15&
b10011 m)
b0 :&
b0 9&
b10111 l)
b1000100 x&
b1000100 m(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b11110 ^)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b1010 ~*
b10001 .+
b100100000000 3+
b1 -+
b1000 /+
b1001 0+
b0 2+
b1001000 5+
b10000 +'
b0 x)
1|)
b0 k)
b0 F*
b0 B*
b1001000 "+
07+
0$+
b10000 A'
b1001000 P&
b0 ;&
b1010 O&
b1000100 s&
b1001010111000101110110011 B'
b1001000 h+
b0 J*
b10011 .+
b10010000000000 3+
b1111111111111111111111111111111111111111111111111111111111111111 -+
b1011 0+
b1 2+
b1011010 5+
b1000100 z&
b1011010 "+
17+
1$+
b1011010 P&
b1000100 r&
b1001010111000101110110011 /'
b1011010 h+
b1000100 !'
b1001010111000101110110011 &'
b1001010111000101110110011 j%
b1001010111000101110110011 q(
#3010000
0!
0_%
1C'
1>'
11,
1,,
#3015000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
b10001 w"
b10101 n-
b10110 o+
b111000 j-
b1010 k+
b1011010 g+
b111100 _+
b0 I*
b0 E*
b0 A*
b1000000 =*
b1000100 l(
b1000100 ~&
0U*
1{)
b0 a*
b0 ]*
b10111 M*
b0 w)
b11110 >)
b1001010111000101110110011 p(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
1u%
1x%
1z%
1|%
1}%
1~%
1*&
b0 <&
b10111 L&
b0 k&
b0 l&
1B&
0J&
b1000100 }&
b1000100 m%
b1000000 E&
b0 F&
b0 G&
b0 H&
b111100 Z&
b1011010 \&
b1010 ]&
b111000 d&
b10110 ^&
b10101 e&
b10010 b*
b10 ()
b10111 ^*
0x(
b10 r(
b10 g*
b10111 p+
b0 ~*
b1000100 o&
b1000100 >*
b1000000 `+
b111100 >+
b111100 ?+
b0 d*
b0 l+
b0 f*
b1011010 k-
b1011 w+
b111000 q-
b10110 o-
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b11110 _)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b1001000 n&
b1001000 v&
b1011 /,
b1001000 k%
b111000 f&
b0 j&
b0 i&
b111100 N&
b111100 M&
b1000100 l%
b0 s*
b0 O&
b10 R&
b10 8&
05&
b110011 m)
b10 :&
b100101011100010111 l)
b1001000 x&
b1001000 m(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b111000 _)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b0 .+
b0 3+
b0 -+
b0 /+
b0 0+
b0 2+
b0 5+
b10001 +'
b10 |*
0$+
b0 "+
b10 x)
0|)
bx k)
b10 F*
07+
1#+
1Q&
b10001 A'
bx ;&
b0 P&
b1001000 s&
1d+
b1001110111000101110110011 B'
bx J*
b0 h+
b1001000 z&
b1001000 r&
b1001110111000101110110011 /'
b1001000 !'
b1001110111000101110110011 &'
b1001110111000101110110011 j%
b1001110111000101110110011 q(
#3020000
0!
0_%
1C'
1>'
11,
1,,
#3025000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
b10010 w"
b10110 n-
b10111 o+
b1011010 j-
b0 k+
b0 g+
b1000000 _+
bx I*
b10 E*
b1000100 =*
b1001000 l(
b1001000 ~&
1c+
0{)
b10010 a*
b10111 ]*
b10 w)
b111000 ?)
b1001110111000101110110011 p(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
1y%
b10 <&
b10111 k&
b10010 l&
0B&
1[&
b1001000 }&
b1001000 m%
b1000100 E&
b10 G&
bx H&
b1000000 Z&
b0 \&
b0 ]&
b1011010 d&
b10111 ^&
b10110 e&
b10011 b*
b1100 ()
b10 ;+
b1001000 o&
b1001000 >*
b1000100 `+
bx >+
bx ?+
b10 l+
b10 f*
b0 k-
b0 w+
b1011010 q-
b10111 o-
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b111000 `)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b10 9+
b1001100 n&
b1001100 v&
b0 /,
b1001100 k%
b10 g&
b1011010 f&
b10 j&
bx N&
bx M&
b1001000 l%
b1100 :&
b100111011100010111 l)
b1001100 x&
b1001100 m(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b1011010 `)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b10 ~*
b10010 +'
b1100 F*
b10010 A'
b10 O&
b1001100 s&
b1010010111000101110110011 B'
b10 .+
b1111111111111111111111111111111111111111111111111111111111111110 -+
b10 0+
b1 2+
b1001100 z&
b10 "+
17+
0#+
0Q&
b10 P&
b1001100 r&
b1010010111000101110110011 /'
0d+
b10 h+
b1001100 !'
b1010010111000101110110011 &'
b1010010111000101110110011 j%
b1010010111000101110110011 q(
#3030000
0!
0_%
1C'
1>'
11,
1,,
#3035000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
b10011 w"
b10111 n-
b0 j-
b10 k+
b10 g+
b1000100 _+
b1100 E*
b1001000 =*
b1001100 l(
b1001100 ~&
0c+
b10011 a*
b1011010 @)
b1010010111000101110110011 p(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
1w%
0x%
0y%
b10011 l&
0[&
b1001100 }&
b1001100 m%
b1001000 E&
b1100 G&
b1000100 Z&
b10 \&
b10 ]&
b0 d&
b10111 e&
b10100 b*
b11110 ()
b1001100 o&
b1001100 >*
b1001000 `+
b1100 l+
b1100 f*
b10 k-
b10 d*
b0 q-
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b1011010 a)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b1010000 n&
b1010000 v&
b1010000 k%
b0 f&
b10 i&
b1100 j&
b1001100 l%
b11110 :&
b101001011100010111 l)
b1010000 x&
b1010000 m(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b0 a)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b100 .+
b1000 3+
b0 -+
b10 /+
b0 2+
b100 5+
b1100 ~*
b10011 +'
b11110 F*
b100 "+
07+
b10011 A'
b100 P&
b1100 O&
b1010000 s&
b1010110111000101110110011 B'
b100 h+
b1110 .+
b10000000000000 3+
b1111111111111111111111111111111111111111111111111111111111110110 -+
b0 /+
b1110 0+
b1 2+
b11000 5+
b1010000 z&
b1110 "+
17+
b1110 P&
b1010000 r&
b1010110111000101110110011 /'
b1110 h+
b1010000 !'
b1010110111000101110110011 &'
b1010110111000101110110011 j%
b1010110111000101110110011 q(
#3040000
0!
0_%
1C'
1>'
11,
1,,
#3045000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
b10100 w"
b10 j-
b1100 k+
b1110 g+
b1001000 _+
b11110 E*
b1001100 =*
b1010000 l(
b1010000 ~&
b10100 a*
b1010110111000101110110011 p(
1y%
b10100 l&
b1010000 }&
b1010000 m%
b1001100 E&
b11110 G&
b1001000 Z&
b1110 \&
b1100 ]&
b10 d&
b10101 b*
b111000 ()
b1010000 o&
b1010000 >*
b1001100 `+
b11110 l+
b11110 f*
b1110 k-
b1 w+
b1110 d*
b10 q-
b1010100 n&
b1010100 v&
b1 /,
b1010100 k%
b10 f&
b1110 i&
b11110 j&
b1010000 l%
b111000 :&
b101011011100010111 l)
b1010100 x&
b1010100 m(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b10 a)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b11010 .+
b1110000000000000 3+
b10 -+
b1100 /+
b0 2+
b10101000 5+
b11110 ~*
b10100 +'
b111000 F*
b11010 "+
07+
b10100 A'
b11010 P&
b11110 O&
b1010100 s&
b1011010111000101110110011 B'
b11010 h+
b101100 .+
b1110000000000000000000000000000000 3+
b1111111111111111111111111111111111111111111111111111111111110000 -+
b1110 /+
b11110 0+
b1 2+
b110100100 5+
b1010100 z&
b101100 "+
17+
b101100 P&
b1010100 r&
b1011010111000101110110011 /'
b101100 h+
b1010100 !'
b1011010111000101110110011 &'
b1011010111000101110110011 j%
b1011010111000101110110011 q(
#3050000
0!
0_%
1C'
1>'
11,
1,,
#3055000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
b10101 w"
b1110 j-
b11110 k+
b101100 g+
b1001100 _+
b111000 E*
b1010000 =*
b1010100 l(
b1010100 ~&
b10101 a*
b10 A)
b1011010111000101110110011 p(
b10 ')
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
1x%
0y%
b10 9&
b10101 l&
b1010100 }&
b1010100 m%
b1010000 E&
b111000 G&
b1001100 Z&
b101100 \&
b11110 ]&
b1110 d&
b10110 b*
b1011010 ()
b10 B*
b1010100 o&
b1010100 >*
b1010000 `+
b111000 l+
b111000 f*
b101100 k-
b101 w+
b101100 d*
b1110 q-
b1011000 n&
b1011000 v&
b101 /,
b1011000 k%
b1110 f&
b101100 i&
b111000 j&
b1010100 l%
b1011010 :&
b101101011100010111 l)
b1011000 x&
b1011000 m(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b1110 a)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b1001010 .+
b101100000000000000000000000000000000 3+
b1110 -+
b1100 /+
b111110 0+
b0 2+
b10100101000 5+
b111000 ~*
b10101 +'
b1011010 F*
b1001010 "+
07+
b10101 A'
b1001010 P&
b111000 O&
b1011000 s&
b10011 B'
b1001010 h+
b1100100 .+
b10110000000000000000000000000000000000000000000000000000000000 3+
b1111111111111111111111111111111111111111111111111111111111110100 -+
b101000 /+
b111100 0+
b1 2+
b100110100000 5+
b1011000 z&
b1100100 "+
17+
b1100100 P&
b1011000 r&
b10011 /'
b1100100 h+
b1011000 !'
b10011 &'
b10011 j%
b10011 q(
#3060000
0!
0_%
1C'
1>'
11,
1,,
#3065000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
b10110 w"
b101100 j-
b111000 k+
b1100100 g+
b1010000 _+
b1011010 E*
b10 A*
b1010100 =*
b1011000 l(
b1011000 ~&
b10110 a*
b1110 A)
b10011 p(
b1110 ')
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0u%
0w%
0x%
0z%
0|%
0}%
0~%
0$&
0&&
0'&
0(&
0*&
b1110 9&
b10110 l&
b1011000 }&
b1011000 m%
b1010100 E&
b10 F&
b1011010 G&
b1010000 Z&
b1100100 \&
b111000 ]&
b101100 d&
b0 b*
b0 ')
b0 ()
b0 ^*
b0 N*
1x(
b0 r(
b1110 B*
b1011000 o&
b1011000 >*
b1010100 `+
b1100100 d*
b1011010 l+
b1011010 f*
b1100100 k-
b1100 w+
b101100 q-
b1011100 n&
b1011100 v&
b1100 /,
b1011100 k%
b101100 f&
b1011010 j&
b1100100 i&
b1011000 l%
b0 8&
15&
b10011 m)
b0 :&
b0 9&
b0 l)
b1011100 x&
b1011100 m(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b101100 a)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b1011010 ~*
b10011100 .+
b110010000000000000000000000000000000000000000000000000000000000 3+
b101100 -+
b100000 /+
b1111100 0+
b0 2+
b1010111100000 5+
b10110 +'
b0 x)
1|)
b0 k)
b0 F*
b0 B*
b10011100 "+
07+
b10110 A'
b10011100 P&
b0 ;&
b1011010 O&
b1011100 s&
b10011100 h+
b0 J*
b10111110 .+
b0 3+
b1010 -+
b1000000 /+
b1111110 0+
b10001100101000 5+
b1011100 z&
b10111110 "+
b10111110 P&
b1011100 r&
b10111110 h+
b1011100 !'
#3070000
0!
0_%
1C'
1>'
11,
1,,
#3075000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
b10111 w"
b1100100 j-
b1011010 k+
b10111110 g+
b1010100 _+
b0 I*
b0 E*
b0 A*
b1011000 =*
b1011100 l(
b1011100 ~&
1{)
b0 a*
b0 ]*
b0 M*
b0 w)
b101100 A)
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b0 <&
b0 L&
b0 k&
b0 l&
1B&
b1011100 }&
b1011100 m%
b1011000 E&
b0 F&
b0 G&
b0 H&
b1010100 Z&
b10111110 \&
b1011010 ]&
b1100100 d&
b0 p+
b0 ;+
b0 ~*
b1011100 o&
b1011100 >*
b1011000 `+
b1010100 >+
b1010100 ?+
b10111110 d*
b0 l+
b0 f*
b10111110 k-
b10111 w+
b1100100 q-
b0 9+
b1100000 n&
b1100000 v&
b10111 /,
b1100000 k%
b0 g&
b1100100 f&
b0 j&
b10111110 i&
b1010100 N&
b1010100 M&
b1011100 l%
b0 O&
b1100000 x&
b1100000 m(
b0 d*
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b1100100 a)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b10111110 3+
b10111110 4+
b10111110 -+
b0 /+
b10111110 0+
b0 5+
b10111 +'
b10111 A'
b0 i&
b1100000 s&
b0 .+
b0 3+
b0 4+
b0 -+
b0 0+
b1100000 z&
b0 "+
1#+
1Q&
b0 P&
b1100000 r&
1d+
b0 h+
b1100000 !'
#3080000
0!
0_%
1C'
1>'
11,
1,,
#3085000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
b11000 w"
b0 o+
b10111110 j-
b0 k+
b0 g+
b1011000 _+
b1011100 =*
b1100000 l(
b1100000 ~&
1c+
b1100100 A)
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
1[&
b1100000 }&
b1100000 m%
b1011100 E&
b1011000 Z&
b0 \&
b0 ]&
b10111110 d&
b0 ^&
b1100000 o&
b1100000 >*
b1011100 `+
b1011000 >+
b1011000 ?+
b0 k-
b0 w+
b10111110 q-
b0 o-
b1100100 n&
b1100100 v&
b0 /,
b1100100 k%
b10111110 f&
b1011000 N&
b1011000 M&
b1100000 l%
b1100100 x&
b1100100 m(
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b10111110 a)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b11000 +'
b11000 A'
b1100100 s&
b1100100 z&
b1100100 r&
b1100100 !'
#3090000
0!
0_%
1C'
1>'
11,
1,,
#3095000
1!
1_%
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
0C'
0>'
01,
0,,
b11001 w"
b0 n-
b0 j-
b1011100 _+
b1100000 =*
b1100100 l(
b1100100 ~&
b10111110 A)
b0 j)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b1100100 }&
b1100100 m%
b1100000 E&
b1011100 Z&
b0 d&
b0 e&
b1100100 o&
b1100100 >*
b1100000 `+
b1011100 >+
b1011100 ?+
b0 q-
b0 j)
b10111110 J)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b1101000 n&
b1101000 v&
b1101000 k%
b0 f&
b1011100 N&
b1011100 M&
b1100100 l%
b1101000 x&
b1101000 m(
b0 j)
b0 J)
b1 j)
b10 j)
b11 j)
b100 j)
b101 j)
b110 j)
b111 j)
b1000 j)
b1001 j)
b1010 j)
b1011 j)
b1100 j)
b1101 j)
b1110 j)
b1111 j)
b10000 j)
b10001 j)
b10010 j)
b10011 j)
b10100 j)
b10101 j)
b10110 j)
b10111 j)
b11000 j)
b11001 j)
b11010 j)
b11011 j)
b11100 j)
b11101 j)
b11110 j)
b11111 j)
b100000 j)
b11001 +'
b11001 A'
b1101000 s&
b110000000000000000000001111110 B'
b1101000 z&
b1101000 r&
b110000000000000000000001111110 /'
b1101000 !'
b110000000000000000000001111110 &'
b110000000000000000000001111110 j%
b11001 m/
