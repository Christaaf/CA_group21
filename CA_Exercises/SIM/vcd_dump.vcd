$date
    Feb 19, 2024  10:08:38
$end
$version
    TOOL:	xmsim(64)	23.03-s002
$end
$timescale
    10 ps
$end

$scope module cpu_tb $end
$var reg       1 !    clk $end
$var reg       1 "    arst_n $end
$var reg      64 #    addr_ext [63:0] $end
$var reg       1 $    wen_ext $end
$var reg       1 %    ren_ext $end
$var reg      32 &    wdata_ext [31:0] $end
$var reg      64 '    addr_ext_2 [63:0] $end
$var reg       1 (    wen_ext_2 $end
$var reg       1 )    ren_ext_2 $end
$var reg      64 *    wdata_ext_2 [63:0] $end
$var wire     32 +    rdata_ext [31:0] $end
$var wire     64 ,    rdata_ext_2 [63:0] $end
$var reg       1 -    enable $end
$var integer  32 .    half_clock_period_ns $end
$var integer  32 /    imem_cnt $end
$var integer  32 0    dmem_cnt $end
$var parameter 32 1    IMEM_UNIT $end
$var parameter 32 2    DMEM_UNIT $end
$var reg      32 3    instr_mem[0] [31:0] $end
$var reg      32 4    instr_mem[1] [31:0] $end
$var reg      32 5    instr_mem[2] [31:0] $end
$var reg      32 6    instr_mem[3] [31:0] $end
$var reg      32 7    instr_mem[4] [31:0] $end
$var reg      32 8    instr_mem[5] [31:0] $end
$var reg      32 9    instr_mem[6] [31:0] $end
$var reg      32 :    instr_mem[7] [31:0] $end
$var reg      32 ;    instr_mem[8] [31:0] $end
$var reg      32 <    instr_mem[9] [31:0] $end
$var reg      32 =    instr_mem[10] [31:0] $end
$var reg      32 >    instr_mem[11] [31:0] $end
$var reg      32 ?    instr_mem[12] [31:0] $end
$var reg      32 @    instr_mem[13] [31:0] $end
$var reg      32 A    instr_mem[14] [31:0] $end
$var reg      32 B    instr_mem[15] [31:0] $end
$var reg      32 C    instr_mem[16] [31:0] $end
$var reg      32 D    instr_mem[17] [31:0] $end
$var reg      32 E    instr_mem[18] [31:0] $end
$var reg      32 F    instr_mem[19] [31:0] $end
$var reg      32 G    instr_mem[20] [31:0] $end
$var reg      32 H    instr_mem[21] [31:0] $end
$var reg      32 I    instr_mem[22] [31:0] $end
$var reg      32 J    instr_mem[23] [31:0] $end
$var reg      32 K    instr_mem[24] [31:0] $end
$var reg      32 L    instr_mem[25] [31:0] $end
$var reg      32 M    instr_mem[26] [31:0] $end
$var reg      32 N    instr_mem[27] [31:0] $end
$var reg      32 O    instr_mem[28] [31:0] $end
$var reg      32 P    instr_mem[29] [31:0] $end
$var reg      32 Q    instr_mem[30] [31:0] $end
$var reg      32 R    instr_mem[31] [31:0] $end
$var reg      32 S    instr_mem[32] [31:0] $end
$var reg      32 T    instr_mem[33] [31:0] $end
$var reg      32 U    instr_mem[34] [31:0] $end
$var reg      32 V    instr_mem[35] [31:0] $end
$var reg      32 W    instr_mem[36] [31:0] $end
$var reg      32 X    instr_mem[37] [31:0] $end
$var reg      32 Y    instr_mem[38] [31:0] $end
$var reg      32 Z    instr_mem[39] [31:0] $end
$var reg      32 [    instr_mem[40] [31:0] $end
$var reg      32 \    instr_mem[41] [31:0] $end
$var reg      32 ]    instr_mem[42] [31:0] $end
$var reg      32 ^    instr_mem[43] [31:0] $end
$var reg      32 _    instr_mem[44] [31:0] $end
$var reg      32 `    instr_mem[45] [31:0] $end
$var reg      32 a    instr_mem[46] [31:0] $end
$var reg      32 b    instr_mem[47] [31:0] $end
$var reg      32 c    instr_mem[48] [31:0] $end
$var reg      32 d    instr_mem[49] [31:0] $end
$var reg      32 e    instr_mem[50] [31:0] $end
$var reg      32 f    instr_mem[51] [31:0] $end
$var reg      32 g    instr_mem[52] [31:0] $end
$var reg      32 h    instr_mem[53] [31:0] $end
$var reg      32 i    instr_mem[54] [31:0] $end
$var reg      32 j    instr_mem[55] [31:0] $end
$var reg      32 k    instr_mem[56] [31:0] $end
$var reg      32 l    instr_mem[57] [31:0] $end
$var reg      32 m    instr_mem[58] [31:0] $end
$var reg      32 n    instr_mem[59] [31:0] $end
$var reg      32 o    instr_mem[60] [31:0] $end
$var reg      32 p    instr_mem[61] [31:0] $end
$var reg      32 q    instr_mem[62] [31:0] $end
$var reg      32 r    instr_mem[63] [31:0] $end
$var reg      32 s    instr_mem[64] [31:0] $end
$var reg      32 t    instr_mem[65] [31:0] $end
$var reg      32 u    instr_mem[66] [31:0] $end
$var reg      32 v    instr_mem[67] [31:0] $end
$var reg      32 w    instr_mem[68] [31:0] $end
$var reg      32 x    instr_mem[69] [31:0] $end
$var reg      32 y    instr_mem[70] [31:0] $end
$var reg      32 z    instr_mem[71] [31:0] $end
$var reg      32 {    instr_mem[72] [31:0] $end
$var reg      32 |    instr_mem[73] [31:0] $end
$var reg      32 }    instr_mem[74] [31:0] $end
$var reg      32 ~    instr_mem[75] [31:0] $end
$var reg      32 !!   instr_mem[76] [31:0] $end
$var reg      32 "!   instr_mem[77] [31:0] $end
$var reg      32 #!   instr_mem[78] [31:0] $end
$var reg      32 $!   instr_mem[79] [31:0] $end
$var reg      32 %!   instr_mem[80] [31:0] $end
$var reg      32 &!   instr_mem[81] [31:0] $end
$var reg      32 '!   instr_mem[82] [31:0] $end
$var reg      32 (!   instr_mem[83] [31:0] $end
$var reg      32 )!   instr_mem[84] [31:0] $end
$var reg      32 *!   instr_mem[85] [31:0] $end
$var reg      32 +!   instr_mem[86] [31:0] $end
$var reg      32 ,!   instr_mem[87] [31:0] $end
$var reg      32 -!   instr_mem[88] [31:0] $end
$var reg      32 .!   instr_mem[89] [31:0] $end
$var reg      32 /!   instr_mem[90] [31:0] $end
$var reg      32 0!   instr_mem[91] [31:0] $end
$var reg      32 1!   instr_mem[92] [31:0] $end
$var reg      32 2!   instr_mem[93] [31:0] $end
$var reg      32 3!   instr_mem[94] [31:0] $end
$var reg      32 4!   instr_mem[95] [31:0] $end
$var reg      32 5!   instr_mem[96] [31:0] $end
$var reg      32 6!   instr_mem[97] [31:0] $end
$var reg      32 7!   instr_mem[98] [31:0] $end
$var reg      32 8!   instr_mem[99] [31:0] $end
$var reg      32 9!   instr_mem[100] [31:0] $end
$var reg      32 :!   instr_mem[101] [31:0] $end
$var reg      32 ;!   instr_mem[102] [31:0] $end
$var reg      32 <!   instr_mem[103] [31:0] $end
$var reg      32 =!   instr_mem[104] [31:0] $end
$var reg      32 >!   instr_mem[105] [31:0] $end
$var reg      32 ?!   instr_mem[106] [31:0] $end
$var reg      32 @!   instr_mem[107] [31:0] $end
$var reg      32 A!   instr_mem[108] [31:0] $end
$var reg      32 B!   instr_mem[109] [31:0] $end
$var reg      32 C!   instr_mem[110] [31:0] $end
$var reg      32 D!   instr_mem[111] [31:0] $end
$var reg      32 E!   instr_mem[112] [31:0] $end
$var reg      32 F!   instr_mem[113] [31:0] $end
$var reg      32 G!   instr_mem[114] [31:0] $end
$var reg      32 H!   instr_mem[115] [31:0] $end
$var reg      32 I!   instr_mem[116] [31:0] $end
$var reg      32 J!   instr_mem[117] [31:0] $end
$var reg      32 K!   instr_mem[118] [31:0] $end
$var reg      32 L!   instr_mem[119] [31:0] $end
$var reg      32 M!   instr_mem[120] [31:0] $end
$var reg      32 N!   instr_mem[121] [31:0] $end
$var reg      32 O!   instr_mem[122] [31:0] $end
$var reg      32 P!   instr_mem[123] [31:0] $end
$var reg      32 Q!   instr_mem[124] [31:0] $end
$var reg      32 R!   instr_mem[125] [31:0] $end
$var reg      32 S!   instr_mem[126] [31:0] $end
$var reg      32 T!   instr_mem[127] [31:0] $end
$var reg      64 U!   data_mem[0] [63:0] $end
$var reg      64 V!   data_mem[1] [63:0] $end
$var reg      64 W!   data_mem[2] [63:0] $end
$var reg      64 X!   data_mem[3] [63:0] $end
$var reg      64 Y!   data_mem[4] [63:0] $end
$var reg      64 Z!   data_mem[5] [63:0] $end
$var reg      64 [!   data_mem[6] [63:0] $end
$var reg      64 \!   data_mem[7] [63:0] $end
$var reg      64 ]!   data_mem[8] [63:0] $end
$var reg      64 ^!   data_mem[9] [63:0] $end
$var reg      64 _!   data_mem[10] [63:0] $end
$var reg      64 `!   data_mem[11] [63:0] $end
$var reg      64 a!   data_mem[12] [63:0] $end
$var reg      64 b!   data_mem[13] [63:0] $end
$var reg      64 c!   data_mem[14] [63:0] $end
$var reg      64 d!   data_mem[15] [63:0] $end
$var reg      64 e!   data_mem[16] [63:0] $end
$var reg      64 f!   data_mem[17] [63:0] $end
$var reg      64 g!   data_mem[18] [63:0] $end
$var reg      64 h!   data_mem[19] [63:0] $end
$var reg      64 i!   data_mem[20] [63:0] $end
$var reg      64 j!   data_mem[21] [63:0] $end
$var reg      64 k!   data_mem[22] [63:0] $end
$var reg      64 l!   data_mem[23] [63:0] $end
$var reg      64 m!   data_mem[24] [63:0] $end
$var reg      64 n!   data_mem[25] [63:0] $end
$var reg      64 o!   data_mem[26] [63:0] $end
$var reg      64 p!   data_mem[27] [63:0] $end
$var reg      64 q!   data_mem[28] [63:0] $end
$var reg      64 r!   data_mem[29] [63:0] $end
$var reg      64 s!   data_mem[30] [63:0] $end
$var reg      64 t!   data_mem[31] [63:0] $end
$var reg      64 u!   data_mem[32] [63:0] $end
$var reg      64 v!   data_mem[33] [63:0] $end
$var reg      64 w!   data_mem[34] [63:0] $end
$var reg      64 x!   data_mem[35] [63:0] $end
$var reg      64 y!   data_mem[36] [63:0] $end
$var reg      64 z!   data_mem[37] [63:0] $end
$var reg      64 {!   data_mem[38] [63:0] $end
$var reg      64 |!   data_mem[39] [63:0] $end
$var reg      64 }!   data_mem[40] [63:0] $end
$var reg      64 ~!   data_mem[41] [63:0] $end
$var reg      64 !"   data_mem[42] [63:0] $end
$var reg      64 ""   data_mem[43] [63:0] $end
$var reg      64 #"   data_mem[44] [63:0] $end
$var reg      64 $"   data_mem[45] [63:0] $end
$var reg      64 %"   data_mem[46] [63:0] $end
$var reg      64 &"   data_mem[47] [63:0] $end
$var reg      64 '"   data_mem[48] [63:0] $end
$var reg      64 ("   data_mem[49] [63:0] $end
$var reg      64 )"   data_mem[50] [63:0] $end
$var reg      64 *"   data_mem[51] [63:0] $end
$var reg      64 +"   data_mem[52] [63:0] $end
$var reg      64 ,"   data_mem[53] [63:0] $end
$var reg      64 -"   data_mem[54] [63:0] $end
$var reg      64 ."   data_mem[55] [63:0] $end
$var reg      64 /"   data_mem[56] [63:0] $end
$var reg      64 0"   data_mem[57] [63:0] $end
$var reg      64 1"   data_mem[58] [63:0] $end
$var reg      64 2"   data_mem[59] [63:0] $end
$var reg      64 3"   data_mem[60] [63:0] $end
$var reg      64 4"   data_mem[61] [63:0] $end
$var reg      64 5"   data_mem[62] [63:0] $end
$var reg      64 6"   data_mem[63] [63:0] $end
$var reg      64 7"   data_mem[64] [63:0] $end
$var reg      64 8"   data_mem[65] [63:0] $end
$var reg      64 9"   data_mem[66] [63:0] $end
$var reg      64 :"   data_mem[67] [63:0] $end
$var reg      64 ;"   data_mem[68] [63:0] $end
$var reg      64 <"   data_mem[69] [63:0] $end
$var reg      64 ="   data_mem[70] [63:0] $end
$var reg      64 >"   data_mem[71] [63:0] $end
$var reg      64 ?"   data_mem[72] [63:0] $end
$var reg      64 @"   data_mem[73] [63:0] $end
$var reg      64 A"   data_mem[74] [63:0] $end
$var reg      64 B"   data_mem[75] [63:0] $end
$var reg      64 C"   data_mem[76] [63:0] $end
$var reg      64 D"   data_mem[77] [63:0] $end
$var reg      64 E"   data_mem[78] [63:0] $end
$var reg      64 F"   data_mem[79] [63:0] $end
$var reg      64 G"   data_mem[80] [63:0] $end
$var reg      64 H"   data_mem[81] [63:0] $end
$var reg      64 I"   data_mem[82] [63:0] $end
$var reg      64 J"   data_mem[83] [63:0] $end
$var reg      64 K"   data_mem[84] [63:0] $end
$var reg      64 L"   data_mem[85] [63:0] $end
$var reg      64 M"   data_mem[86] [63:0] $end
$var reg      64 N"   data_mem[87] [63:0] $end
$var reg      64 O"   data_mem[88] [63:0] $end
$var reg      64 P"   data_mem[89] [63:0] $end
$var reg      64 Q"   data_mem[90] [63:0] $end
$var reg      64 R"   data_mem[91] [63:0] $end
$var reg      64 S"   data_mem[92] [63:0] $end
$var reg      64 T"   data_mem[93] [63:0] $end
$var reg      64 U"   data_mem[94] [63:0] $end
$var reg      64 V"   data_mem[95] [63:0] $end
$var reg      64 W"   data_mem[96] [63:0] $end
$var reg      64 X"   data_mem[97] [63:0] $end
$var reg      64 Y"   data_mem[98] [63:0] $end
$var reg      64 Z"   data_mem[99] [63:0] $end
$var reg      64 ["   data_mem[100] [63:0] $end
$var reg      64 \"   data_mem[101] [63:0] $end
$var reg      64 ]"   data_mem[102] [63:0] $end
$var reg      64 ^"   data_mem[103] [63:0] $end
$var reg      64 _"   data_mem[104] [63:0] $end
$var reg      64 `"   data_mem[105] [63:0] $end
$var reg      64 a"   data_mem[106] [63:0] $end
$var reg      64 b"   data_mem[107] [63:0] $end
$var reg      64 c"   data_mem[108] [63:0] $end
$var reg      64 d"   data_mem[109] [63:0] $end
$var reg      64 e"   data_mem[110] [63:0] $end
$var reg      64 f"   data_mem[111] [63:0] $end
$var reg      64 g"   data_mem[112] [63:0] $end
$var reg      64 h"   data_mem[113] [63:0] $end
$var reg      64 i"   data_mem[114] [63:0] $end
$var reg      64 j"   data_mem[115] [63:0] $end
$var reg      64 k"   data_mem[116] [63:0] $end
$var reg      64 l"   data_mem[117] [63:0] $end
$var reg      64 m"   data_mem[118] [63:0] $end
$var reg      64 n"   data_mem[119] [63:0] $end
$var reg      64 o"   data_mem[120] [63:0] $end
$var reg      64 p"   data_mem[121] [63:0] $end
$var reg      64 q"   data_mem[122] [63:0] $end
$var reg      64 r"   data_mem[123] [63:0] $end
$var reg      64 s"   data_mem[124] [63:0] $end
$var reg      64 t"   data_mem[125] [63:0] $end
$var reg      64 u"   data_mem[126] [63:0] $end
$var reg      64 v"   data_mem[127] [63:0] $end
$var integer  32 w"   counter $end
$var parameter 32 x"   CASE_N_MAX $end
$var reg      64 y"   ref_reg[0] [63:0] $end
$var reg      64 z"   ref_reg[1] [63:0] $end
$var reg      64 {"   ref_reg[2] [63:0] $end
$var reg      64 |"   ref_reg[3] [63:0] $end
$var reg      64 }"   ref_reg[4] [63:0] $end
$var reg      64 ~"   ref_reg[5] [63:0] $end
$var reg      64 !#   ref_reg[6] [63:0] $end
$var reg      64 "#   ref_reg[7] [63:0] $end
$var reg      64 ##   ref_reg[8] [63:0] $end
$var reg      64 $#   ref_reg[9] [63:0] $end
$var reg      64 %#   ref_reg[10] [63:0] $end
$var reg      64 &#   ref_reg[11] [63:0] $end
$var reg      64 '#   ref_reg[12] [63:0] $end
$var reg      64 (#   ref_reg[13] [63:0] $end
$var reg      64 )#   ref_reg[14] [63:0] $end
$var reg      64 *#   ref_reg[15] [63:0] $end
$var reg      64 +#   ref_reg[16] [63:0] $end
$var reg      64 ,#   ref_reg[17] [63:0] $end
$var reg      64 -#   ref_reg[18] [63:0] $end
$var reg      64 .#   ref_reg[19] [63:0] $end
$var reg      64 /#   ref_reg[20] [63:0] $end
$var reg      64 0#   ref_reg[21] [63:0] $end
$var reg      64 1#   ref_reg[22] [63:0] $end
$var reg      64 2#   ref_reg[23] [63:0] $end
$var reg      64 3#   ref_reg[24] [63:0] $end
$var reg      64 4#   ref_reg[25] [63:0] $end
$var reg      64 5#   ref_reg[26] [63:0] $end
$var reg      64 6#   ref_reg[27] [63:0] $end
$var reg      64 7#   ref_reg[28] [63:0] $end
$var reg      64 8#   ref_reg[29] [63:0] $end
$var reg      64 9#   ref_reg[30] [63:0] $end
$var reg      64 :#   ref_reg[31] [63:0] $end
$var reg      64 ;#   ref_reg[32] [63:0] $end
$var reg      64 <#   ref_reg[33] [63:0] $end
$var reg      64 =#   ref_reg[34] [63:0] $end
$var reg      64 >#   ref_reg[35] [63:0] $end
$var reg      64 ?#   ref_reg[36] [63:0] $end
$var reg      64 @#   ref_reg[37] [63:0] $end
$var reg      64 A#   ref_reg[38] [63:0] $end
$var reg      64 B#   ref_reg[39] [63:0] $end
$var reg      64 C#   ref_reg[40] [63:0] $end
$var reg      64 D#   ref_reg[41] [63:0] $end
$var reg      64 E#   ref_reg[42] [63:0] $end
$var reg      64 F#   ref_reg[43] [63:0] $end
$var reg      64 G#   ref_reg[44] [63:0] $end
$var reg      64 H#   ref_reg[45] [63:0] $end
$var reg      64 I#   ref_reg[46] [63:0] $end
$var reg      64 J#   ref_reg[47] [63:0] $end
$var reg      64 K#   ref_reg[48] [63:0] $end
$var reg      64 L#   ref_reg[49] [63:0] $end
$var reg      64 M#   ref_reg[50] [63:0] $end
$var reg      64 N#   ref_reg[51] [63:0] $end
$var reg      64 O#   ref_reg[52] [63:0] $end
$var reg      64 P#   ref_reg[53] [63:0] $end
$var reg      64 Q#   ref_reg[54] [63:0] $end
$var reg      64 R#   ref_reg[55] [63:0] $end
$var reg      64 S#   ref_reg[56] [63:0] $end
$var reg      64 T#   ref_reg[57] [63:0] $end
$var reg      64 U#   ref_reg[58] [63:0] $end
$var reg      64 V#   ref_reg[59] [63:0] $end
$var reg      64 W#   ref_reg[60] [63:0] $end
$var reg      64 X#   ref_reg[61] [63:0] $end
$var reg      64 Y#   ref_reg[62] [63:0] $end
$var reg      64 Z#   ref_reg[63] [63:0] $end
$var reg      64 [#   ref_reg[64] [63:0] $end
$var reg      64 \#   ref_reg[65] [63:0] $end
$var reg      64 ]#   ref_reg[66] [63:0] $end
$var reg      64 ^#   ref_reg[67] [63:0] $end
$var reg      64 _#   ref_reg[68] [63:0] $end
$var reg      64 `#   ref_reg[69] [63:0] $end
$var reg      64 a#   ref_reg[70] [63:0] $end
$var reg      64 b#   ref_reg[71] [63:0] $end
$var reg      64 c#   ref_reg[72] [63:0] $end
$var reg      64 d#   ref_reg[73] [63:0] $end
$var reg      64 e#   ref_reg[74] [63:0] $end
$var reg      64 f#   ref_reg[75] [63:0] $end
$var reg      64 g#   ref_reg[76] [63:0] $end
$var reg      64 h#   ref_reg[77] [63:0] $end
$var reg      64 i#   ref_reg[78] [63:0] $end
$var reg      64 j#   ref_reg[79] [63:0] $end
$var reg      64 k#   ref_reg[80] [63:0] $end
$var reg      64 l#   ref_reg[81] [63:0] $end
$var reg      64 m#   ref_reg[82] [63:0] $end
$var reg      64 n#   ref_reg[83] [63:0] $end
$var reg      64 o#   ref_reg[84] [63:0] $end
$var reg      64 p#   ref_reg[85] [63:0] $end
$var reg      64 q#   ref_reg[86] [63:0] $end
$var reg      64 r#   ref_reg[87] [63:0] $end
$var reg      64 s#   ref_reg[88] [63:0] $end
$var reg      64 t#   ref_reg[89] [63:0] $end
$var reg      64 u#   ref_reg[90] [63:0] $end
$var reg      64 v#   ref_reg[91] [63:0] $end
$var reg      64 w#   ref_reg[92] [63:0] $end
$var reg      64 x#   ref_reg[93] [63:0] $end
$var reg      64 y#   ref_reg[94] [63:0] $end
$var reg      64 z#   ref_reg[95] [63:0] $end
$var reg      64 {#   ref_reg[96] [63:0] $end
$var reg      64 |#   ref_reg[97] [63:0] $end
$var reg      64 }#   ref_reg[98] [63:0] $end
$var reg      64 ~#   ref_reg[99] [63:0] $end
$var reg      64 !$   ref_reg[100] [63:0] $end
$var reg      64 "$   ref_reg[101] [63:0] $end
$var reg      64 #$   ref_reg[102] [63:0] $end
$var reg      64 $$   ref_reg[103] [63:0] $end
$var reg      64 %$   ref_reg[104] [63:0] $end
$var reg      64 &$   ref_reg[105] [63:0] $end
$var reg      64 '$   ref_reg[106] [63:0] $end
$var reg      64 ($   ref_reg[107] [63:0] $end
$var reg      64 )$   ref_reg[108] [63:0] $end
$var reg      64 *$   ref_reg[109] [63:0] $end
$var reg      64 +$   ref_reg[110] [63:0] $end
$var reg      64 ,$   ref_reg[111] [63:0] $end
$var reg      64 -$   ref_reg[112] [63:0] $end
$var reg      64 .$   ref_reg[113] [63:0] $end
$var reg      64 /$   ref_reg[114] [63:0] $end
$var reg      64 0$   ref_reg[115] [63:0] $end
$var reg      64 1$   ref_reg[116] [63:0] $end
$var reg      64 2$   ref_reg[117] [63:0] $end
$var reg      64 3$   ref_reg[118] [63:0] $end
$var reg      64 4$   ref_reg[119] [63:0] $end
$var reg      64 5$   ref_reg[120] [63:0] $end
$var reg      64 6$   ref_reg[121] [63:0] $end
$var reg      64 7$   ref_reg[122] [63:0] $end
$var reg      64 8$   ref_reg[123] [63:0] $end
$var reg      64 9$   ref_reg[124] [63:0] $end
$var reg      64 :$   ref_reg[125] [63:0] $end
$var reg      64 ;$   ref_reg[126] [63:0] $end
$var reg      64 <$   ref_reg[127] [63:0] $end
$var reg      256 =$   ref_str[0] [255:0] $end
$var reg      256 >$   ref_str[1] [255:0] $end
$var reg      256 ?$   ref_str[2] [255:0] $end
$var reg      256 @$   ref_str[3] [255:0] $end
$var reg      256 A$   ref_str[4] [255:0] $end
$var reg      256 B$   ref_str[5] [255:0] $end
$var reg      256 C$   ref_str[6] [255:0] $end
$var reg      256 D$   ref_str[7] [255:0] $end
$var reg      256 E$   ref_str[8] [255:0] $end
$var reg      256 F$   ref_str[9] [255:0] $end
$var reg      256 G$   ref_str[10] [255:0] $end
$var reg      256 H$   ref_str[11] [255:0] $end
$var reg      256 I$   ref_str[12] [255:0] $end
$var reg      256 J$   ref_str[13] [255:0] $end
$var reg      256 K$   ref_str[14] [255:0] $end
$var reg      256 L$   ref_str[15] [255:0] $end
$var reg      256 M$   ref_str[16] [255:0] $end
$var reg      256 N$   ref_str[17] [255:0] $end
$var reg      256 O$   ref_str[18] [255:0] $end
$var reg      256 P$   ref_str[19] [255:0] $end
$var reg      256 Q$   ref_str[20] [255:0] $end
$var reg      256 R$   ref_str[21] [255:0] $end
$var reg      256 S$   ref_str[22] [255:0] $end
$var reg      256 T$   ref_str[23] [255:0] $end
$var reg      256 U$   ref_str[24] [255:0] $end
$var reg      256 V$   ref_str[25] [255:0] $end
$var reg      256 W$   ref_str[26] [255:0] $end
$var reg      256 X$   ref_str[27] [255:0] $end
$var reg      256 Y$   ref_str[28] [255:0] $end
$var reg      256 Z$   ref_str[29] [255:0] $end
$var reg      256 [$   ref_str[30] [255:0] $end
$var reg      256 \$   ref_str[31] [255:0] $end
$var reg      256 ]$   ref_str[32] [255:0] $end
$var reg      256 ^$   ref_str[33] [255:0] $end
$var reg      256 _$   ref_str[34] [255:0] $end
$var reg      256 `$   ref_str[35] [255:0] $end
$var reg      256 a$   ref_str[36] [255:0] $end
$var reg      256 b$   ref_str[37] [255:0] $end
$var reg      256 c$   ref_str[38] [255:0] $end
$var reg      256 d$   ref_str[39] [255:0] $end
$var reg      256 e$   ref_str[40] [255:0] $end
$var reg      256 f$   ref_str[41] [255:0] $end
$var reg      256 g$   ref_str[42] [255:0] $end
$var reg      256 h$   ref_str[43] [255:0] $end
$var reg      256 i$   ref_str[44] [255:0] $end
$var reg      256 j$   ref_str[45] [255:0] $end
$var reg      256 k$   ref_str[46] [255:0] $end
$var reg      256 l$   ref_str[47] [255:0] $end
$var reg      256 m$   ref_str[48] [255:0] $end
$var reg      256 n$   ref_str[49] [255:0] $end
$var reg      256 o$   ref_str[50] [255:0] $end
$var reg      256 p$   ref_str[51] [255:0] $end
$var reg      256 q$   ref_str[52] [255:0] $end
$var reg      256 r$   ref_str[53] [255:0] $end
$var reg      256 s$   ref_str[54] [255:0] $end
$var reg      256 t$   ref_str[55] [255:0] $end
$var reg      256 u$   ref_str[56] [255:0] $end
$var reg      256 v$   ref_str[57] [255:0] $end
$var reg      256 w$   ref_str[58] [255:0] $end
$var reg      256 x$   ref_str[59] [255:0] $end
$var reg      256 y$   ref_str[60] [255:0] $end
$var reg      256 z$   ref_str[61] [255:0] $end
$var reg      256 {$   ref_str[62] [255:0] $end
$var reg      256 |$   ref_str[63] [255:0] $end
$var reg      256 }$   ref_str[64] [255:0] $end
$var reg      256 ~$   ref_str[65] [255:0] $end
$var reg      256 !%   ref_str[66] [255:0] $end
$var reg      256 "%   ref_str[67] [255:0] $end
$var reg      256 #%   ref_str[68] [255:0] $end
$var reg      256 $%   ref_str[69] [255:0] $end
$var reg      256 %%   ref_str[70] [255:0] $end
$var reg      256 &%   ref_str[71] [255:0] $end
$var reg      256 '%   ref_str[72] [255:0] $end
$var reg      256 (%   ref_str[73] [255:0] $end
$var reg      256 )%   ref_str[74] [255:0] $end
$var reg      256 *%   ref_str[75] [255:0] $end
$var reg      256 +%   ref_str[76] [255:0] $end
$var reg      256 ,%   ref_str[77] [255:0] $end
$var reg      256 -%   ref_str[78] [255:0] $end
$var reg      256 .%   ref_str[79] [255:0] $end
$var reg      256 /%   ref_str[80] [255:0] $end
$var reg      256 0%   ref_str[81] [255:0] $end
$var reg      256 1%   ref_str[82] [255:0] $end
$var reg      256 2%   ref_str[83] [255:0] $end
$var reg      256 3%   ref_str[84] [255:0] $end
$var reg      256 4%   ref_str[85] [255:0] $end
$var reg      256 5%   ref_str[86] [255:0] $end
$var reg      256 6%   ref_str[87] [255:0] $end
$var reg      256 7%   ref_str[88] [255:0] $end
$var reg      256 8%   ref_str[89] [255:0] $end
$var reg      256 9%   ref_str[90] [255:0] $end
$var reg      256 :%   ref_str[91] [255:0] $end
$var reg      256 ;%   ref_str[92] [255:0] $end
$var reg      256 <%   ref_str[93] [255:0] $end
$var reg      256 =%   ref_str[94] [255:0] $end
$var reg      256 >%   ref_str[95] [255:0] $end
$var reg      256 ?%   ref_str[96] [255:0] $end
$var reg      256 @%   ref_str[97] [255:0] $end
$var reg      256 A%   ref_str[98] [255:0] $end
$var reg      256 B%   ref_str[99] [255:0] $end
$var reg      256 C%   ref_str[100] [255:0] $end
$var reg      256 D%   ref_str[101] [255:0] $end
$var reg      256 E%   ref_str[102] [255:0] $end
$var reg      256 F%   ref_str[103] [255:0] $end
$var reg      256 G%   ref_str[104] [255:0] $end
$var reg      256 H%   ref_str[105] [255:0] $end
$var reg      256 I%   ref_str[106] [255:0] $end
$var reg      256 J%   ref_str[107] [255:0] $end
$var reg      256 K%   ref_str[108] [255:0] $end
$var reg      256 L%   ref_str[109] [255:0] $end
$var reg      256 M%   ref_str[110] [255:0] $end
$var reg      256 N%   ref_str[111] [255:0] $end
$var reg      256 O%   ref_str[112] [255:0] $end
$var reg      256 P%   ref_str[113] [255:0] $end
$var reg      256 Q%   ref_str[114] [255:0] $end
$var reg      256 R%   ref_str[115] [255:0] $end
$var reg      256 S%   ref_str[116] [255:0] $end
$var reg      256 T%   ref_str[117] [255:0] $end
$var reg      256 U%   ref_str[118] [255:0] $end
$var reg      256 V%   ref_str[119] [255:0] $end
$var reg      256 W%   ref_str[120] [255:0] $end
$var reg      256 X%   ref_str[121] [255:0] $end
$var reg      256 Y%   ref_str[122] [255:0] $end
$var reg      256 Z%   ref_str[123] [255:0] $end
$var reg      256 [%   ref_str[124] [255:0] $end
$var reg      256 \%   ref_str[125] [255:0] $end
$var reg      256 ]%   ref_str[126] [255:0] $end
$var reg      256 ^%   ref_str[127] [255:0] $end

$scope module dut $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   enable  $end
$var wire     64 b%   addr_ext [63:0] $end
$var wire      1 c%   wen_ext  $end
$var wire      1 d%   ren_ext  $end
$var wire     32 e%   wdata_ext [31:0] $end
$var wire     64 f%   addr_ext_2 [63:0] $end
$var wire      1 g%   wen_ext_2  $end
$var wire      1 h%   ren_ext_2  $end
$var wire     64 i%   wdata_ext_2 [63:0] $end
$var wire     32 +    rdata_ext [31:0] $end
$var wire     64 ,    rdata_ext_2 [63:0] $end
$var wire      1 j%   zero_flag  $end
$var wire     64 k%   branch_pc [63:0] $end
$var wire     64 l%   updated_pc [63:0] $end
$var wire     64 m%   current_pc [63:0] $end
$var wire     64 n%   jump_pc [63:0] $end
$var wire      1 o%   instruction [31] $end
$var wire      1 p%   instruction [30] $end
$var wire      1 q%   instruction [29] $end
$var wire      1 r%   instruction [28] $end
$var wire      1 s%   instruction [27] $end
$var wire      1 t%   instruction [26] $end
$var wire      1 u%   instruction [25] $end
$var wire      1 v%   instruction [24] $end
$var wire      1 w%   instruction [23] $end
$var wire      1 x%   instruction [22] $end
$var wire      1 y%   instruction [21] $end
$var wire      1 z%   instruction [20] $end
$var wire      1 {%   instruction [19] $end
$var wire      1 |%   instruction [18] $end
$var wire      1 }%   instruction [17] $end
$var wire      1 ~%   instruction [16] $end
$var wire      1 !&   instruction [15] $end
$var wire      1 "&   instruction [14] $end
$var wire      1 #&   instruction [13] $end
$var wire      1 $&   instruction [12] $end
$var wire      1 %&   instruction [11] $end
$var wire      1 &&   instruction [10] $end
$var wire      1 '&   instruction [9] $end
$var wire      1 (&   instruction [8] $end
$var wire      1 )&   instruction [7] $end
$var wire      1 *&   instruction [6] $end
$var wire      1 +&   instruction [5] $end
$var wire      1 ,&   instruction [4] $end
$var wire      1 -&   instruction [3] $end
$var wire      1 .&   instruction [2] $end
$var wire      1 /&   instruction [1] $end
$var wire      1 0&   instruction [0] $end
$var wire      2 1&   alu_op [1:0] $end
$var wire      4 2&   alu_control [3:0] $end
$var wire      1 3&   reg_dst  $end
$var wire      1 4&   branch  $end
$var wire      1 5&   mem_read  $end
$var wire      1 6&   mem_2_reg  $end
$var wire      1 7&   mem_write  $end
$var wire      1 8&   alu_src  $end
$var wire      1 9&   reg_write  $end
$var wire      1 :&   jump  $end
$var wire      5 ;&   regfile_waddr [4:0] $end
$var wire     64 <&   regfile_wdata [63:0] $end
$var wire     64 =&   mem_data [63:0] $end
$var wire     64 >&   alu_out [63:0] $end
$var wire     64 ?&   regfile_rdata_1 [63:0] $end
$var wire     64 @&   regfile_rdata_2 [63:0] $end
$var wire     64 A&   alu_operand_2 [63:0] $end
$var wire     64 B&   immediate_extended [63:0] $end

$scope module immediate_extend_u $end
$var wire      1 o%   instruction [31] $end
$var wire      1 p%   instruction [30] $end
$var wire      1 q%   instruction [29] $end
$var wire      1 r%   instruction [28] $end
$var wire      1 s%   instruction [27] $end
$var wire      1 t%   instruction [26] $end
$var wire      1 u%   instruction [25] $end
$var wire      1 v%   instruction [24] $end
$var wire      1 w%   instruction [23] $end
$var wire      1 x%   instruction [22] $end
$var wire      1 y%   instruction [21] $end
$var wire      1 z%   instruction [20] $end
$var wire      1 {%   instruction [19] $end
$var wire      1 |%   instruction [18] $end
$var wire      1 }%   instruction [17] $end
$var wire      1 ~%   instruction [16] $end
$var wire      1 !&   instruction [15] $end
$var wire      1 "&   instruction [14] $end
$var wire      1 #&   instruction [13] $end
$var wire      1 $&   instruction [12] $end
$var wire      1 %&   instruction [11] $end
$var wire      1 &&   instruction [10] $end
$var wire      1 '&   instruction [9] $end
$var wire      1 (&   instruction [8] $end
$var wire      1 )&   instruction [7] $end
$var wire      1 *&   instruction [6] $end
$var wire      1 +&   instruction [5] $end
$var wire      1 ,&   instruction [4] $end
$var wire      1 -&   instruction [3] $end
$var wire      1 .&   instruction [2] $end
$var wire      1 /&   instruction [1] $end
$var wire      1 0&   instruction [0] $end
$var reg      64 C&   immediate_extended [63:0] $end
$var wire     25 D&   instr [31:7] $end
$var wire      7 E&   opcode [6:0] $end
$var reg       3 F&   instr_type [2:0] $end
$var parameter 32 G&   ALU_R $end
$var parameter 32 H&   ALU_I $end
$var parameter 32 I&   BRANCH_EQ $end
$var parameter 32 J&   JUMP $end
$var parameter 32 K&   LOAD_WORD $end
$var parameter 32 L&   STORE_WORD $end
$upscope $end


$scope module program_counter $end
$var parameter 32 M&   DATA_W $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   enable  $end
$var wire     64 k%   branch_pc [63:0] $end
$var wire     64 n%   jump_pc [63:0] $end
$var wire      1 j%   zero_flag  $end
$var wire      1 4&   branch  $end
$var wire      1 :&   jump  $end
$var reg      64 N&   updated_pc [63:0] $end
$var reg      64 O&   current_pc [63:0] $end
$var parameter 64 P&   PC_INCREASE [63:0] $end
$var wire     64 Q&   pc_r [63:0] $end
$var wire     64 R&   next_pc [63:0] $end
$var wire     64 S&   next_pc_i [63:0] $end
$var reg       1 T&   pc_src $end

$scope module mux_branch $end
$var parameter 32 U&   DATA_W $end
$var wire     64 k%   input_a [63:0] $end
$var wire     64 V&   input_b [63:0] $end
$var wire      1 W&   select_a  $end
$var reg      64 X&   mux_out [63:0] $end
$upscope $end


$scope module mux_jump $end
$var parameter 32 Y&   DATA_W $end
$var wire     64 n%   input_a [63:0] $end
$var wire     64 S&   input_b [63:0] $end
$var wire      1 :&   select_a  $end
$var reg      64 Z&   mux_out [63:0] $end
$upscope $end


$scope module pc_register $end
$var parameter 32 [&   DATA_W $end
$var parameter 32 \&   PRESET_VAL $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 a%   en  $end
$var wire     64 R&   din [63:0] $end
$var wire     64 ]&   dout [63:0] $end
$var reg      64 ^&   r [63:0] $end
$var reg      64 _&   nxt [63:0] $end
$upscope $end

$upscope $end


$scope module instruction_memory $end
$var parameter 32 `&   ADDR_W $end
$var wire      1 _%   clk  $end
$var wire     64 m%   addr [63:0] $end
$var wire     64 b%   addr_ext [63:0] $end
$var wire      1 a&   wen  $end
$var wire      1 c%   wen_ext  $end
$var wire      1 b&   ren  $end
$var wire      1 d%   ren_ext  $end
$var wire     32 c&   wdata [31:0] $end
$var wire     32 e%   wdata_ext [31:0] $end
$var reg      32 d&   rdata [31:0] $end
$var reg      32 e&   rdata_ext [31:0] $end
$var parameter 32 f&   SEL_W $end
$var parameter 32 g&   MACRO_DEPTH $end
$var parameter 32 h&   N_MEMS $end
$var reg       7 i&   addr_i [6:0] $end
$var reg       7 j&   addr_ext_i [6:0] $end
$var reg       1 k&   mem_sel [0:0] $end
$var reg       1 l&   mem_sel_ext [0:0] $end
$var wire     32 m&   data_i [0] $end
$var wire     32 n&   data_ext_i [0] $end
$var reg       1 o&   cs_i [0:0] $end
$var reg       1 p&   cs_ext_i [0:0] $end
$var reg       1 q&   web0 $end
$var reg       1 r&   web1 $end
$var reg       1 s&   csb0 $end
$var reg       1 t&   csb1 $end

$scope begin process_for_mem[0] $end
$var parameter 32 u&   index_depth $end

$scope module dram_inst $end
$var parameter 32 v&   DATA_WIDTH $end
$var parameter 32 w&   ADDR_WIDTH $end
$var parameter 32 x&   RAM_DEPTH $end
$var parameter 32 y&   DELAY $end
$var parameter 32 z&   VERBOSE $end
$var parameter 32 {&   T_HOLD $end
$var wire      1 |&   clk0  $end
$var wire      1 }&   csb0  $end
$var wire      1 ~&   web0  $end
$var wire      7 !'   addr0 [6:0] $end
$var wire     32 c&   din0 [31:0] $end
$var reg      32 "'   dout0 [31:0] $end
$var wire      1 #'   clk1  $end
$var wire      1 $'   csb1  $end
$var wire      1 %'   web1  $end
$var wire      7 &'   addr1 [6:0] $end
$var wire     32 e%   din1 [31:0] $end
$var reg      32 ''   dout1 [31:0] $end
$var reg      32 ('   mem[0] [31:0] $end
$var reg      32 )'   mem[1] [31:0] $end
$var reg      32 *'   mem[2] [31:0] $end
$var reg      32 +'   mem[3] [31:0] $end
$var reg      32 ,'   mem[4] [31:0] $end
$var reg      32 -'   mem[5] [31:0] $end
$var reg      32 .'   mem[6] [31:0] $end
$var reg      32 /'   mem[7] [31:0] $end
$var reg      32 0'   mem[8] [31:0] $end
$var reg      32 1'   mem[9] [31:0] $end
$var reg      32 2'   mem[10] [31:0] $end
$var reg      32 3'   mem[11] [31:0] $end
$var reg      32 4'   mem[12] [31:0] $end
$var reg      32 5'   mem[13] [31:0] $end
$var reg      32 6'   mem[14] [31:0] $end
$var reg      32 7'   mem[15] [31:0] $end
$var reg      32 8'   mem[16] [31:0] $end
$var reg      32 9'   mem[17] [31:0] $end
$var reg      32 :'   mem[18] [31:0] $end
$var reg      32 ;'   mem[19] [31:0] $end
$var reg      32 <'   mem[20] [31:0] $end
$var reg      32 ='   mem[21] [31:0] $end
$var reg      32 >'   mem[22] [31:0] $end
$var reg      32 ?'   mem[23] [31:0] $end
$var reg      32 @'   mem[24] [31:0] $end
$var reg      32 A'   mem[25] [31:0] $end
$var reg      32 B'   mem[26] [31:0] $end
$var reg      32 C'   mem[27] [31:0] $end
$var reg      32 D'   mem[28] [31:0] $end
$var reg      32 E'   mem[29] [31:0] $end
$var reg      32 F'   mem[30] [31:0] $end
$var reg      32 G'   mem[31] [31:0] $end
$var reg      32 H'   mem[32] [31:0] $end
$var reg      32 I'   mem[33] [31:0] $end
$var reg      32 J'   mem[34] [31:0] $end
$var reg      32 K'   mem[35] [31:0] $end
$var reg      32 L'   mem[36] [31:0] $end
$var reg      32 M'   mem[37] [31:0] $end
$var reg      32 N'   mem[38] [31:0] $end
$var reg      32 O'   mem[39] [31:0] $end
$var reg      32 P'   mem[40] [31:0] $end
$var reg      32 Q'   mem[41] [31:0] $end
$var reg      32 R'   mem[42] [31:0] $end
$var reg      32 S'   mem[43] [31:0] $end
$var reg      32 T'   mem[44] [31:0] $end
$var reg      32 U'   mem[45] [31:0] $end
$var reg      32 V'   mem[46] [31:0] $end
$var reg      32 W'   mem[47] [31:0] $end
$var reg      32 X'   mem[48] [31:0] $end
$var reg      32 Y'   mem[49] [31:0] $end
$var reg      32 Z'   mem[50] [31:0] $end
$var reg      32 ['   mem[51] [31:0] $end
$var reg      32 \'   mem[52] [31:0] $end
$var reg      32 ]'   mem[53] [31:0] $end
$var reg      32 ^'   mem[54] [31:0] $end
$var reg      32 _'   mem[55] [31:0] $end
$var reg      32 `'   mem[56] [31:0] $end
$var reg      32 a'   mem[57] [31:0] $end
$var reg      32 b'   mem[58] [31:0] $end
$var reg      32 c'   mem[59] [31:0] $end
$var reg      32 d'   mem[60] [31:0] $end
$var reg      32 e'   mem[61] [31:0] $end
$var reg      32 f'   mem[62] [31:0] $end
$var reg      32 g'   mem[63] [31:0] $end
$var reg      32 h'   mem[64] [31:0] $end
$var reg      32 i'   mem[65] [31:0] $end
$var reg      32 j'   mem[66] [31:0] $end
$var reg      32 k'   mem[67] [31:0] $end
$var reg      32 l'   mem[68] [31:0] $end
$var reg      32 m'   mem[69] [31:0] $end
$var reg      32 n'   mem[70] [31:0] $end
$var reg      32 o'   mem[71] [31:0] $end
$var reg      32 p'   mem[72] [31:0] $end
$var reg      32 q'   mem[73] [31:0] $end
$var reg      32 r'   mem[74] [31:0] $end
$var reg      32 s'   mem[75] [31:0] $end
$var reg      32 t'   mem[76] [31:0] $end
$var reg      32 u'   mem[77] [31:0] $end
$var reg      32 v'   mem[78] [31:0] $end
$var reg      32 w'   mem[79] [31:0] $end
$var reg      32 x'   mem[80] [31:0] $end
$var reg      32 y'   mem[81] [31:0] $end
$var reg      32 z'   mem[82] [31:0] $end
$var reg      32 {'   mem[83] [31:0] $end
$var reg      32 |'   mem[84] [31:0] $end
$var reg      32 }'   mem[85] [31:0] $end
$var reg      32 ~'   mem[86] [31:0] $end
$var reg      32 !(   mem[87] [31:0] $end
$var reg      32 "(   mem[88] [31:0] $end
$var reg      32 #(   mem[89] [31:0] $end
$var reg      32 $(   mem[90] [31:0] $end
$var reg      32 %(   mem[91] [31:0] $end
$var reg      32 &(   mem[92] [31:0] $end
$var reg      32 '(   mem[93] [31:0] $end
$var reg      32 ((   mem[94] [31:0] $end
$var reg      32 )(   mem[95] [31:0] $end
$var reg      32 *(   mem[96] [31:0] $end
$var reg      32 +(   mem[97] [31:0] $end
$var reg      32 ,(   mem[98] [31:0] $end
$var reg      32 -(   mem[99] [31:0] $end
$var reg      32 .(   mem[100] [31:0] $end
$var reg      32 /(   mem[101] [31:0] $end
$var reg      32 0(   mem[102] [31:0] $end
$var reg      32 1(   mem[103] [31:0] $end
$var reg      32 2(   mem[104] [31:0] $end
$var reg      32 3(   mem[105] [31:0] $end
$var reg      32 4(   mem[106] [31:0] $end
$var reg      32 5(   mem[107] [31:0] $end
$var reg      32 6(   mem[108] [31:0] $end
$var reg      32 7(   mem[109] [31:0] $end
$var reg      32 8(   mem[110] [31:0] $end
$var reg      32 9(   mem[111] [31:0] $end
$var reg      32 :(   mem[112] [31:0] $end
$var reg      32 ;(   mem[113] [31:0] $end
$var reg      32 <(   mem[114] [31:0] $end
$var reg      32 =(   mem[115] [31:0] $end
$var reg      32 >(   mem[116] [31:0] $end
$var reg      32 ?(   mem[117] [31:0] $end
$var reg      32 @(   mem[118] [31:0] $end
$var reg      32 A(   mem[119] [31:0] $end
$var reg      32 B(   mem[120] [31:0] $end
$var reg      32 C(   mem[121] [31:0] $end
$var reg      32 D(   mem[122] [31:0] $end
$var reg      32 E(   mem[123] [31:0] $end
$var reg      32 F(   mem[124] [31:0] $end
$var reg      32 G(   mem[125] [31:0] $end
$var reg      32 H(   mem[126] [31:0] $end
$var reg      32 I(   mem[127] [31:0] $end
$upscope $end

$upscope $end

$upscope $end


$scope module data_memory $end
$var parameter 32 J(   ADDR_W $end
$var wire      1 _%   clk  $end
$var wire     64 >&   addr [63:0] $end
$var wire     64 f%   addr_ext [63:0] $end
$var wire      1 7&   wen  $end
$var wire      1 g%   wen_ext  $end
$var wire      1 5&   ren  $end
$var wire      1 h%   ren_ext  $end
$var wire     64 @&   wdata [63:0] $end
$var wire     64 i%   wdata_ext [63:0] $end
$var reg      64 K(   rdata [63:0] $end
$var reg      64 L(   rdata_ext [63:0] $end
$var parameter 32 M(   SEL_W $end
$var parameter 32 N(   MACRO_DEPTH $end
$var parameter 32 O(   N_MEMS $end
$var reg       7 P(   addr_i [6:0] $end
$var reg       7 Q(   addr_ext_i [6:0] $end
$var reg       1 R(   mem_sel [0:0] $end
$var reg       1 S(   mem_sel_ext [0:0] $end
$var wire     64 T(   data_i [0] $end
$var wire     64 U(   data_ext_i [0] $end
$var reg       1 V(   cs_i [0:0] $end
$var reg       1 W(   cs_ext_i [0:0] $end
$var reg       1 X(   web0 $end
$var reg       1 Y(   web1 $end
$var reg       1 Z(   csb0 $end
$var reg       1 [(   csb1 $end

$scope begin process_for_mem[0] $end
$var parameter 32 \(   index_depth $end

$scope module spad_inst $end
$var parameter 32 ](   DATA_WIDTH $end
$var parameter 32 ^(   ADDR_WIDTH $end
$var parameter 32 _(   RAM_DEPTH $end
$var parameter 32 `(   DELAY $end
$var parameter 32 a(   VERBOSE $end
$var parameter 32 b(   T_HOLD $end
$var wire      1 c(   clk0  $end
$var wire      1 d(   csb0  $end
$var wire      1 e(   web0  $end
$var wire      7 f(   addr0 [6:0] $end
$var wire     64 @&   din0 [63:0] $end
$var reg      64 g(   dout0 [63:0] $end
$var wire      1 h(   clk1  $end
$var wire      1 i(   csb1  $end
$var wire      1 j(   web1  $end
$var wire      7 k(   addr1 [6:0] $end
$var wire     64 i%   din1 [63:0] $end
$var reg      64 l(   dout1 [63:0] $end
$var reg      64 m(   mem[0] [63:0] $end
$var reg      64 n(   mem[1] [63:0] $end
$var reg      64 o(   mem[2] [63:0] $end
$var reg      64 p(   mem[3] [63:0] $end
$var reg      64 q(   mem[4] [63:0] $end
$var reg      64 r(   mem[5] [63:0] $end
$var reg      64 s(   mem[6] [63:0] $end
$var reg      64 t(   mem[7] [63:0] $end
$var reg      64 u(   mem[8] [63:0] $end
$var reg      64 v(   mem[9] [63:0] $end
$var reg      64 w(   mem[10] [63:0] $end
$var reg      64 x(   mem[11] [63:0] $end
$var reg      64 y(   mem[12] [63:0] $end
$var reg      64 z(   mem[13] [63:0] $end
$var reg      64 {(   mem[14] [63:0] $end
$var reg      64 |(   mem[15] [63:0] $end
$var reg      64 }(   mem[16] [63:0] $end
$var reg      64 ~(   mem[17] [63:0] $end
$var reg      64 !)   mem[18] [63:0] $end
$var reg      64 ")   mem[19] [63:0] $end
$var reg      64 #)   mem[20] [63:0] $end
$var reg      64 $)   mem[21] [63:0] $end
$var reg      64 %)   mem[22] [63:0] $end
$var reg      64 &)   mem[23] [63:0] $end
$var reg      64 ')   mem[24] [63:0] $end
$var reg      64 ()   mem[25] [63:0] $end
$var reg      64 ))   mem[26] [63:0] $end
$var reg      64 *)   mem[27] [63:0] $end
$var reg      64 +)   mem[28] [63:0] $end
$var reg      64 ,)   mem[29] [63:0] $end
$var reg      64 -)   mem[30] [63:0] $end
$var reg      64 .)   mem[31] [63:0] $end
$var reg      64 /)   mem[32] [63:0] $end
$var reg      64 0)   mem[33] [63:0] $end
$var reg      64 1)   mem[34] [63:0] $end
$var reg      64 2)   mem[35] [63:0] $end
$var reg      64 3)   mem[36] [63:0] $end
$var reg      64 4)   mem[37] [63:0] $end
$var reg      64 5)   mem[38] [63:0] $end
$var reg      64 6)   mem[39] [63:0] $end
$var reg      64 7)   mem[40] [63:0] $end
$var reg      64 8)   mem[41] [63:0] $end
$var reg      64 9)   mem[42] [63:0] $end
$var reg      64 :)   mem[43] [63:0] $end
$var reg      64 ;)   mem[44] [63:0] $end
$var reg      64 <)   mem[45] [63:0] $end
$var reg      64 =)   mem[46] [63:0] $end
$var reg      64 >)   mem[47] [63:0] $end
$var reg      64 ?)   mem[48] [63:0] $end
$var reg      64 @)   mem[49] [63:0] $end
$var reg      64 A)   mem[50] [63:0] $end
$var reg      64 B)   mem[51] [63:0] $end
$var reg      64 C)   mem[52] [63:0] $end
$var reg      64 D)   mem[53] [63:0] $end
$var reg      64 E)   mem[54] [63:0] $end
$var reg      64 F)   mem[55] [63:0] $end
$var reg      64 G)   mem[56] [63:0] $end
$var reg      64 H)   mem[57] [63:0] $end
$var reg      64 I)   mem[58] [63:0] $end
$var reg      64 J)   mem[59] [63:0] $end
$var reg      64 K)   mem[60] [63:0] $end
$var reg      64 L)   mem[61] [63:0] $end
$var reg      64 M)   mem[62] [63:0] $end
$var reg      64 N)   mem[63] [63:0] $end
$var reg      64 O)   mem[64] [63:0] $end
$var reg      64 P)   mem[65] [63:0] $end
$var reg      64 Q)   mem[66] [63:0] $end
$var reg      64 R)   mem[67] [63:0] $end
$var reg      64 S)   mem[68] [63:0] $end
$var reg      64 T)   mem[69] [63:0] $end
$var reg      64 U)   mem[70] [63:0] $end
$var reg      64 V)   mem[71] [63:0] $end
$var reg      64 W)   mem[72] [63:0] $end
$var reg      64 X)   mem[73] [63:0] $end
$var reg      64 Y)   mem[74] [63:0] $end
$var reg      64 Z)   mem[75] [63:0] $end
$var reg      64 [)   mem[76] [63:0] $end
$var reg      64 \)   mem[77] [63:0] $end
$var reg      64 ])   mem[78] [63:0] $end
$var reg      64 ^)   mem[79] [63:0] $end
$var reg      64 _)   mem[80] [63:0] $end
$var reg      64 `)   mem[81] [63:0] $end
$var reg      64 a)   mem[82] [63:0] $end
$var reg      64 b)   mem[83] [63:0] $end
$var reg      64 c)   mem[84] [63:0] $end
$var reg      64 d)   mem[85] [63:0] $end
$var reg      64 e)   mem[86] [63:0] $end
$var reg      64 f)   mem[87] [63:0] $end
$var reg      64 g)   mem[88] [63:0] $end
$var reg      64 h)   mem[89] [63:0] $end
$var reg      64 i)   mem[90] [63:0] $end
$var reg      64 j)   mem[91] [63:0] $end
$var reg      64 k)   mem[92] [63:0] $end
$var reg      64 l)   mem[93] [63:0] $end
$var reg      64 m)   mem[94] [63:0] $end
$var reg      64 n)   mem[95] [63:0] $end
$var reg      64 o)   mem[96] [63:0] $end
$var reg      64 p)   mem[97] [63:0] $end
$var reg      64 q)   mem[98] [63:0] $end
$var reg      64 r)   mem[99] [63:0] $end
$var reg      64 s)   mem[100] [63:0] $end
$var reg      64 t)   mem[101] [63:0] $end
$var reg      64 u)   mem[102] [63:0] $end
$var reg      64 v)   mem[103] [63:0] $end
$var reg      64 w)   mem[104] [63:0] $end
$var reg      64 x)   mem[105] [63:0] $end
$var reg      64 y)   mem[106] [63:0] $end
$var reg      64 z)   mem[107] [63:0] $end
$var reg      64 {)   mem[108] [63:0] $end
$var reg      64 |)   mem[109] [63:0] $end
$var reg      64 })   mem[110] [63:0] $end
$var reg      64 ~)   mem[111] [63:0] $end
$var reg      64 !*   mem[112] [63:0] $end
$var reg      64 "*   mem[113] [63:0] $end
$var reg      64 #*   mem[114] [63:0] $end
$var reg      64 $*   mem[115] [63:0] $end
$var reg      64 %*   mem[116] [63:0] $end
$var reg      64 &*   mem[117] [63:0] $end
$var reg      64 '*   mem[118] [63:0] $end
$var reg      64 (*   mem[119] [63:0] $end
$var reg      64 )*   mem[120] [63:0] $end
$var reg      64 **   mem[121] [63:0] $end
$var reg      64 +*   mem[122] [63:0] $end
$var reg      64 ,*   mem[123] [63:0] $end
$var reg      64 -*   mem[124] [63:0] $end
$var reg      64 .*   mem[125] [63:0] $end
$var reg      64 /*   mem[126] [63:0] $end
$var reg      64 0*   mem[127] [63:0] $end
$upscope $end

$upscope $end

$upscope $end


$scope module control_unit $end
$var wire      1 *&   opcode [6] $end
$var wire      1 +&   opcode [5] $end
$var wire      1 ,&   opcode [4] $end
$var wire      1 -&   opcode [3] $end
$var wire      1 .&   opcode [2] $end
$var wire      1 /&   opcode [1] $end
$var wire      1 0&   opcode [0] $end
$var reg       2 1*   alu_op [1:0] $end
$var reg       1 2*   reg_dst $end
$var reg       1 3*   branch $end
$var reg       1 4*   mem_read $end
$var reg       1 5*   mem_2_reg $end
$var reg       1 6*   mem_write $end
$var reg       1 7*   alu_src $end
$var reg       1 8*   reg_write $end
$var reg       1 9*   jump $end
$var parameter 32 :*   ALU_R $end
$var parameter 32 ;*   ALU_I $end
$var parameter 32 <*   BRANCH_EQ $end
$var parameter 32 =*   JUMP $end
$var parameter 32 >*   LOAD $end
$var parameter 32 ?*   STORE $end
$var parameter  2 @*   ADD_OPCODE [1:0] $end
$var parameter  2 A*   SUB_OPCODE [1:0] $end
$var parameter  2 B*   R_TYPE_OPCODE [1:0] $end
$upscope $end


$scope module register_file $end
$var parameter 32 C*   DATA_W $end
$var wire      1 _%   clk  $end
$var wire      1 `%   arst_n  $end
$var wire      1 9&   reg_write  $end
$var wire      1 {%   raddr_1 [4] $end
$var wire      1 |%   raddr_1 [3] $end
$var wire      1 }%   raddr_1 [2] $end
$var wire      1 ~%   raddr_1 [1] $end
$var wire      1 !&   raddr_1 [0] $end
$var wire      1 v%   raddr_2 [4] $end
$var wire      1 w%   raddr_2 [3] $end
$var wire      1 x%   raddr_2 [2] $end
$var wire      1 y%   raddr_2 [1] $end
$var wire      1 z%   raddr_2 [0] $end
$var wire      1 %&   waddr [4] $end
$var wire      1 &&   waddr [3] $end
$var wire      1 '&   waddr [2] $end
$var wire      1 (&   waddr [1] $end
$var wire      1 )&   waddr [0] $end
$var wire     64 <&   wdata [63:0] $end
$var reg      64 D*   rdata_1 [63:0] $end
$var reg      64 E*   rdata_2 [63:0] $end
$var parameter 32 F*   N_REG $end
$var reg      64 G*   reg_array[0] [63:0] $end
$var reg      64 H*   reg_array[1] [63:0] $end
$var reg      64 I*   reg_array[2] [63:0] $end
$var reg      64 J*   reg_array[3] [63:0] $end
$var reg      64 K*   reg_array[4] [63:0] $end
$var reg      64 L*   reg_array[5] [63:0] $end
$var reg      64 M*   reg_array[6] [63:0] $end
$var reg      64 N*   reg_array[7] [63:0] $end
$var reg      64 O*   reg_array[8] [63:0] $end
$var reg      64 P*   reg_array[9] [63:0] $end
$var reg      64 Q*   reg_array[10] [63:0] $end
$var reg      64 R*   reg_array[11] [63:0] $end
$var reg      64 S*   reg_array[12] [63:0] $end
$var reg      64 T*   reg_array[13] [63:0] $end
$var reg      64 U*   reg_array[14] [63:0] $end
$var reg      64 V*   reg_array[15] [63:0] $end
$var reg      64 W*   reg_array[16] [63:0] $end
$var reg      64 X*   reg_array[17] [63:0] $end
$var reg      64 Y*   reg_array[18] [63:0] $end
$var reg      64 Z*   reg_array[19] [63:0] $end
$var reg      64 [*   reg_array[20] [63:0] $end
$var reg      64 \*   reg_array[21] [63:0] $end
$var reg      64 ]*   reg_array[22] [63:0] $end
$var reg      64 ^*   reg_array[23] [63:0] $end
$var reg      64 _*   reg_array[24] [63:0] $end
$var reg      64 `*   reg_array[25] [63:0] $end
$var reg      64 a*   reg_array[26] [63:0] $end
$var reg      64 b*   reg_array[27] [63:0] $end
$var reg      64 c*   reg_array[28] [63:0] $end
$var reg      64 d*   reg_array[29] [63:0] $end
$var reg      64 e*   reg_array[30] [63:0] $end
$var reg      64 f*   reg_array[31] [63:0] $end
$var reg      64 g*   reg_array_nxt[0] [63:0] $end
$var reg      64 h*   reg_array_nxt[1] [63:0] $end
$var reg      64 i*   reg_array_nxt[2] [63:0] $end
$var reg      64 j*   reg_array_nxt[3] [63:0] $end
$var reg      64 k*   reg_array_nxt[4] [63:0] $end
$var reg      64 l*   reg_array_nxt[5] [63:0] $end
$var reg      64 m*   reg_array_nxt[6] [63:0] $end
$var reg      64 n*   reg_array_nxt[7] [63:0] $end
$var reg      64 o*   reg_array_nxt[8] [63:0] $end
$var reg      64 p*   reg_array_nxt[9] [63:0] $end
$var reg      64 q*   reg_array_nxt[10] [63:0] $end
$var reg      64 r*   reg_array_nxt[11] [63:0] $end
$var reg      64 s*   reg_array_nxt[12] [63:0] $end
$var reg      64 t*   reg_array_nxt[13] [63:0] $end
$var reg      64 u*   reg_array_nxt[14] [63:0] $end
$var reg      64 v*   reg_array_nxt[15] [63:0] $end
$var reg      64 w*   reg_array_nxt[16] [63:0] $end
$var reg      64 x*   reg_array_nxt[17] [63:0] $end
$var reg      64 y*   reg_array_nxt[18] [63:0] $end
$var reg      64 z*   reg_array_nxt[19] [63:0] $end
$var reg      64 {*   reg_array_nxt[20] [63:0] $end
$var reg      64 |*   reg_array_nxt[21] [63:0] $end
$var reg      64 }*   reg_array_nxt[22] [63:0] $end
$var reg      64 ~*   reg_array_nxt[23] [63:0] $end
$var reg      64 !+   reg_array_nxt[24] [63:0] $end
$var reg      64 "+   reg_array_nxt[25] [63:0] $end
$var reg      64 #+   reg_array_nxt[26] [63:0] $end
$var reg      64 $+   reg_array_nxt[27] [63:0] $end
$var reg      64 %+   reg_array_nxt[28] [63:0] $end
$var reg      64 &+   reg_array_nxt[29] [63:0] $end
$var reg      64 '+   reg_array_nxt[30] [63:0] $end
$var reg      64 (+   reg_array_nxt[31] [63:0] $end
$var integer  32 )+   idx $end
$upscope $end


$scope module alu_ctrl $end
$var wire      1 p%   func7_5  $end
$var wire      1 u%   func7_0  $end
$var wire      1 "&   func3 [2] $end
$var wire      1 #&   func3 [1] $end
$var wire      1 $&   func3 [0] $end
$var wire      2 1&   alu_op [1:0] $end
$var reg       4 *+   alu_control [3:0] $end
$var parameter  2 ++   ADD_OPCODE [1:0] $end
$var parameter  2 ,+   SUB_OPCODE [1:0] $end
$var parameter  2 -+   R_TYPE_OPCODE [1:0] $end
$var parameter  4 .+   AND_OP [3:0] $end
$var parameter  4 /+   OR_OP [3:0] $end
$var parameter  4 0+   ADD_OP [3:0] $end
$var parameter  4 1+   SLL_OP [3:0] $end
$var parameter  4 2+   SRL_OP [3:0] $end
$var parameter  4 3+   SUB_OP [3:0] $end
$var parameter  4 4+   SLT_OP [3:0] $end
$var parameter  4 5+   MUL_OP [3:0] $end
$var wire      5 6+   function_field [4:0] $end
$var parameter  5 7+   FUNC_ADD [4:0] $end
$var parameter  5 8+   FUNC_SUB [4:0] $end
$var parameter  5 9+   FUNC_AND [4:0] $end
$var parameter  5 :+   FUNC_OR [4:0] $end
$var parameter  5 ;+   FUNC_SLT [4:0] $end
$var parameter  5 <+   FUNC_SLL [4:0] $end
$var parameter  5 =+   FUNC_SRL [4:0] $end
$var parameter  5 >+   FUNC_MUL [4:0] $end
$var reg       4 ?+   rtype_op [3:0] $end
$upscope $end


$scope module alu_operand_mux $end
$var parameter 32 @+   DATA_W $end
$var wire     64 B&   input_a [63:0] $end
$var wire     64 @&   input_b [63:0] $end
$var wire      1 8&   select_a  $end
$var reg      64 A+   mux_out [63:0] $end
$upscope $end


$scope module alu $end
$var parameter 32 B+   DATA_W $end
$var wire     64 ?&   alu_in_0 [63:0] $end
$var wire     64 A&   alu_in_1 [63:0] $end
$var wire      4 2&   alu_ctrl [3:0] $end
$var reg      64 C+   alu_out [63:0] $end
$var reg       1 D+   zero_flag $end
$var reg       1 E+   overflow $end
$var parameter  4 F+   AND_OP [3:0] $end
$var parameter  4 G+   OR_OP [3:0] $end
$var parameter  4 H+   ADD_OP [3:0] $end
$var parameter  4 I+   SLL_OP [3:0] $end
$var parameter  4 J+   SRL_OP [3:0] $end
$var parameter  4 K+   SUB_OP [3:0] $end
$var parameter  4 L+   SLT_OP [3:0] $end
$var parameter  4 M+   MUL_OP [3:0] $end
$var reg      64 N+   sub_out [63:0] $end
$var reg      64 O+   add_out [63:0] $end
$var reg      64 P+   and_out [63:0] $end
$var reg      64 Q+   or_out [63:0] $end
$var reg      64 R+   nor_out [63:0] $end
$var reg      64 S+   slt_out [63:0] $end
$var reg      64 T+   sll_out [63:0] $end
$var reg      64 U+   srl_out [63:0] $end
$var reg      64 V+   mul_out [63:0] $end
$var reg       1 W+   overflow_add $end
$var reg       1 X+   overflow_sub $end
$var reg       1 Y+   msb_equal_flag $end
$upscope $end


$scope module regfile_data_mux $end
$var parameter 32 Z+   DATA_W $end
$var wire     64 =&   input_a [63:0] $end
$var wire     64 >&   input_b [63:0] $end
$var wire      1 6&   select_a  $end
$var reg      64 [+   mux_out [63:0] $end
$upscope $end


$scope module branch_unit $end
$var parameter 32 \+   DATA_W $end
$var wire     64 l%   updated_pc [63:0] $end
$var wire     64 B&   immediate_extended [63:0] $end
$var reg      64 ]+   branch_pc [63:0] $end
$var reg      64 ^+   jump_pc [63:0] $end
$var parameter 64 _+   PC_INCREASE [63:0] $end
$upscope $end

$upscope $end


$scope task debug_regfile $end
$var integer  32 `+   i $end
$upscope $end


$scope task test_basic $end
$var integer  32 a+   i $end
$var integer  32 b+   j $end
$var integer  32 c+   ref_reg_idx[0] $end
$var integer  32 d+   ref_reg_idx[1] $end
$var integer  32 e+   ref_reg_idx[2] $end
$var integer  32 f+   ref_reg_idx[3] $end
$var integer  32 g+   ref_reg_idx[4] $end
$var integer  32 h+   ref_reg_idx[5] $end
$var integer  32 i+   ref_reg_idx[6] $end
$var integer  32 j+   ref_reg_idx[7] $end
$var integer  32 k+   ref_reg_idx[8] $end
$var integer  32 l+   ref_reg_idx[9] $end
$var integer  32 m+   ref_reg_idx[10] $end
$var integer  32 n+   ref_reg_idx[11] $end
$var integer  32 o+   ref_reg_idx[12] $end
$var integer  32 p+   ref_reg_idx[13] $end
$var integer  32 q+   ref_reg_idx[14] $end
$var integer  32 r+   ref_reg_idx[15] $end
$var integer  32 s+   ref_reg_idx[16] $end
$var integer  32 t+   ref_reg_idx[17] $end
$var integer  32 u+   ref_reg_idx[18] $end
$var integer  32 v+   ref_reg_idx[19] $end
$var integer  32 w+   ref_reg_idx[20] $end
$var integer  32 x+   ref_reg_idx[21] $end
$var integer  32 y+   ref_reg_idx[22] $end
$var integer  32 z+   ref_reg_idx[23] $end
$var integer  32 {+   ref_reg_idx[24] $end
$var integer  32 |+   ref_reg_idx[25] $end
$var integer  32 }+   ref_reg_idx[26] $end
$var integer  32 ~+   ref_reg_idx[27] $end
$var integer  32 !,   ref_reg_idx[28] $end
$var integer  32 ",   ref_reg_idx[29] $end
$var integer  32 #,   ref_reg_idx[30] $end
$var integer  32 $,   ref_reg_idx[31] $end
$var integer  32 %,   ref_reg_idx[32] $end
$var integer  32 &,   ref_reg_idx[33] $end
$var integer  32 ',   ref_reg_idx[34] $end
$var integer  32 (,   ref_reg_idx[35] $end
$var integer  32 ),   ref_reg_idx[36] $end
$var integer  32 *,   ref_reg_idx[37] $end
$var integer  32 +,   ref_reg_idx[38] $end
$var integer  32 ,,   ref_reg_idx[39] $end
$var integer  32 -,   ref_reg_idx[40] $end
$var integer  32 .,   ref_reg_idx[41] $end
$var integer  32 /,   ref_reg_idx[42] $end
$var integer  32 0,   ref_reg_idx[43] $end
$var integer  32 1,   ref_reg_idx[44] $end
$var integer  32 2,   ref_reg_idx[45] $end
$var integer  32 3,   ref_reg_idx[46] $end
$var integer  32 4,   ref_reg_idx[47] $end
$var integer  32 5,   ref_reg_idx[48] $end
$var integer  32 6,   ref_reg_idx[49] $end
$var integer  32 7,   ref_reg_idx[50] $end
$var integer  32 8,   ref_reg_idx[51] $end
$var integer  32 9,   ref_reg_idx[52] $end
$var integer  32 :,   ref_reg_idx[53] $end
$var integer  32 ;,   ref_reg_idx[54] $end
$var integer  32 <,   ref_reg_idx[55] $end
$var integer  32 =,   ref_reg_idx[56] $end
$var integer  32 >,   ref_reg_idx[57] $end
$var integer  32 ?,   ref_reg_idx[58] $end
$var integer  32 @,   ref_reg_idx[59] $end
$var integer  32 A,   ref_reg_idx[60] $end
$var integer  32 B,   ref_reg_idx[61] $end
$var integer  32 C,   ref_reg_idx[62] $end
$var integer  32 D,   ref_reg_idx[63] $end
$var integer  32 E,   ref_reg_idx[64] $end
$var integer  32 F,   ref_reg_idx[65] $end
$var integer  32 G,   ref_reg_idx[66] $end
$var integer  32 H,   ref_reg_idx[67] $end
$var integer  32 I,   ref_reg_idx[68] $end
$var integer  32 J,   ref_reg_idx[69] $end
$var integer  32 K,   ref_reg_idx[70] $end
$var integer  32 L,   ref_reg_idx[71] $end
$var integer  32 M,   ref_reg_idx[72] $end
$var integer  32 N,   ref_reg_idx[73] $end
$var integer  32 O,   ref_reg_idx[74] $end
$var integer  32 P,   ref_reg_idx[75] $end
$var integer  32 Q,   ref_reg_idx[76] $end
$var integer  32 R,   ref_reg_idx[77] $end
$var integer  32 S,   ref_reg_idx[78] $end
$var integer  32 T,   ref_reg_idx[79] $end
$var integer  32 U,   ref_reg_idx[80] $end
$var integer  32 V,   ref_reg_idx[81] $end
$var integer  32 W,   ref_reg_idx[82] $end
$var integer  32 X,   ref_reg_idx[83] $end
$var integer  32 Y,   ref_reg_idx[84] $end
$var integer  32 Z,   ref_reg_idx[85] $end
$var integer  32 [,   ref_reg_idx[86] $end
$var integer  32 \,   ref_reg_idx[87] $end
$var integer  32 ],   ref_reg_idx[88] $end
$var integer  32 ^,   ref_reg_idx[89] $end
$var integer  32 _,   ref_reg_idx[90] $end
$var integer  32 `,   ref_reg_idx[91] $end
$var integer  32 a,   ref_reg_idx[92] $end
$var integer  32 b,   ref_reg_idx[93] $end
$var integer  32 c,   ref_reg_idx[94] $end
$var integer  32 d,   ref_reg_idx[95] $end
$var integer  32 e,   ref_reg_idx[96] $end
$var integer  32 f,   ref_reg_idx[97] $end
$var integer  32 g,   ref_reg_idx[98] $end
$var integer  32 h,   ref_reg_idx[99] $end
$var integer  32 i,   ref_reg_idx[100] $end
$var integer  32 j,   ref_reg_idx[101] $end
$var integer  32 k,   ref_reg_idx[102] $end
$var integer  32 l,   ref_reg_idx[103] $end
$var integer  32 m,   ref_reg_idx[104] $end
$var integer  32 n,   ref_reg_idx[105] $end
$var integer  32 o,   ref_reg_idx[106] $end
$var integer  32 p,   ref_reg_idx[107] $end
$var integer  32 q,   ref_reg_idx[108] $end
$var integer  32 r,   ref_reg_idx[109] $end
$var integer  32 s,   ref_reg_idx[110] $end
$var integer  32 t,   ref_reg_idx[111] $end
$var integer  32 u,   ref_reg_idx[112] $end
$var integer  32 v,   ref_reg_idx[113] $end
$var integer  32 w,   ref_reg_idx[114] $end
$var integer  32 x,   ref_reg_idx[115] $end
$var integer  32 y,   ref_reg_idx[116] $end
$var integer  32 z,   ref_reg_idx[117] $end
$var integer  32 {,   ref_reg_idx[118] $end
$var integer  32 |,   ref_reg_idx[119] $end
$var integer  32 },   ref_reg_idx[120] $end
$var integer  32 ~,   ref_reg_idx[121] $end
$var integer  32 !-   ref_reg_idx[122] $end
$var integer  32 "-   ref_reg_idx[123] $end
$var integer  32 #-   ref_reg_idx[124] $end
$var integer  32 $-   ref_reg_idx[125] $end
$var integer  32 %-   ref_reg_idx[126] $end
$var integer  32 &-   ref_reg_idx[127] $end
$upscope $end


$scope task test_mult_4 $end
$var integer  32 '-   i $end
$var integer  32 (-   j $end
$var reg       1 )-   error_flag $end
$var reg      64 *-   result_mem_mult4[0] [63:0] $end
$var reg      64 +-   result_mem_mult4[1] [63:0] $end
$var reg      64 ,-   result_mem_mult4[2] [63:0] $end
$var reg      64 --   result_mem_mult4[3] [63:0] $end
$var reg      64 .-   result_mem_mult4[4] [63:0] $end
$var reg      64 /-   result_mem_mult4[5] [63:0] $end
$var reg      64 0-   result_mem_mult4[6] [63:0] $end
$var reg      64 1-   result_mem_mult4[7] [63:0] $end
$var reg      64 2-   result_mem_mult4[8] [63:0] $end
$var reg      64 3-   result_mem_mult4[9] [63:0] $end
$var reg      64 4-   result_mem_mult4[10] [63:0] $end
$var reg      64 5-   result_mem_mult4[11] [63:0] $end
$var reg      64 6-   result_mem_mult4[12] [63:0] $end
$var reg      64 7-   result_mem_mult4[13] [63:0] $end
$var reg      64 8-   result_mem_mult4[14] [63:0] $end
$var reg      64 9-   result_mem_mult4[15] [63:0] $end
$var reg      64 :-   result_mem_mult4[16] [63:0] $end
$var reg      64 ;-   result_mem_mult4[17] [63:0] $end
$var reg      64 <-   result_mem_mult4[18] [63:0] $end
$var reg      64 =-   result_mem_mult4[19] [63:0] $end
$var reg      64 >-   result_mem_mult4[20] [63:0] $end
$var reg      64 ?-   result_mem_mult4[21] [63:0] $end
$var reg      64 @-   result_mem_mult4[22] [63:0] $end
$var reg      64 A-   result_mem_mult4[23] [63:0] $end
$var reg      64 B-   result_mem_mult4[24] [63:0] $end
$var reg      64 C-   result_mem_mult4[25] [63:0] $end
$var reg      64 D-   result_mem_mult4[26] [63:0] $end
$var reg      64 E-   result_mem_mult4[27] [63:0] $end
$var reg      64 F-   result_mem_mult4[28] [63:0] $end
$var reg      64 G-   result_mem_mult4[29] [63:0] $end
$var reg      64 H-   result_mem_mult4[30] [63:0] $end
$var reg      64 I-   result_mem_mult4[31] [63:0] $end
$var reg      64 J-   result_mem_mult4[32] [63:0] $end
$var reg      64 K-   result_mem_mult4[33] [63:0] $end
$var reg      64 L-   result_mem_mult4[34] [63:0] $end
$var reg      64 M-   result_mem_mult4[35] [63:0] $end
$var reg      64 N-   result_mem_mult4[36] [63:0] $end
$var reg      64 O-   result_mem_mult4[37] [63:0] $end
$var reg      64 P-   result_mem_mult4[38] [63:0] $end
$var reg      64 Q-   result_mem_mult4[39] [63:0] $end
$var reg      64 R-   result_mem_mult4[40] [63:0] $end
$var reg      64 S-   result_mem_mult4[41] [63:0] $end
$var reg      64 T-   result_mem_mult4[42] [63:0] $end
$var reg      64 U-   result_mem_mult4[43] [63:0] $end
$var reg      64 V-   result_mem_mult4[44] [63:0] $end
$var reg      64 W-   result_mem_mult4[45] [63:0] $end
$var reg      64 X-   result_mem_mult4[46] [63:0] $end
$upscope $end


$scope task cnt_and_wait $end
$var reg      32 Y-   stop_counter [31:0] $end
$var integer  32 Z-   cnt_cycles $end
$upscope $end


$scope task wait_for_STOP_instruction $end
$var integer  32 [-   counter_result $end
$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
b100 _+
b1000000 \+
b1000000 Z+
b1000 M+
b111 L+
b110 K+
b100 J+
b11 I+
b10 H+
b1 G+
b0 F+
b1000000 B+
b1000000 @+
b1000 >+
b1101 =+
b1001 <+
b1010 ;+
b10110 :+
b111 9+
b10000 8+
b0 7+
b1000 5+
b111 4+
b110 3+
b100 2+
b11 1+
b10 0+
b1 /+
b0 .+
b10 -+
b1 ,+
b0 ++
b100000 F*
b1000000 C*
b10 B*
b1 A*
b0 @*
b100011 ?*
b11 >*
b1101111 =*
b1100011 <*
b10011 ;*
b110011 :*
b1 b(
b1 a(
b0 `(
b10000000 _(
b111 ^(
b1000000 ](
b0 \(
b1 O(
b10000000 N(
b0 M(
b1010 J(
b1 {&
b1 z&
b0 y&
b10000000 x&
b111 w&
b100000 v&
b0 u&
b1 h&
b10000000 g&
b0 f&
b1001 `&
b0 \&
b1000000 [&
b1000000 Y&
b1000000 U&
b100 P&
b1000000 M&
b100011 L&
b11 K&
b1101111 J&
b1100011 I&
b10011 H&
b110011 G&
b10000000 x"
b10000000 2
b10000000 1
0!
0"
b0 #
0$
0%
b0 &
b0 '
0(
0)
b0 *
bx +
bx ,
0-
b110010 .
bx /
bx 0
bx 3
bx 4
bx 5
bx 6
bx 7
bx 8
bx 9
bx :
bx ;
bx <
bx =
bx >
bx ?
bx @
bx A
bx B
bx C
bx D
bx E
bx F
bx G
bx H
bx I
bx J
bx K
bx L
bx M
bx N
bx O
bx P
bx Q
bx R
bx S
bx T
bx U
bx V
bx W
bx X
bx Y
bx Z
bx [
bx \
bx ]
bx ^
bx _
bx `
bx a
bx b
bx c
bx d
bx e
bx f
bx g
bx h
bx i
bx j
bx k
bx l
bx m
bx n
bx o
bx p
bx q
bx r
bx s
bx t
bx u
bx v
bx w
bx x
bx y
bx z
bx {
bx |
bx }
bx ~
bx !!
bx "!
bx #!
bx $!
bx %!
bx &!
bx '!
bx (!
bx )!
bx *!
bx +!
bx ,!
bx -!
bx .!
bx /!
bx 0!
bx 1!
bx 2!
bx 3!
bx 4!
bx 5!
bx 6!
bx 7!
bx 8!
bx 9!
bx :!
bx ;!
bx <!
bx =!
bx >!
bx ?!
bx @!
bx A!
bx B!
bx C!
bx D!
bx E!
bx F!
bx G!
bx H!
bx I!
bx J!
bx K!
bx L!
bx M!
bx N!
bx O!
bx P!
bx Q!
bx R!
bx S!
bx T!
bx U!
bx V!
bx W!
bx X!
bx Y!
bx Z!
bx [!
bx \!
bx ]!
bx ^!
bx _!
bx `!
bx a!
bx b!
bx c!
bx d!
bx e!
bx f!
bx g!
bx h!
bx i!
bx j!
bx k!
bx l!
bx m!
bx n!
bx o!
bx p!
bx q!
bx r!
bx s!
bx t!
bx u!
bx v!
bx w!
bx x!
bx y!
bx z!
bx {!
bx |!
bx }!
bx ~!
bx !"
bx ""
bx #"
bx $"
bx %"
bx &"
bx '"
bx ("
bx )"
bx *"
bx +"
bx ,"
bx -"
bx ."
bx /"
bx 0"
bx 1"
bx 2"
bx 3"
bx 4"
bx 5"
bx 6"
bx 7"
bx 8"
bx 9"
bx :"
bx ;"
bx <"
bx ="
bx >"
bx ?"
bx @"
bx A"
bx B"
bx C"
bx D"
bx E"
bx F"
bx G"
bx H"
bx I"
bx J"
bx K"
bx L"
bx M"
bx N"
bx O"
bx P"
bx Q"
bx R"
bx S"
bx T"
bx U"
bx V"
bx W"
bx X"
bx Y"
bx Z"
bx ["
bx \"
bx ]"
bx ^"
bx _"
bx `"
bx a"
bx b"
bx c"
bx d"
bx e"
bx f"
bx g"
bx h"
bx i"
bx j"
bx k"
bx l"
bx m"
bx n"
bx o"
bx p"
bx q"
bx r"
bx s"
bx t"
bx u"
bx v"
bx w"
bx y"
bx z"
bx {"
bx |"
bx }"
bx ~"
bx !#
bx "#
bx ##
bx $#
bx %#
bx &#
bx '#
bx (#
bx )#
bx *#
bx +#
bx ,#
bx -#
bx .#
bx /#
bx 0#
bx 1#
bx 2#
bx 3#
bx 4#
bx 5#
bx 6#
bx 7#
bx 8#
bx 9#
bx :#
bx ;#
bx <#
bx =#
bx >#
bx ?#
bx @#
bx A#
bx B#
bx C#
bx D#
bx E#
bx F#
bx G#
bx H#
bx I#
bx J#
bx K#
bx L#
bx M#
bx N#
bx O#
bx P#
bx Q#
bx R#
bx S#
bx T#
bx U#
bx V#
bx W#
bx X#
bx Y#
bx Z#
bx [#
bx \#
bx ]#
bx ^#
bx _#
bx `#
bx a#
bx b#
bx c#
bx d#
bx e#
bx f#
bx g#
bx h#
bx i#
bx j#
bx k#
bx l#
bx m#
bx n#
bx o#
bx p#
bx q#
bx r#
bx s#
bx t#
bx u#
bx v#
bx w#
bx x#
bx y#
bx z#
bx {#
bx |#
bx }#
bx ~#
bx !$
bx "$
bx #$
bx $$
bx %$
bx &$
bx '$
bx ($
bx )$
bx *$
bx +$
bx ,$
bx -$
bx .$
bx /$
bx 0$
bx 1$
bx 2$
bx 3$
bx 4$
bx 5$
bx 6$
bx 7$
bx 8$
bx 9$
bx :$
bx ;$
bx <$
bx =$
bx >$
bx ?$
bx @$
bx A$
bx B$
bx C$
bx D$
bx E$
bx F$
bx G$
bx H$
bx I$
bx J$
bx K$
bx L$
bx M$
bx N$
bx O$
bx P$
bx Q$
bx R$
bx S$
bx T$
bx U$
bx V$
bx W$
bx X$
bx Y$
bx Z$
bx [$
bx \$
bx ]$
bx ^$
bx _$
bx `$
bx a$
bx b$
bx c$
bx d$
bx e$
bx f$
bx g$
bx h$
bx i$
bx j$
bx k$
bx l$
bx m$
bx n$
bx o$
bx p$
bx q$
bx r$
bx s$
bx t$
bx u$
bx v$
bx w$
bx x$
bx y$
bx z$
bx {$
bx |$
bx }$
bx ~$
bx !%
bx "%
bx #%
bx $%
bx %%
bx &%
bx '%
bx (%
bx )%
bx *%
bx +%
bx ,%
bx -%
bx .%
bx /%
bx 0%
bx 1%
bx 2%
bx 3%
bx 4%
bx 5%
bx 6%
bx 7%
bx 8%
bx 9%
bx :%
bx ;%
bx <%
bx =%
bx >%
bx ?%
bx @%
bx A%
bx B%
bx C%
bx D%
bx E%
bx F%
bx G%
bx H%
bx I%
bx J%
bx K%
bx L%
bx M%
bx N%
bx O%
bx P%
bx Q%
bx R%
bx S%
bx T%
bx U%
bx V%
bx W%
bx X%
bx Y%
bx Z%
bx [%
bx \%
bx ]%
bx ^%
0_%
0`%
0a%
b0 b%
0c%
0d%
b0 e%
b0 f%
0g%
0h%
b0 i%
xj%
bx k%
b100 l%
b0 m%
bx n%
xo%
xp%
xq%
xr%
xs%
xt%
xu%
xv%
xw%
xx%
xy%
xz%
x{%
x|%
x}%
x~%
x!&
x"&
x#&
x$&
x%&
x&&
x'&
x(&
x)&
x*&
x+&
x,&
x-&
x.&
x/&
x0&
bx 1&
bx 2&
x3&
x4&
x5&
x6&
x7&
x8&
x9&
x:&
bz ;&
bx <&
bx =&
bx >&
bx ?&
bx @&
bx A&
bx B&
bx C&
bx D&
bx E&
bx F&
b100 N&
b0 O&
bz Q&
b100 R&
b100 S&
xT&
b100 V&
xW&
b100 X&
b100 Z&
b0 ]&
b0 ^&
b0 _&
0a&
1b&
b0 c&
bx d&
bx e&
b0 i&
b0 j&
0k&
0l&
bx m&
bx n&
0o&
0p&
1q&
1r&
0s&
1t&
1|&
0}&
1~&
b0 !'
bx "'
1#'
1$'
1%'
b0 &'
bx ''
bx ('
bx )'
bx *'
bx +'
bx ,'
bx -'
bx .'
bx /'
bx 0'
bx 1'
bx 2'
bx 3'
bx 4'
bx 5'
bx 6'
bx 7'
bx 8'
bx 9'
bx :'
bx ;'
bx <'
bx ='
bx >'
bx ?'
bx @'
bx A'
bx B'
bx C'
bx D'
bx E'
bx F'
bx G'
bx H'
bx I'
bx J'
bx K'
bx L'
bx M'
bx N'
bx O'
bx P'
bx Q'
bx R'
bx S'
bx T'
bx U'
bx V'
bx W'
bx X'
bx Y'
bx Z'
bx ['
bx \'
bx ]'
bx ^'
bx _'
bx `'
bx a'
bx b'
bx c'
bx d'
bx e'
bx f'
bx g'
bx h'
bx i'
bx j'
bx k'
bx l'
bx m'
bx n'
bx o'
bx p'
bx q'
bx r'
bx s'
bx t'
bx u'
bx v'
bx w'
bx x'
bx y'
bx z'
bx {'
bx |'
bx }'
bx ~'
bx !(
bx "(
bx #(
bx $(
bx %(
bx &(
bx '(
bx ((
bx )(
bx *(
bx +(
bx ,(
bx -(
bx .(
bx /(
bx 0(
bx 1(
bx 2(
bx 3(
bx 4(
bx 5(
bx 6(
bx 7(
bx 8(
bx 9(
bx :(
bx ;(
bx <(
bx =(
bx >(
bx ?(
bx @(
bx A(
bx B(
bx C(
bx D(
bx E(
bx F(
bx G(
bx H(
bx I(
bx K(
bx L(
bx P(
b0 Q(
0R(
0S(
bx T(
bx U(
0V(
0W(
xX(
1Y(
xZ(
1[(
1c(
xd(
xe(
bx f(
bx g(
1h(
1i(
1j(
b0 k(
bx l(
bx m(
bx n(
bx o(
bx p(
bx q(
bx r(
bx s(
bx t(
bx u(
bx v(
bx w(
bx x(
bx y(
bx z(
bx {(
bx |(
bx }(
bx ~(
bx !)
bx ")
bx #)
bx $)
bx %)
bx &)
bx ')
bx ()
bx ))
bx *)
bx +)
bx ,)
bx -)
bx .)
bx /)
bx 0)
bx 1)
bx 2)
bx 3)
bx 4)
bx 5)
bx 6)
bx 7)
bx 8)
bx 9)
bx :)
bx ;)
bx <)
bx =)
bx >)
bx ?)
bx @)
bx A)
bx B)
bx C)
bx D)
bx E)
bx F)
bx G)
bx H)
bx I)
bx J)
bx K)
bx L)
bx M)
bx N)
bx O)
bx P)
bx Q)
bx R)
bx S)
bx T)
bx U)
bx V)
bx W)
bx X)
bx Y)
bx Z)
bx [)
bx \)
bx ])
bx ^)
bx _)
bx `)
bx a)
bx b)
bx c)
bx d)
bx e)
bx f)
bx g)
bx h)
bx i)
bx j)
bx k)
bx l)
bx m)
bx n)
bx o)
bx p)
bx q)
bx r)
bx s)
bx t)
bx u)
bx v)
bx w)
bx x)
bx y)
bx z)
bx {)
bx |)
bx })
bx ~)
bx !*
bx "*
bx #*
bx $*
bx %*
bx &*
bx '*
bx (*
bx )*
bx **
bx +*
bx ,*
bx -*
bx .*
bx /*
bx 0*
bx 1*
x2*
x3*
x4*
x5*
x6*
x7*
x8*
x9*
bx D*
bx E*
b0 G*
b0 H*
b0 I*
b0 J*
b0 K*
b0 L*
b0 M*
b0 N*
b0 O*
b0 P*
b0 Q*
b0 R*
b0 S*
b0 T*
b0 U*
b0 V*
b0 W*
b0 X*
b0 Y*
b0 Z*
b0 [*
b0 \*
b0 ]*
b0 ^*
b0 _*
b0 `*
b0 a*
b0 b*
b0 c*
b0 d*
b0 e*
b0 f*
b0 g*
b0 h*
b0 i*
b0 j*
b0 k*
b0 l*
b0 m*
b0 n*
b0 o*
b0 p*
b0 q*
b0 r*
b0 s*
b0 t*
b0 u*
b0 v*
b0 w*
b0 x*
b0 y*
b0 z*
b0 {*
b0 |*
b0 }*
b0 ~*
b0 !+
b0 "+
b0 #+
b0 $+
b0 %+
b0 &+
b0 '+
b0 (+
b100000 )+
bx *+
bx 6+
bx ?+
bx A+
bx C+
xD+
xE+
bx N+
bx O+
bx P+
bx Q+
bx R+
bx S+
bx T+
bx U+
bx V+
xW+
xX+
xY+
bx [+
bx ]+
bx ^+
bx `+
bx a+
bx b+
bx c+
bx d+
bx e+
bx f+
bx g+
bx h+
bx i+
bx j+
bx k+
bx l+
bx m+
bx n+
bx o+
bx p+
bx q+
bx r+
bx s+
bx t+
bx u+
bx v+
bx w+
bx x+
bx y+
bx z+
bx {+
bx |+
bx }+
bx ~+
bx !,
bx ",
bx #,
bx $,
bx %,
bx &,
bx ',
bx (,
bx ),
bx *,
bx +,
bx ,,
bx -,
bx .,
bx /,
bx 0,
bx 1,
bx 2,
bx 3,
bx 4,
bx 5,
bx 6,
bx 7,
bx 8,
bx 9,
bx :,
bx ;,
bx <,
bx =,
bx >,
bx ?,
bx @,
bx A,
bx B,
bx C,
bx D,
bx E,
bx F,
bx G,
bx H,
bx I,
bx J,
bx K,
bx L,
bx M,
bx N,
bx O,
bx P,
bx Q,
bx R,
bx S,
bx T,
bx U,
bx V,
bx W,
bx X,
bx Y,
bx Z,
bx [,
bx \,
bx ],
bx ^,
bx _,
bx `,
bx a,
bx b,
bx c,
bx d,
bx e,
bx f,
bx g,
bx h,
bx i,
bx j,
bx k,
bx l,
bx m,
bx n,
bx o,
bx p,
bx q,
bx r,
bx s,
bx t,
bx u,
bx v,
bx w,
bx x,
bx y,
bx z,
bx {,
bx |,
bx },
bx ~,
bx !-
bx "-
bx #-
bx $-
bx %-
bx &-
bx '-
bx (-
x)-
bx *-
bx +-
bx ,-
bx --
bx .-
bx /-
bx 0-
bx 1-
bx 2-
bx 3-
bx 4-
bx 5-
bx 6-
bx 7-
bx 8-
bx 9-
bx :-
bx ;-
bx <-
bx =-
bx >-
bx ?-
bx @-
bx A-
bx B-
bx C-
bx D-
bx E-
bx F-
bx G-
bx H-
bx I-
bx J-
bx K-
bx L-
bx M-
bx N-
bx O-
bx P-
bx Q-
bx R-
bx S-
bx T-
bx U-
bx V-
bx W-
bx X-
b1010 Y-
b0 Z-
bx [-
$end
#5000
1!
1_%
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
#10000
0!
b1 Z-
0_%
1#'
1|&
1h(
1c(
#15000
1!
1_%
0#'
0|&
0h(
0c(
#20000
0!
b10 Z-
0_%
1#'
1|&
1h(
1c(
#25000
1!
1_%
0#'
0|&
0h(
0c(
#30000
0!
b11 Z-
0_%
1#'
1|&
1h(
1c(
#35000
1!
1_%
0#'
0|&
0h(
0c(
#40000
0!
b100 Z-
0_%
1#'
1|&
1h(
1c(
#45000
1!
1_%
0#'
0|&
0h(
0c(
#50000
0!
b101 Z-
0_%
1#'
1|&
1h(
1c(
#55000
1!
1_%
0#'
0|&
0h(
0c(
#60000
0!
b110 Z-
0_%
1#'
1|&
1h(
1c(
#65000
1!
1_%
0#'
0|&
0h(
0c(
#70000
0!
b111 Z-
0_%
1#'
1|&
1h(
1c(
#75000
1!
1_%
0#'
0|&
0h(
0c(
#80000
0!
b1000 Z-
0_%
1#'
1|&
1h(
1c(
#85000
1!
1_%
0#'
0|&
0h(
0c(
#90000
0!
b1001 Z-
0_%
1#'
1|&
1h(
1c(
#95000
1!
1_%
0#'
0|&
0h(
0c(
#100000
0!
b1010 Z-
1"
b0 U!
b0 V!
b0 W!
b0 X!
b0 Y!
b0 Z!
b0 [!
b0 \!
b0 ]!
b0 ^!
b0 _!
b0 `!
b0 a!
b0 b!
b0 c!
b0 d!
b0 e!
b0 f!
b0 g!
b0 h!
b0 i!
b0 j!
b0 k!
b0 l!
b0 m!
b0 n!
b0 o!
b0 p!
b0 q!
b0 r!
b0 s!
b0 t!
b0 u!
b0 v!
b0 w!
b0 x!
b0 y!
b0 z!
b0 {!
b0 |!
b0 }!
b0 ~!
b0 !"
b0 ""
b0 #"
b0 $"
b0 %"
b0 &"
b0 '"
b0 ("
b0 )"
b0 *"
b0 +"
b0 ,"
b0 -"
b0 ."
b0 /"
b0 0"
b0 1"
b0 2"
b0 3"
b0 4"
b0 5"
b0 6"
b0 7"
b0 8"
b0 9"
b0 :"
b0 ;"
b0 <"
b0 ="
b0 >"
b0 ?"
b0 @"
b0 A"
b0 B"
b0 C"
b0 D"
b0 E"
b0 F"
b0 G"
b0 H"
b0 I"
b0 J"
b0 K"
b0 L"
b0 M"
b0 N"
b0 O"
b0 P"
b0 Q"
b0 R"
b0 S"
b0 T"
b0 U"
b0 V"
b0 W"
b0 X"
b0 Y"
b0 Z"
b0 ["
b0 \"
b0 ]"
b0 ^"
b0 _"
b0 `"
b0 a"
b0 b"
b0 c"
b0 d"
b0 e"
b0 f"
b0 g"
b0 h"
b0 i"
b0 j"
b0 k"
b0 l"
b0 m"
b0 n"
b0 o"
b0 p"
b0 q"
b0 r"
b0 s"
b0 t"
b0 u"
b0 v"
b10000000 0
b1 U!
b10 V!
b11 W!
b100 X!
b101 Y!
b110 Z!
b111 [!
b1000 \!
b1001 ]!
b1010 ^!
b0 Z-
1`%
0_%
1#'
1|&
1h(
1c(
#105000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
#110000
0!
b1 Z-
0_%
1#'
1|&
1h(
1c(
#115000
1!
1_%
0#'
0|&
0h(
0c(
#120000
0!
b10 Z-
0_%
1#'
1|&
1h(
1c(
#125000
1!
1_%
0#'
0|&
0h(
0c(
#130000
0!
b11 Z-
0_%
1#'
1|&
1h(
1c(
#135000
1!
1_%
0#'
0|&
0h(
0c(
#140000
0!
b100 Z-
0_%
1#'
1|&
1h(
1c(
#145000
1!
1_%
0#'
0|&
0h(
0c(
#150000
0!
b101 Z-
0_%
1#'
1|&
1h(
1c(
#155000
1!
1_%
0#'
0|&
0h(
0c(
#160000
0!
b110 Z-
0_%
1#'
1|&
1h(
1c(
#165000
1!
1_%
0#'
0|&
0h(
0c(
#170000
0!
b111 Z-
0_%
1#'
1|&
1h(
1c(
#175000
1!
1_%
0#'
0|&
0h(
0c(
#180000
0!
b1000 Z-
0_%
1#'
1|&
1h(
1c(
#185000
1!
1_%
0#'
0|&
0h(
0c(
#190000
0!
b1001 Z-
0_%
1#'
1|&
1h(
1c(
#195000
1!
1_%
0#'
0|&
0h(
0c(
#200000
0!
b1010 Z-
b0 0
1(
b1 *
b1 i%
1g%
0_%
0Y(
0[(
0i(
0j(
1#'
1|&
1h(
1c(
b1 m(
#205000
1!
b1 0
1_%
0#'
0|&
0h(
0c(
#210000
0!
b10 *
b1000 '
b1000 f%
b10 i%
0_%
b1 Q(
b1 k(
1#'
1|&
1h(
1c(
b10 n(
#215000
1!
b10 0
1_%
0#'
0|&
0h(
0c(
#220000
0!
b11 *
b10000 '
b10000 f%
b11 i%
0_%
b10 Q(
b10 k(
1#'
1|&
1h(
1c(
b11 o(
#225000
1!
b11 0
1_%
0#'
0|&
0h(
0c(
#230000
0!
b100 *
b11000 '
b11000 f%
b100 i%
0_%
b11 Q(
b11 k(
1#'
1|&
1h(
1c(
b100 p(
#235000
1!
b100 0
1_%
0#'
0|&
0h(
0c(
#240000
0!
b101 *
b100000 '
b100000 f%
b101 i%
0_%
b100 Q(
b100 k(
1#'
1|&
1h(
1c(
b101 q(
#245000
1!
b101 0
1_%
0#'
0|&
0h(
0c(
#250000
0!
b110 *
b101000 '
b101000 f%
b110 i%
0_%
b101 Q(
b101 k(
1#'
1|&
1h(
1c(
b110 r(
#255000
1!
b110 0
1_%
0#'
0|&
0h(
0c(
#260000
0!
b111 *
b110000 '
b110000 f%
b111 i%
0_%
b110 Q(
b110 k(
1#'
1|&
1h(
1c(
b111 s(
#265000
1!
b111 0
1_%
0#'
0|&
0h(
0c(
#270000
0!
b1000 *
b111000 '
b111000 f%
b1000 i%
0_%
b111 Q(
b111 k(
1#'
1|&
1h(
1c(
b1000 t(
#275000
1!
b1000 0
1_%
0#'
0|&
0h(
0c(
#280000
0!
b1001 *
b1000000 '
b1000000 f%
b1001 i%
0_%
b1000 Q(
b1000 k(
1#'
1|&
1h(
1c(
b1001 u(
#285000
1!
b1001 0
1_%
0#'
0|&
0h(
0c(
#290000
0!
b1010 *
b1001000 '
b1001000 f%
b1010 i%
0_%
b1001 Q(
b1001 k(
1#'
1|&
1h(
1c(
b1010 v(
#295000
1!
b1010 0
1_%
0#'
0|&
0h(
0c(
#300000
0!
b0 *
b1010000 '
b1010000 f%
b0 i%
0_%
b1010 Q(
b1010 k(
1#'
1|&
1h(
1c(
b0 w(
#305000
1!
b1011 0
1_%
0#'
0|&
0h(
0c(
#310000
0!
b1011000 '
b1011000 f%
0_%
b1011 Q(
b1011 k(
1#'
1|&
1h(
1c(
b0 x(
#315000
1!
b1100 0
1_%
0#'
0|&
0h(
0c(
#320000
0!
b1100000 '
b1100000 f%
0_%
b1100 Q(
b1100 k(
1#'
1|&
1h(
1c(
b0 y(
#325000
1!
b1101 0
1_%
0#'
0|&
0h(
0c(
#330000
0!
b1101000 '
b1101000 f%
0_%
b1101 Q(
b1101 k(
1#'
1|&
1h(
1c(
b0 z(
#335000
1!
b1110 0
1_%
0#'
0|&
0h(
0c(
#340000
0!
b1110000 '
b1110000 f%
0_%
b1110 Q(
b1110 k(
1#'
1|&
1h(
1c(
b0 {(
#345000
1!
b1111 0
1_%
0#'
0|&
0h(
0c(
#350000
0!
b1111000 '
b1111000 f%
0_%
b1111 Q(
b1111 k(
1#'
1|&
1h(
1c(
b0 |(
#355000
1!
b10000 0
1_%
0#'
0|&
0h(
0c(
#360000
0!
b10000000 '
b10000000 f%
0_%
b10000 Q(
b10000 k(
1#'
1|&
1h(
1c(
b0 }(
#365000
1!
b10001 0
1_%
0#'
0|&
0h(
0c(
#370000
0!
b10001000 '
b10001000 f%
0_%
b10001 Q(
b10001 k(
1#'
1|&
1h(
1c(
b0 ~(
#375000
1!
b10010 0
1_%
0#'
0|&
0h(
0c(
#380000
0!
b10010000 '
b10010000 f%
0_%
b10010 Q(
b10010 k(
1#'
1|&
1h(
1c(
b0 !)
#385000
1!
b10011 0
1_%
0#'
0|&
0h(
0c(
#390000
0!
b10011000 '
b10011000 f%
0_%
b10011 Q(
b10011 k(
1#'
1|&
1h(
1c(
b0 ")
#395000
1!
b10100 0
1_%
0#'
0|&
0h(
0c(
#400000
0!
b10100000 '
b10100000 f%
0_%
b10100 Q(
b10100 k(
1#'
1|&
1h(
1c(
b0 #)
#405000
1!
b10101 0
1_%
0#'
0|&
0h(
0c(
#410000
0!
b10101000 '
b10101000 f%
0_%
b10101 Q(
b10101 k(
1#'
1|&
1h(
1c(
b0 $)
#415000
1!
b10110 0
1_%
0#'
0|&
0h(
0c(
#420000
0!
b10110000 '
b10110000 f%
0_%
b10110 Q(
b10110 k(
1#'
1|&
1h(
1c(
b0 %)
#425000
1!
b10111 0
1_%
0#'
0|&
0h(
0c(
#430000
0!
b10111000 '
b10111000 f%
0_%
b10111 Q(
b10111 k(
1#'
1|&
1h(
1c(
b0 &)
#435000
1!
b11000 0
1_%
0#'
0|&
0h(
0c(
#440000
0!
b11000000 '
b11000000 f%
0_%
b11000 Q(
b11000 k(
1#'
1|&
1h(
1c(
b0 ')
#445000
1!
b11001 0
1_%
0#'
0|&
0h(
0c(
#450000
0!
b11001000 '
b11001000 f%
0_%
b11001 Q(
b11001 k(
1#'
1|&
1h(
1c(
b0 ()
#455000
1!
b11010 0
1_%
0#'
0|&
0h(
0c(
#460000
0!
b11010000 '
b11010000 f%
0_%
b11010 Q(
b11010 k(
1#'
1|&
1h(
1c(
b0 ))
#465000
1!
b11011 0
1_%
0#'
0|&
0h(
0c(
#470000
0!
b11011000 '
b11011000 f%
0_%
b11011 Q(
b11011 k(
1#'
1|&
1h(
1c(
b0 *)
#475000
1!
b11100 0
1_%
0#'
0|&
0h(
0c(
#480000
0!
b11100000 '
b11100000 f%
0_%
b11100 Q(
b11100 k(
1#'
1|&
1h(
1c(
b0 +)
#485000
1!
b11101 0
1_%
0#'
0|&
0h(
0c(
#490000
0!
b11101000 '
b11101000 f%
0_%
b11101 Q(
b11101 k(
1#'
1|&
1h(
1c(
b0 ,)
#495000
1!
b11110 0
1_%
0#'
0|&
0h(
0c(
#500000
0!
b11110000 '
b11110000 f%
0_%
b11110 Q(
b11110 k(
1#'
1|&
1h(
1c(
b0 -)
#505000
1!
b11111 0
1_%
0#'
0|&
0h(
0c(
#510000
0!
b11111000 '
b11111000 f%
0_%
b11111 Q(
b11111 k(
1#'
1|&
1h(
1c(
b0 .)
#515000
1!
b100000 0
1_%
0#'
0|&
0h(
0c(
#520000
0!
b100000000 '
b100000000 f%
0_%
b100000 Q(
b100000 k(
1#'
1|&
1h(
1c(
b0 /)
#525000
1!
b100001 0
1_%
0#'
0|&
0h(
0c(
#530000
0!
b100001000 '
b100001000 f%
0_%
b100001 Q(
b100001 k(
1#'
1|&
1h(
1c(
b0 0)
#535000
1!
b100010 0
1_%
0#'
0|&
0h(
0c(
#540000
0!
b100010000 '
b100010000 f%
0_%
b100010 Q(
b100010 k(
1#'
1|&
1h(
1c(
b0 1)
#545000
1!
b100011 0
1_%
0#'
0|&
0h(
0c(
#550000
0!
b100011000 '
b100011000 f%
0_%
b100011 Q(
b100011 k(
1#'
1|&
1h(
1c(
b0 2)
#555000
1!
b100100 0
1_%
0#'
0|&
0h(
0c(
#560000
0!
b100100000 '
b100100000 f%
0_%
b100100 Q(
b100100 k(
1#'
1|&
1h(
1c(
b0 3)
#565000
1!
b100101 0
1_%
0#'
0|&
0h(
0c(
#570000
0!
b100101000 '
b100101000 f%
0_%
b100101 Q(
b100101 k(
1#'
1|&
1h(
1c(
b0 4)
#575000
1!
b100110 0
1_%
0#'
0|&
0h(
0c(
#580000
0!
b100110000 '
b100110000 f%
0_%
b100110 Q(
b100110 k(
1#'
1|&
1h(
1c(
b0 5)
#585000
1!
b100111 0
1_%
0#'
0|&
0h(
0c(
#590000
0!
b100111000 '
b100111000 f%
0_%
b100111 Q(
b100111 k(
1#'
1|&
1h(
1c(
b0 6)
#595000
1!
b101000 0
1_%
0#'
0|&
0h(
0c(
#600000
0!
b101000000 '
b101000000 f%
0_%
b101000 Q(
b101000 k(
1#'
1|&
1h(
1c(
b0 7)
#605000
1!
b101001 0
1_%
0#'
0|&
0h(
0c(
#610000
0!
b101001000 '
b101001000 f%
0_%
b101001 Q(
b101001 k(
1#'
1|&
1h(
1c(
b0 8)
#615000
1!
b101010 0
1_%
0#'
0|&
0h(
0c(
#620000
0!
b101010000 '
b101010000 f%
0_%
b101010 Q(
b101010 k(
1#'
1|&
1h(
1c(
b0 9)
#625000
1!
b101011 0
1_%
0#'
0|&
0h(
0c(
#630000
0!
b101011000 '
b101011000 f%
0_%
b101011 Q(
b101011 k(
1#'
1|&
1h(
1c(
b0 :)
#635000
1!
b101100 0
1_%
0#'
0|&
0h(
0c(
#640000
0!
b101100000 '
b101100000 f%
0_%
b101100 Q(
b101100 k(
1#'
1|&
1h(
1c(
b0 ;)
#645000
1!
b101101 0
1_%
0#'
0|&
0h(
0c(
#650000
0!
b101101000 '
b101101000 f%
0_%
b101101 Q(
b101101 k(
1#'
1|&
1h(
1c(
b0 <)
#655000
1!
b101110 0
1_%
0#'
0|&
0h(
0c(
#660000
0!
b101110000 '
b101110000 f%
0_%
b101110 Q(
b101110 k(
1#'
1|&
1h(
1c(
b0 =)
#665000
1!
b101111 0
1_%
0#'
0|&
0h(
0c(
#670000
0!
b101111000 '
b101111000 f%
0_%
b101111 Q(
b101111 k(
1#'
1|&
1h(
1c(
b0 >)
#675000
1!
b110000 0
1_%
0#'
0|&
0h(
0c(
#680000
0!
b110000000 '
b110000000 f%
0_%
b110000 Q(
b110000 k(
1#'
1|&
1h(
1c(
b0 ?)
#685000
1!
b110001 0
1_%
0#'
0|&
0h(
0c(
#690000
0!
b110001000 '
b110001000 f%
0_%
b110001 Q(
b110001 k(
1#'
1|&
1h(
1c(
b0 @)
#695000
1!
b110010 0
1_%
0#'
0|&
0h(
0c(
#700000
0!
b110010000 '
b110010000 f%
0_%
b110010 Q(
b110010 k(
1#'
1|&
1h(
1c(
b0 A)
#705000
1!
b110011 0
1_%
0#'
0|&
0h(
0c(
#710000
0!
b110011000 '
b110011000 f%
0_%
b110011 Q(
b110011 k(
1#'
1|&
1h(
1c(
b0 B)
#715000
1!
b110100 0
1_%
0#'
0|&
0h(
0c(
#720000
0!
b110100000 '
b110100000 f%
0_%
b110100 Q(
b110100 k(
1#'
1|&
1h(
1c(
b0 C)
#725000
1!
b110101 0
1_%
0#'
0|&
0h(
0c(
#730000
0!
b110101000 '
b110101000 f%
0_%
b110101 Q(
b110101 k(
1#'
1|&
1h(
1c(
b0 D)
#735000
1!
b110110 0
1_%
0#'
0|&
0h(
0c(
#740000
0!
b110110000 '
b110110000 f%
0_%
b110110 Q(
b110110 k(
1#'
1|&
1h(
1c(
b0 E)
#745000
1!
b110111 0
1_%
0#'
0|&
0h(
0c(
#750000
0!
b110111000 '
b110111000 f%
0_%
b110111 Q(
b110111 k(
1#'
1|&
1h(
1c(
b0 F)
#755000
1!
b111000 0
1_%
0#'
0|&
0h(
0c(
#760000
0!
b111000000 '
b111000000 f%
0_%
b111000 Q(
b111000 k(
1#'
1|&
1h(
1c(
b0 G)
#765000
1!
b111001 0
1_%
0#'
0|&
0h(
0c(
#770000
0!
b111001000 '
b111001000 f%
0_%
b111001 Q(
b111001 k(
1#'
1|&
1h(
1c(
b0 H)
#775000
1!
b111010 0
1_%
0#'
0|&
0h(
0c(
#780000
0!
b111010000 '
b111010000 f%
0_%
b111010 Q(
b111010 k(
1#'
1|&
1h(
1c(
b0 I)
#785000
1!
b111011 0
1_%
0#'
0|&
0h(
0c(
#790000
0!
b111011000 '
b111011000 f%
0_%
b111011 Q(
b111011 k(
1#'
1|&
1h(
1c(
b0 J)
#795000
1!
b111100 0
1_%
0#'
0|&
0h(
0c(
#800000
0!
b111100000 '
b111100000 f%
0_%
b111100 Q(
b111100 k(
1#'
1|&
1h(
1c(
b0 K)
#805000
1!
b111101 0
1_%
0#'
0|&
0h(
0c(
#810000
0!
b111101000 '
b111101000 f%
0_%
b111101 Q(
b111101 k(
1#'
1|&
1h(
1c(
b0 L)
#815000
1!
b111110 0
1_%
0#'
0|&
0h(
0c(
#820000
0!
b111110000 '
b111110000 f%
0_%
b111110 Q(
b111110 k(
1#'
1|&
1h(
1c(
b0 M)
#825000
1!
b111111 0
1_%
0#'
0|&
0h(
0c(
#830000
0!
b111111000 '
b111111000 f%
0_%
b111111 Q(
b111111 k(
1#'
1|&
1h(
1c(
b0 N)
#835000
1!
b1000000 0
1_%
0#'
0|&
0h(
0c(
#840000
0!
b1000000000 '
b1000000000 f%
0_%
b1000000 Q(
b1000000 k(
1#'
1|&
1h(
1c(
b0 O)
#845000
1!
b1000001 0
1_%
0#'
0|&
0h(
0c(
#850000
0!
b1000001000 '
b1000001000 f%
0_%
b1000001 Q(
b1000001 k(
1#'
1|&
1h(
1c(
b0 P)
#855000
1!
b1000010 0
1_%
0#'
0|&
0h(
0c(
#860000
0!
b1000010000 '
b1000010000 f%
0_%
b1000010 Q(
b1000010 k(
1#'
1|&
1h(
1c(
b0 Q)
#865000
1!
b1000011 0
1_%
0#'
0|&
0h(
0c(
#870000
0!
b1000011000 '
b1000011000 f%
0_%
b1000011 Q(
b1000011 k(
1#'
1|&
1h(
1c(
b0 R)
#875000
1!
b1000100 0
1_%
0#'
0|&
0h(
0c(
#880000
0!
b1000100000 '
b1000100000 f%
0_%
b1000100 Q(
b1000100 k(
1#'
1|&
1h(
1c(
b0 S)
#885000
1!
b1000101 0
1_%
0#'
0|&
0h(
0c(
#890000
0!
b1000101000 '
b1000101000 f%
0_%
b1000101 Q(
b1000101 k(
1#'
1|&
1h(
1c(
b0 T)
#895000
1!
b1000110 0
1_%
0#'
0|&
0h(
0c(
#900000
0!
b1000110000 '
b1000110000 f%
0_%
b1000110 Q(
b1000110 k(
1#'
1|&
1h(
1c(
b0 U)
#905000
1!
b1000111 0
1_%
0#'
0|&
0h(
0c(
#910000
0!
b1000111000 '
b1000111000 f%
0_%
b1000111 Q(
b1000111 k(
1#'
1|&
1h(
1c(
b0 V)
#915000
1!
b1001000 0
1_%
0#'
0|&
0h(
0c(
#920000
0!
b1001000000 '
b1001000000 f%
0_%
b1001000 Q(
b1001000 k(
1#'
1|&
1h(
1c(
b0 W)
#925000
1!
b1001001 0
1_%
0#'
0|&
0h(
0c(
#930000
0!
b1001001000 '
b1001001000 f%
0_%
b1001001 Q(
b1001001 k(
1#'
1|&
1h(
1c(
b0 X)
#935000
1!
b1001010 0
1_%
0#'
0|&
0h(
0c(
#940000
0!
b1001010000 '
b1001010000 f%
0_%
b1001010 Q(
b1001010 k(
1#'
1|&
1h(
1c(
b0 Y)
#945000
1!
b1001011 0
1_%
0#'
0|&
0h(
0c(
#950000
0!
b1001011000 '
b1001011000 f%
0_%
b1001011 Q(
b1001011 k(
1#'
1|&
1h(
1c(
b0 Z)
#955000
1!
b1001100 0
1_%
0#'
0|&
0h(
0c(
#960000
0!
b1001100000 '
b1001100000 f%
0_%
b1001100 Q(
b1001100 k(
1#'
1|&
1h(
1c(
b0 [)
#965000
1!
b1001101 0
1_%
0#'
0|&
0h(
0c(
#970000
0!
b1001101000 '
b1001101000 f%
0_%
b1001101 Q(
b1001101 k(
1#'
1|&
1h(
1c(
b0 \)
#975000
1!
b1001110 0
1_%
0#'
0|&
0h(
0c(
#980000
0!
b1001110000 '
b1001110000 f%
0_%
b1001110 Q(
b1001110 k(
1#'
1|&
1h(
1c(
b0 ])
#985000
1!
b1001111 0
1_%
0#'
0|&
0h(
0c(
#990000
0!
b1001111000 '
b1001111000 f%
0_%
b1001111 Q(
b1001111 k(
1#'
1|&
1h(
1c(
b0 ^)
#995000
1!
b1010000 0
1_%
0#'
0|&
0h(
0c(
#1000000
0!
b1010000000 '
b1010000000 f%
0_%
b1010000 Q(
b1010000 k(
1#'
1|&
1h(
1c(
b0 _)
#1005000
1!
b1010001 0
1_%
0#'
0|&
0h(
0c(
#1010000
0!
b1010001000 '
b1010001000 f%
0_%
b1010001 Q(
b1010001 k(
1#'
1|&
1h(
1c(
b0 `)
#1015000
1!
b1010010 0
1_%
0#'
0|&
0h(
0c(
#1020000
0!
b1010010000 '
b1010010000 f%
0_%
b1010010 Q(
b1010010 k(
1#'
1|&
1h(
1c(
b0 a)
#1025000
1!
b1010011 0
1_%
0#'
0|&
0h(
0c(
#1030000
0!
b1010011000 '
b1010011000 f%
0_%
b1010011 Q(
b1010011 k(
1#'
1|&
1h(
1c(
b0 b)
#1035000
1!
b1010100 0
1_%
0#'
0|&
0h(
0c(
#1040000
0!
b1010100000 '
b1010100000 f%
0_%
b1010100 Q(
b1010100 k(
1#'
1|&
1h(
1c(
b0 c)
#1045000
1!
b1010101 0
1_%
0#'
0|&
0h(
0c(
#1050000
0!
b1010101000 '
b1010101000 f%
0_%
b1010101 Q(
b1010101 k(
1#'
1|&
1h(
1c(
b0 d)
#1055000
1!
b1010110 0
1_%
0#'
0|&
0h(
0c(
#1060000
0!
b1010110000 '
b1010110000 f%
0_%
b1010110 Q(
b1010110 k(
1#'
1|&
1h(
1c(
b0 e)
#1065000
1!
b1010111 0
1_%
0#'
0|&
0h(
0c(
#1070000
0!
b1010111000 '
b1010111000 f%
0_%
b1010111 Q(
b1010111 k(
1#'
1|&
1h(
1c(
b0 f)
#1075000
1!
b1011000 0
1_%
0#'
0|&
0h(
0c(
#1080000
0!
b1011000000 '
b1011000000 f%
0_%
b1011000 Q(
b1011000 k(
1#'
1|&
1h(
1c(
b0 g)
#1085000
1!
b1011001 0
1_%
0#'
0|&
0h(
0c(
#1090000
0!
b1011001000 '
b1011001000 f%
0_%
b1011001 Q(
b1011001 k(
1#'
1|&
1h(
1c(
b0 h)
#1095000
1!
b1011010 0
1_%
0#'
0|&
0h(
0c(
#1100000
0!
b1011010000 '
b1011010000 f%
0_%
b1011010 Q(
b1011010 k(
1#'
1|&
1h(
1c(
b0 i)
#1105000
1!
b1011011 0
1_%
0#'
0|&
0h(
0c(
#1110000
0!
b1011011000 '
b1011011000 f%
0_%
b1011011 Q(
b1011011 k(
1#'
1|&
1h(
1c(
b0 j)
#1115000
1!
b1011100 0
1_%
0#'
0|&
0h(
0c(
#1120000
0!
b1011100000 '
b1011100000 f%
0_%
b1011100 Q(
b1011100 k(
1#'
1|&
1h(
1c(
b0 k)
#1125000
1!
b1011101 0
1_%
0#'
0|&
0h(
0c(
#1130000
0!
b1011101000 '
b1011101000 f%
0_%
b1011101 Q(
b1011101 k(
1#'
1|&
1h(
1c(
b0 l)
#1135000
1!
b1011110 0
1_%
0#'
0|&
0h(
0c(
#1140000
0!
b1011110000 '
b1011110000 f%
0_%
b1011110 Q(
b1011110 k(
1#'
1|&
1h(
1c(
b0 m)
#1145000
1!
b1011111 0
1_%
0#'
0|&
0h(
0c(
#1150000
0!
b1011111000 '
b1011111000 f%
0_%
b1011111 Q(
b1011111 k(
1#'
1|&
1h(
1c(
b0 n)
#1155000
1!
b1100000 0
1_%
0#'
0|&
0h(
0c(
#1160000
0!
b1100000000 '
b1100000000 f%
0_%
b1100000 Q(
b1100000 k(
1#'
1|&
1h(
1c(
b0 o)
#1165000
1!
b1100001 0
1_%
0#'
0|&
0h(
0c(
#1170000
0!
b1100001000 '
b1100001000 f%
0_%
b1100001 Q(
b1100001 k(
1#'
1|&
1h(
1c(
b0 p)
#1175000
1!
b1100010 0
1_%
0#'
0|&
0h(
0c(
#1180000
0!
b1100010000 '
b1100010000 f%
0_%
b1100010 Q(
b1100010 k(
1#'
1|&
1h(
1c(
b0 q)
#1185000
1!
b1100011 0
1_%
0#'
0|&
0h(
0c(
#1190000
0!
b1100011000 '
b1100011000 f%
0_%
b1100011 Q(
b1100011 k(
1#'
1|&
1h(
1c(
b0 r)
#1195000
1!
b1100100 0
1_%
0#'
0|&
0h(
0c(
#1200000
0!
b1100100000 '
b1100100000 f%
0_%
b1100100 Q(
b1100100 k(
1#'
1|&
1h(
1c(
b0 s)
#1205000
1!
b1100101 0
1_%
0#'
0|&
0h(
0c(
#1210000
0!
b1100101000 '
b1100101000 f%
0_%
b1100101 Q(
b1100101 k(
1#'
1|&
1h(
1c(
b0 t)
#1215000
1!
b1100110 0
1_%
0#'
0|&
0h(
0c(
#1220000
0!
b1100110000 '
b1100110000 f%
0_%
b1100110 Q(
b1100110 k(
1#'
1|&
1h(
1c(
b0 u)
#1225000
1!
b1100111 0
1_%
0#'
0|&
0h(
0c(
#1230000
0!
b1100111000 '
b1100111000 f%
0_%
b1100111 Q(
b1100111 k(
1#'
1|&
1h(
1c(
b0 v)
#1235000
1!
b1101000 0
1_%
0#'
0|&
0h(
0c(
#1240000
0!
b1101000000 '
b1101000000 f%
0_%
b1101000 Q(
b1101000 k(
1#'
1|&
1h(
1c(
b0 w)
#1245000
1!
b1101001 0
1_%
0#'
0|&
0h(
0c(
#1250000
0!
b1101001000 '
b1101001000 f%
0_%
b1101001 Q(
b1101001 k(
1#'
1|&
1h(
1c(
b0 x)
#1255000
1!
b1101010 0
1_%
0#'
0|&
0h(
0c(
#1260000
0!
b1101010000 '
b1101010000 f%
0_%
b1101010 Q(
b1101010 k(
1#'
1|&
1h(
1c(
b0 y)
#1265000
1!
b1101011 0
1_%
0#'
0|&
0h(
0c(
#1270000
0!
b1101011000 '
b1101011000 f%
0_%
b1101011 Q(
b1101011 k(
1#'
1|&
1h(
1c(
b0 z)
#1275000
1!
b1101100 0
1_%
0#'
0|&
0h(
0c(
#1280000
0!
b1101100000 '
b1101100000 f%
0_%
b1101100 Q(
b1101100 k(
1#'
1|&
1h(
1c(
b0 {)
#1285000
1!
b1101101 0
1_%
0#'
0|&
0h(
0c(
#1290000
0!
b1101101000 '
b1101101000 f%
0_%
b1101101 Q(
b1101101 k(
1#'
1|&
1h(
1c(
b0 |)
#1295000
1!
b1101110 0
1_%
0#'
0|&
0h(
0c(
#1300000
0!
b1101110000 '
b1101110000 f%
0_%
b1101110 Q(
b1101110 k(
1#'
1|&
1h(
1c(
b0 })
#1305000
1!
b1101111 0
1_%
0#'
0|&
0h(
0c(
#1310000
0!
b1101111000 '
b1101111000 f%
0_%
b1101111 Q(
b1101111 k(
1#'
1|&
1h(
1c(
b0 ~)
#1315000
1!
b1110000 0
1_%
0#'
0|&
0h(
0c(
#1320000
0!
b1110000000 '
b1110000000 f%
0_%
b1110000 Q(
b1110000 k(
1#'
1|&
1h(
1c(
b0 !*
#1325000
1!
b1110001 0
1_%
0#'
0|&
0h(
0c(
#1330000
0!
b1110001000 '
b1110001000 f%
0_%
b1110001 Q(
b1110001 k(
1#'
1|&
1h(
1c(
b0 "*
#1335000
1!
b1110010 0
1_%
0#'
0|&
0h(
0c(
#1340000
0!
b1110010000 '
b1110010000 f%
0_%
b1110010 Q(
b1110010 k(
1#'
1|&
1h(
1c(
b0 #*
#1345000
1!
b1110011 0
1_%
0#'
0|&
0h(
0c(
#1350000
0!
b1110011000 '
b1110011000 f%
0_%
b1110011 Q(
b1110011 k(
1#'
1|&
1h(
1c(
b0 $*
#1355000
1!
b1110100 0
1_%
0#'
0|&
0h(
0c(
#1360000
0!
b1110100000 '
b1110100000 f%
0_%
b1110100 Q(
b1110100 k(
1#'
1|&
1h(
1c(
b0 %*
#1365000
1!
b1110101 0
1_%
0#'
0|&
0h(
0c(
#1370000
0!
b1110101000 '
b1110101000 f%
0_%
b1110101 Q(
b1110101 k(
1#'
1|&
1h(
1c(
b0 &*
#1375000
1!
b1110110 0
1_%
0#'
0|&
0h(
0c(
#1380000
0!
b1110110000 '
b1110110000 f%
0_%
b1110110 Q(
b1110110 k(
1#'
1|&
1h(
1c(
b0 '*
#1385000
1!
b1110111 0
1_%
0#'
0|&
0h(
0c(
#1390000
0!
b1110111000 '
b1110111000 f%
0_%
b1110111 Q(
b1110111 k(
1#'
1|&
1h(
1c(
b0 (*
#1395000
1!
b1111000 0
1_%
0#'
0|&
0h(
0c(
#1400000
0!
b1111000000 '
b1111000000 f%
0_%
b1111000 Q(
b1111000 k(
1#'
1|&
1h(
1c(
b0 )*
#1405000
1!
b1111001 0
1_%
0#'
0|&
0h(
0c(
#1410000
0!
b1111001000 '
b1111001000 f%
0_%
b1111001 Q(
b1111001 k(
1#'
1|&
1h(
1c(
b0 **
#1415000
1!
b1111010 0
1_%
0#'
0|&
0h(
0c(
#1420000
0!
b1111010000 '
b1111010000 f%
0_%
b1111010 Q(
b1111010 k(
1#'
1|&
1h(
1c(
b0 +*
#1425000
1!
b1111011 0
1_%
0#'
0|&
0h(
0c(
#1430000
0!
b1111011000 '
b1111011000 f%
0_%
b1111011 Q(
b1111011 k(
1#'
1|&
1h(
1c(
b0 ,*
#1435000
1!
b1111100 0
1_%
0#'
0|&
0h(
0c(
#1440000
0!
b1111100000 '
b1111100000 f%
0_%
b1111100 Q(
b1111100 k(
1#'
1|&
1h(
1c(
b0 -*
#1445000
1!
b1111101 0
1_%
0#'
0|&
0h(
0c(
#1450000
0!
b1111101000 '
b1111101000 f%
0_%
b1111101 Q(
b1111101 k(
1#'
1|&
1h(
1c(
b0 .*
#1455000
1!
b1111110 0
1_%
0#'
0|&
0h(
0c(
#1460000
0!
b1111110000 '
b1111110000 f%
0_%
b1111110 Q(
b1111110 k(
1#'
1|&
1h(
1c(
b0 /*
#1465000
1!
b1111111 0
1_%
0#'
0|&
0h(
0c(
#1470000
0!
b1111111000 '
b1111111000 f%
0_%
b1111111 Q(
b1111111 k(
1#'
1|&
1h(
1c(
b0 0*
#1475000
1!
b10000000 0
0(
b0 '
b0 3
b0 4
b0 5
b0 6
b0 7
b0 8
b0 9
b0 :
b0 ;
b0 <
b0 =
b0 >
b0 ?
b0 @
b0 A
b0 B
b0 C
b0 D
b0 E
b0 F
b0 G
b0 H
b0 I
b0 J
b0 K
b0 L
b0 M
b0 N
b0 O
b0 P
b0 Q
b0 R
b0 S
b0 T
b0 U
b0 V
b0 W
b0 X
b0 Y
b0 Z
b0 [
b0 \
b0 ]
b0 ^
b0 _
b0 `
b0 a
b0 b
b0 c
b0 d
b0 e
b0 f
b0 g
b0 h
b0 i
b0 j
b0 k
b0 l
b0 m
b0 n
b0 o
b0 p
b0 q
b0 r
b0 s
b0 t
b0 u
b0 v
b0 w
b0 x
b0 y
b0 z
b0 {
b0 |
b0 }
b0 ~
b0 !!
b0 "!
b0 #!
b0 $!
b0 %!
b0 &!
b0 '!
b0 (!
b0 )!
b0 *!
b0 +!
b0 ,!
b0 -!
b0 .!
b0 /!
b0 0!
b0 1!
b0 2!
b0 3!
b0 4!
b0 5!
b0 6!
b0 7!
b0 8!
b0 9!
b0 :!
b0 ;!
b0 <!
b0 =!
b0 >!
b0 ?!
b0 @!
b0 A!
b0 B!
b0 C!
b0 D!
b0 E!
b0 F!
b0 G!
b0 H!
b0 I!
b0 J!
b0 K!
b0 L!
b0 M!
b0 N!
b0 O!
b0 P!
b0 Q!
b0 R!
b0 S!
b0 T!
b10000000 /
b11010000000011 3
b100000000011010010000011 4
b1000000000011010100000011 5
b1100000000011010110000011 6
b10000000000011011000000011 7
b10100000000011011010000011 8
b11000000000011011100000011 9
b11100000000011011110000011 :
b100000000000011100000000011 ;
b100100000000011100010000011 <
b10100101000000100100110011 =
b10101101010000100110110011 >
b10110101100000101000110011 ?
b10111101110000101010110011 @
b11000110000000101100110011 A
b101110010011 B
b10011 C
b10011 D
b10011 E
b1001010111000101110110011 F
b10011 G
b10011 H
b10011 I
b1001110111000101110110011 J
b10011 K
b10011 L
b10011 M
b1010010111000101110110011 N
b10011 O
b10011 P
b10011 Q
b1010110111000101110110011 R
b10011 S
b10011 T
b10011 U
b1011010111000101110110011 V
b10011 W
b10011 X
b10011 Y
b10011 Z
b100000000000000000000001111110 [
b0 Z-
b0 f%
0g%
1_%
b0 Q(
1Y(
1[(
1i(
1j(
b0 k(
0#'
0|&
0h(
0c(
#1480000
0!
b1 Z-
0_%
1#'
1|&
1h(
1c(
#1485000
1!
1_%
0#'
0|&
0h(
0c(
#1490000
0!
b10 Z-
0_%
1#'
1|&
1h(
1c(
#1495000
1!
1_%
0#'
0|&
0h(
0c(
#1500000
0!
b11 Z-
0_%
1#'
1|&
1h(
1c(
#1505000
1!
1_%
0#'
0|&
0h(
0c(
#1510000
0!
b100 Z-
0_%
1#'
1|&
1h(
1c(
#1515000
1!
1_%
0#'
0|&
0h(
0c(
#1520000
0!
b101 Z-
0_%
1#'
1|&
1h(
1c(
#1525000
1!
1_%
0#'
0|&
0h(
0c(
#1530000
0!
b110 Z-
0_%
1#'
1|&
1h(
1c(
#1535000
1!
1_%
0#'
0|&
0h(
0c(
#1540000
0!
b111 Z-
0_%
1#'
1|&
1h(
1c(
#1545000
1!
1_%
0#'
0|&
0h(
0c(
#1550000
0!
b1000 Z-
0_%
1#'
1|&
1h(
1c(
#1555000
1!
1_%
0#'
0|&
0h(
0c(
#1560000
0!
b1001 Z-
0_%
1#'
1|&
1h(
1c(
#1565000
1!
1_%
0#'
0|&
0h(
0c(
#1570000
0!
b1010 Z-
b0 /
1$
b11010000000011 &
b11010000000011 e%
1c%
0_%
0r&
0t&
0$'
0%'
1#'
1|&
1h(
1c(
b11010000000011 ('
b11010000000011 "'
b11010000000011 m&
b11010000000011 d&
0o%
0p%
0q%
0r%
0s%
0t%
0u%
0v%
0w%
0x%
0y%
0z%
0{%
0|%
0}%
0~%
0!&
0"&
1#&
1$&
0%&
1&&
0'&
0(&
0)&
0*&
0+&
0,&
0-&
0.&
1/&
10&
b0 D*
b0 E*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
17*
15*
18*
14*
06*
03*
b0 1*
09*
b11 E&
0:&
b0 1&
04&
07&
15&
19&
16&
18&
b0 @&
b0 ?&
b11 6+
b1101000 D&
b0 C&
b10 *+
0T&
1X(
0Z(
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
bx o*
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0X+
0W+
b0 P+
b0x S+
0Y+
b0 ?+
0E+
b0 C+
1D+
1j%
b0 >&
0d(
1e(
0W&
b10 2&
b0 B&
b0 P(
bx C+
b0 ]+
b0 ^+
b0 A+
0D+
0j%
b0 f(
b0 A&
b0 n%
b0 k%
bx >&
b1 g(
b0 O+
b0 T+
b0 U+
b0 N+
b0 Q+
b0 S+
b0 V+
1Y+
bx P(
b0 C+
1D+
1j%
bx f(
b0 >&
b1 T(
bx g(
b0 P(
b1 K(
b0 f(
b1 =&
bx T(
b1 g(
b1 [+
bx K(
bx =&
b1 <&
b1 T(
bx [+
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1 o*
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b1 K(
b1 =&
bx <&
b1 [+
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
bx o*
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b1 <&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1 o*
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#1575000
1!
b1 /
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b1 O*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#1580000
0!
b100000000011010010000011 &
b100 #
b100 b%
b100000000011010010000011 e%
0_%
b1 j&
b1 &'
1#'
1|&
1h(
1c(
b100000000011010010000011 )'
#1585000
1!
b10 /
1_%
0#'
0|&
0h(
0c(
#1590000
0!
b1000000000011010100000011 &
b1000 #
b1000 b%
b1000000000011010100000011 e%
0_%
b10 j&
b10 &'
1#'
1|&
1h(
1c(
b1000000000011010100000011 *'
#1595000
1!
b11 /
1_%
0#'
0|&
0h(
0c(
#1600000
0!
b1100000000011010110000011 &
b1100 #
b1100 b%
b1100000000011010110000011 e%
0_%
b11 j&
b11 &'
1#'
1|&
1h(
1c(
b1100000000011010110000011 +'
#1605000
1!
b100 /
1_%
0#'
0|&
0h(
0c(
#1610000
0!
b10000000000011011000000011 &
b10000 #
b10000 b%
b10000000000011011000000011 e%
0_%
b100 j&
b100 &'
1#'
1|&
1h(
1c(
b10000000000011011000000011 ,'
#1615000
1!
b101 /
1_%
0#'
0|&
0h(
0c(
#1620000
0!
b10100000000011011010000011 &
b10100 #
b10100 b%
b10100000000011011010000011 e%
0_%
b101 j&
b101 &'
1#'
1|&
1h(
1c(
b10100000000011011010000011 -'
#1625000
1!
b110 /
1_%
0#'
0|&
0h(
0c(
#1630000
0!
b11000000000011011100000011 &
b11000 #
b11000 b%
b11000000000011011100000011 e%
0_%
b110 j&
b110 &'
1#'
1|&
1h(
1c(
b11000000000011011100000011 .'
#1635000
1!
b111 /
1_%
0#'
0|&
0h(
0c(
#1640000
0!
b11100000000011011110000011 &
b11100 #
b11100 b%
b11100000000011011110000011 e%
0_%
b111 j&
b111 &'
1#'
1|&
1h(
1c(
b11100000000011011110000011 /'
#1645000
1!
b1000 /
1_%
0#'
0|&
0h(
0c(
#1650000
0!
b100000000000011100000000011 &
b100000 #
b100000 b%
b100000000000011100000000011 e%
0_%
b1000 j&
b1000 &'
1#'
1|&
1h(
1c(
b100000000000011100000000011 0'
#1655000
1!
b1001 /
1_%
0#'
0|&
0h(
0c(
#1660000
0!
b100100000000011100010000011 &
b100100 #
b100100 b%
b100100000000011100010000011 e%
0_%
b1001 j&
b1001 &'
1#'
1|&
1h(
1c(
b100100000000011100010000011 1'
#1665000
1!
b1010 /
1_%
0#'
0|&
0h(
0c(
#1670000
0!
b10100101000000100100110011 &
b101000 #
b101000 b%
b10100101000000100100110011 e%
0_%
b1010 j&
b1010 &'
1#'
1|&
1h(
1c(
b10100101000000100100110011 2'
#1675000
1!
b1011 /
1_%
0#'
0|&
0h(
0c(
#1680000
0!
b10101101010000100110110011 &
b101100 #
b101100 b%
b10101101010000100110110011 e%
0_%
b1011 j&
b1011 &'
1#'
1|&
1h(
1c(
b10101101010000100110110011 3'
#1685000
1!
b1100 /
1_%
0#'
0|&
0h(
0c(
#1690000
0!
b10110101100000101000110011 &
b110000 #
b110000 b%
b10110101100000101000110011 e%
0_%
b1100 j&
b1100 &'
1#'
1|&
1h(
1c(
b10110101100000101000110011 4'
#1695000
1!
b1101 /
1_%
0#'
0|&
0h(
0c(
#1700000
0!
b10111101110000101010110011 &
b110100 #
b110100 b%
b10111101110000101010110011 e%
0_%
b1101 j&
b1101 &'
1#'
1|&
1h(
1c(
b10111101110000101010110011 5'
#1705000
1!
b1110 /
1_%
0#'
0|&
0h(
0c(
#1710000
0!
b11000110000000101100110011 &
b111000 #
b111000 b%
b11000110000000101100110011 e%
0_%
b1110 j&
b1110 &'
1#'
1|&
1h(
1c(
b11000110000000101100110011 6'
#1715000
1!
b1111 /
1_%
0#'
0|&
0h(
0c(
#1720000
0!
b101110010011 &
b111100 #
b111100 b%
b101110010011 e%
0_%
b1111 j&
b1111 &'
1#'
1|&
1h(
1c(
b101110010011 7'
#1725000
1!
b10000 /
1_%
0#'
0|&
0h(
0c(
#1730000
0!
b10011 &
b1000000 #
b1000000 b%
b10011 e%
0_%
b10000 j&
b10000 &'
1#'
1|&
1h(
1c(
b10011 8'
#1735000
1!
b10001 /
1_%
0#'
0|&
0h(
0c(
#1740000
0!
b1000100 #
b1000100 b%
0_%
b10001 j&
b10001 &'
1#'
1|&
1h(
1c(
b10011 9'
#1745000
1!
b10010 /
1_%
0#'
0|&
0h(
0c(
#1750000
0!
b1001000 #
b1001000 b%
0_%
b10010 j&
b10010 &'
1#'
1|&
1h(
1c(
b10011 :'
#1755000
1!
b10011 /
1_%
0#'
0|&
0h(
0c(
#1760000
0!
b1001010111000101110110011 &
b1001100 #
b1001100 b%
b1001010111000101110110011 e%
0_%
b10011 j&
b10011 &'
1#'
1|&
1h(
1c(
b1001010111000101110110011 ;'
#1765000
1!
b10100 /
1_%
0#'
0|&
0h(
0c(
#1770000
0!
b10011 &
b1010000 #
b1010000 b%
b10011 e%
0_%
b10100 j&
b10100 &'
1#'
1|&
1h(
1c(
b10011 <'
#1775000
1!
b10101 /
1_%
0#'
0|&
0h(
0c(
#1780000
0!
b1010100 #
b1010100 b%
0_%
b10101 j&
b10101 &'
1#'
1|&
1h(
1c(
b10011 ='
#1785000
1!
b10110 /
1_%
0#'
0|&
0h(
0c(
#1790000
0!
b1011000 #
b1011000 b%
0_%
b10110 j&
b10110 &'
1#'
1|&
1h(
1c(
b10011 >'
#1795000
1!
b10111 /
1_%
0#'
0|&
0h(
0c(
#1800000
0!
b1001110111000101110110011 &
b1011100 #
b1011100 b%
b1001110111000101110110011 e%
0_%
b10111 j&
b10111 &'
1#'
1|&
1h(
1c(
b1001110111000101110110011 ?'
#1805000
1!
b11000 /
1_%
0#'
0|&
0h(
0c(
#1810000
0!
b10011 &
b1100000 #
b1100000 b%
b10011 e%
0_%
b11000 j&
b11000 &'
1#'
1|&
1h(
1c(
b10011 @'
#1815000
1!
b11001 /
1_%
0#'
0|&
0h(
0c(
#1820000
0!
b1100100 #
b1100100 b%
0_%
b11001 j&
b11001 &'
1#'
1|&
1h(
1c(
b10011 A'
#1825000
1!
b11010 /
1_%
0#'
0|&
0h(
0c(
#1830000
0!
b1101000 #
b1101000 b%
0_%
b11010 j&
b11010 &'
1#'
1|&
1h(
1c(
b10011 B'
#1835000
1!
b11011 /
1_%
0#'
0|&
0h(
0c(
#1840000
0!
b1010010111000101110110011 &
b1101100 #
b1101100 b%
b1010010111000101110110011 e%
0_%
b11011 j&
b11011 &'
1#'
1|&
1h(
1c(
b1010010111000101110110011 C'
#1845000
1!
b11100 /
1_%
0#'
0|&
0h(
0c(
#1850000
0!
b10011 &
b1110000 #
b1110000 b%
b10011 e%
0_%
b11100 j&
b11100 &'
1#'
1|&
1h(
1c(
b10011 D'
#1855000
1!
b11101 /
1_%
0#'
0|&
0h(
0c(
#1860000
0!
b1110100 #
b1110100 b%
0_%
b11101 j&
b11101 &'
1#'
1|&
1h(
1c(
b10011 E'
#1865000
1!
b11110 /
1_%
0#'
0|&
0h(
0c(
#1870000
0!
b1111000 #
b1111000 b%
0_%
b11110 j&
b11110 &'
1#'
1|&
1h(
1c(
b10011 F'
#1875000
1!
b11111 /
1_%
0#'
0|&
0h(
0c(
#1880000
0!
b1010110111000101110110011 &
b1111100 #
b1111100 b%
b1010110111000101110110011 e%
0_%
b11111 j&
b11111 &'
1#'
1|&
1h(
1c(
b1010110111000101110110011 G'
#1885000
1!
b100000 /
1_%
0#'
0|&
0h(
0c(
#1890000
0!
b10011 &
b10000000 #
b10000000 b%
b10011 e%
0_%
b100000 j&
b100000 &'
1#'
1|&
1h(
1c(
b10011 H'
#1895000
1!
b100001 /
1_%
0#'
0|&
0h(
0c(
#1900000
0!
b10000100 #
b10000100 b%
0_%
b100001 j&
b100001 &'
1#'
1|&
1h(
1c(
b10011 I'
#1905000
1!
b100010 /
1_%
0#'
0|&
0h(
0c(
#1910000
0!
b10001000 #
b10001000 b%
0_%
b100010 j&
b100010 &'
1#'
1|&
1h(
1c(
b10011 J'
#1915000
1!
b100011 /
1_%
0#'
0|&
0h(
0c(
#1920000
0!
b1011010111000101110110011 &
b10001100 #
b10001100 b%
b1011010111000101110110011 e%
0_%
b100011 j&
b100011 &'
1#'
1|&
1h(
1c(
b1011010111000101110110011 K'
#1925000
1!
b100100 /
1_%
0#'
0|&
0h(
0c(
#1930000
0!
b10011 &
b10010000 #
b10010000 b%
b10011 e%
0_%
b100100 j&
b100100 &'
1#'
1|&
1h(
1c(
b10011 L'
#1935000
1!
b100101 /
1_%
0#'
0|&
0h(
0c(
#1940000
0!
b10010100 #
b10010100 b%
0_%
b100101 j&
b100101 &'
1#'
1|&
1h(
1c(
b10011 M'
#1945000
1!
b100110 /
1_%
0#'
0|&
0h(
0c(
#1950000
0!
b10011000 #
b10011000 b%
0_%
b100110 j&
b100110 &'
1#'
1|&
1h(
1c(
b10011 N'
#1955000
1!
b100111 /
1_%
0#'
0|&
0h(
0c(
#1960000
0!
b10011100 #
b10011100 b%
0_%
b100111 j&
b100111 &'
1#'
1|&
1h(
1c(
b10011 O'
#1965000
1!
b101000 /
1_%
0#'
0|&
0h(
0c(
#1970000
0!
b100000000000000000000001111110 &
b10100000 #
b10100000 b%
b100000000000000000000001111110 e%
0_%
b101000 j&
b101000 &'
1#'
1|&
1h(
1c(
b100000000000000000000001111110 P'
#1975000
1!
b101001 /
1_%
0#'
0|&
0h(
0c(
#1980000
0!
b0 &
b10100100 #
b10100100 b%
b0 e%
0_%
b101001 j&
b101001 &'
1#'
1|&
1h(
1c(
b0 Q'
#1985000
1!
b101010 /
1_%
0#'
0|&
0h(
0c(
#1990000
0!
b10101000 #
b10101000 b%
0_%
b101010 j&
b101010 &'
1#'
1|&
1h(
1c(
b0 R'
#1995000
1!
b101011 /
1_%
0#'
0|&
0h(
0c(
#2000000
0!
b10101100 #
b10101100 b%
0_%
b101011 j&
b101011 &'
1#'
1|&
1h(
1c(
b0 S'
#2005000
1!
b101100 /
1_%
0#'
0|&
0h(
0c(
#2010000
0!
b10110000 #
b10110000 b%
0_%
b101100 j&
b101100 &'
1#'
1|&
1h(
1c(
b0 T'
#2015000
1!
b101101 /
1_%
0#'
0|&
0h(
0c(
#2020000
0!
b10110100 #
b10110100 b%
0_%
b101101 j&
b101101 &'
1#'
1|&
1h(
1c(
b0 U'
#2025000
1!
b101110 /
1_%
0#'
0|&
0h(
0c(
#2030000
0!
b10111000 #
b10111000 b%
0_%
b101110 j&
b101110 &'
1#'
1|&
1h(
1c(
b0 V'
#2035000
1!
b101111 /
1_%
0#'
0|&
0h(
0c(
#2040000
0!
b10111100 #
b10111100 b%
0_%
b101111 j&
b101111 &'
1#'
1|&
1h(
1c(
b0 W'
#2045000
1!
b110000 /
1_%
0#'
0|&
0h(
0c(
#2050000
0!
b11000000 #
b11000000 b%
0_%
b110000 j&
b110000 &'
1#'
1|&
1h(
1c(
b0 X'
#2055000
1!
b110001 /
1_%
0#'
0|&
0h(
0c(
#2060000
0!
b11000100 #
b11000100 b%
0_%
b110001 j&
b110001 &'
1#'
1|&
1h(
1c(
b0 Y'
#2065000
1!
b110010 /
1_%
0#'
0|&
0h(
0c(
#2070000
0!
b11001000 #
b11001000 b%
0_%
b110010 j&
b110010 &'
1#'
1|&
1h(
1c(
b0 Z'
#2075000
1!
b110011 /
1_%
0#'
0|&
0h(
0c(
#2080000
0!
b11001100 #
b11001100 b%
0_%
b110011 j&
b110011 &'
1#'
1|&
1h(
1c(
b0 ['
#2085000
1!
b110100 /
1_%
0#'
0|&
0h(
0c(
#2090000
0!
b11010000 #
b11010000 b%
0_%
b110100 j&
b110100 &'
1#'
1|&
1h(
1c(
b0 \'
#2095000
1!
b110101 /
1_%
0#'
0|&
0h(
0c(
#2100000
0!
b11010100 #
b11010100 b%
0_%
b110101 j&
b110101 &'
1#'
1|&
1h(
1c(
b0 ]'
#2105000
1!
b110110 /
1_%
0#'
0|&
0h(
0c(
#2110000
0!
b11011000 #
b11011000 b%
0_%
b110110 j&
b110110 &'
1#'
1|&
1h(
1c(
b0 ^'
#2115000
1!
b110111 /
1_%
0#'
0|&
0h(
0c(
#2120000
0!
b11011100 #
b11011100 b%
0_%
b110111 j&
b110111 &'
1#'
1|&
1h(
1c(
b0 _'
#2125000
1!
b111000 /
1_%
0#'
0|&
0h(
0c(
#2130000
0!
b11100000 #
b11100000 b%
0_%
b111000 j&
b111000 &'
1#'
1|&
1h(
1c(
b0 `'
#2135000
1!
b111001 /
1_%
0#'
0|&
0h(
0c(
#2140000
0!
b11100100 #
b11100100 b%
0_%
b111001 j&
b111001 &'
1#'
1|&
1h(
1c(
b0 a'
#2145000
1!
b111010 /
1_%
0#'
0|&
0h(
0c(
#2150000
0!
b11101000 #
b11101000 b%
0_%
b111010 j&
b111010 &'
1#'
1|&
1h(
1c(
b0 b'
#2155000
1!
b111011 /
1_%
0#'
0|&
0h(
0c(
#2160000
0!
b11101100 #
b11101100 b%
0_%
b111011 j&
b111011 &'
1#'
1|&
1h(
1c(
b0 c'
#2165000
1!
b111100 /
1_%
0#'
0|&
0h(
0c(
#2170000
0!
b11110000 #
b11110000 b%
0_%
b111100 j&
b111100 &'
1#'
1|&
1h(
1c(
b0 d'
#2175000
1!
b111101 /
1_%
0#'
0|&
0h(
0c(
#2180000
0!
b11110100 #
b11110100 b%
0_%
b111101 j&
b111101 &'
1#'
1|&
1h(
1c(
b0 e'
#2185000
1!
b111110 /
1_%
0#'
0|&
0h(
0c(
#2190000
0!
b11111000 #
b11111000 b%
0_%
b111110 j&
b111110 &'
1#'
1|&
1h(
1c(
b0 f'
#2195000
1!
b111111 /
1_%
0#'
0|&
0h(
0c(
#2200000
0!
b11111100 #
b11111100 b%
0_%
b111111 j&
b111111 &'
1#'
1|&
1h(
1c(
b0 g'
#2205000
1!
b1000000 /
1_%
0#'
0|&
0h(
0c(
#2210000
0!
b100000000 #
b100000000 b%
0_%
b1000000 j&
b1000000 &'
1#'
1|&
1h(
1c(
b0 h'
#2215000
1!
b1000001 /
1_%
0#'
0|&
0h(
0c(
#2220000
0!
b100000100 #
b100000100 b%
0_%
b1000001 j&
b1000001 &'
1#'
1|&
1h(
1c(
b0 i'
#2225000
1!
b1000010 /
1_%
0#'
0|&
0h(
0c(
#2230000
0!
b100001000 #
b100001000 b%
0_%
b1000010 j&
b1000010 &'
1#'
1|&
1h(
1c(
b0 j'
#2235000
1!
b1000011 /
1_%
0#'
0|&
0h(
0c(
#2240000
0!
b100001100 #
b100001100 b%
0_%
b1000011 j&
b1000011 &'
1#'
1|&
1h(
1c(
b0 k'
#2245000
1!
b1000100 /
1_%
0#'
0|&
0h(
0c(
#2250000
0!
b100010000 #
b100010000 b%
0_%
b1000100 j&
b1000100 &'
1#'
1|&
1h(
1c(
b0 l'
#2255000
1!
b1000101 /
1_%
0#'
0|&
0h(
0c(
#2260000
0!
b100010100 #
b100010100 b%
0_%
b1000101 j&
b1000101 &'
1#'
1|&
1h(
1c(
b0 m'
#2265000
1!
b1000110 /
1_%
0#'
0|&
0h(
0c(
#2270000
0!
b100011000 #
b100011000 b%
0_%
b1000110 j&
b1000110 &'
1#'
1|&
1h(
1c(
b0 n'
#2275000
1!
b1000111 /
1_%
0#'
0|&
0h(
0c(
#2280000
0!
b100011100 #
b100011100 b%
0_%
b1000111 j&
b1000111 &'
1#'
1|&
1h(
1c(
b0 o'
#2285000
1!
b1001000 /
1_%
0#'
0|&
0h(
0c(
#2290000
0!
b100100000 #
b100100000 b%
0_%
b1001000 j&
b1001000 &'
1#'
1|&
1h(
1c(
b0 p'
#2295000
1!
b1001001 /
1_%
0#'
0|&
0h(
0c(
#2300000
0!
b100100100 #
b100100100 b%
0_%
b1001001 j&
b1001001 &'
1#'
1|&
1h(
1c(
b0 q'
#2305000
1!
b1001010 /
1_%
0#'
0|&
0h(
0c(
#2310000
0!
b100101000 #
b100101000 b%
0_%
b1001010 j&
b1001010 &'
1#'
1|&
1h(
1c(
b0 r'
#2315000
1!
b1001011 /
1_%
0#'
0|&
0h(
0c(
#2320000
0!
b100101100 #
b100101100 b%
0_%
b1001011 j&
b1001011 &'
1#'
1|&
1h(
1c(
b0 s'
#2325000
1!
b1001100 /
1_%
0#'
0|&
0h(
0c(
#2330000
0!
b100110000 #
b100110000 b%
0_%
b1001100 j&
b1001100 &'
1#'
1|&
1h(
1c(
b0 t'
#2335000
1!
b1001101 /
1_%
0#'
0|&
0h(
0c(
#2340000
0!
b100110100 #
b100110100 b%
0_%
b1001101 j&
b1001101 &'
1#'
1|&
1h(
1c(
b0 u'
#2345000
1!
b1001110 /
1_%
0#'
0|&
0h(
0c(
#2350000
0!
b100111000 #
b100111000 b%
0_%
b1001110 j&
b1001110 &'
1#'
1|&
1h(
1c(
b0 v'
#2355000
1!
b1001111 /
1_%
0#'
0|&
0h(
0c(
#2360000
0!
b100111100 #
b100111100 b%
0_%
b1001111 j&
b1001111 &'
1#'
1|&
1h(
1c(
b0 w'
#2365000
1!
b1010000 /
1_%
0#'
0|&
0h(
0c(
#2370000
0!
b101000000 #
b101000000 b%
0_%
b1010000 j&
b1010000 &'
1#'
1|&
1h(
1c(
b0 x'
#2375000
1!
b1010001 /
1_%
0#'
0|&
0h(
0c(
#2380000
0!
b101000100 #
b101000100 b%
0_%
b1010001 j&
b1010001 &'
1#'
1|&
1h(
1c(
b0 y'
#2385000
1!
b1010010 /
1_%
0#'
0|&
0h(
0c(
#2390000
0!
b101001000 #
b101001000 b%
0_%
b1010010 j&
b1010010 &'
1#'
1|&
1h(
1c(
b0 z'
#2395000
1!
b1010011 /
1_%
0#'
0|&
0h(
0c(
#2400000
0!
b101001100 #
b101001100 b%
0_%
b1010011 j&
b1010011 &'
1#'
1|&
1h(
1c(
b0 {'
#2405000
1!
b1010100 /
1_%
0#'
0|&
0h(
0c(
#2410000
0!
b101010000 #
b101010000 b%
0_%
b1010100 j&
b1010100 &'
1#'
1|&
1h(
1c(
b0 |'
#2415000
1!
b1010101 /
1_%
0#'
0|&
0h(
0c(
#2420000
0!
b101010100 #
b101010100 b%
0_%
b1010101 j&
b1010101 &'
1#'
1|&
1h(
1c(
b0 }'
#2425000
1!
b1010110 /
1_%
0#'
0|&
0h(
0c(
#2430000
0!
b101011000 #
b101011000 b%
0_%
b1010110 j&
b1010110 &'
1#'
1|&
1h(
1c(
b0 ~'
#2435000
1!
b1010111 /
1_%
0#'
0|&
0h(
0c(
#2440000
0!
b101011100 #
b101011100 b%
0_%
b1010111 j&
b1010111 &'
1#'
1|&
1h(
1c(
b0 !(
#2445000
1!
b1011000 /
1_%
0#'
0|&
0h(
0c(
#2450000
0!
b101100000 #
b101100000 b%
0_%
b1011000 j&
b1011000 &'
1#'
1|&
1h(
1c(
b0 "(
#2455000
1!
b1011001 /
1_%
0#'
0|&
0h(
0c(
#2460000
0!
b101100100 #
b101100100 b%
0_%
b1011001 j&
b1011001 &'
1#'
1|&
1h(
1c(
b0 #(
#2465000
1!
b1011010 /
1_%
0#'
0|&
0h(
0c(
#2470000
0!
b101101000 #
b101101000 b%
0_%
b1011010 j&
b1011010 &'
1#'
1|&
1h(
1c(
b0 $(
#2475000
1!
b1011011 /
1_%
0#'
0|&
0h(
0c(
#2480000
0!
b101101100 #
b101101100 b%
0_%
b1011011 j&
b1011011 &'
1#'
1|&
1h(
1c(
b0 %(
#2485000
1!
b1011100 /
1_%
0#'
0|&
0h(
0c(
#2490000
0!
b101110000 #
b101110000 b%
0_%
b1011100 j&
b1011100 &'
1#'
1|&
1h(
1c(
b0 &(
#2495000
1!
b1011101 /
1_%
0#'
0|&
0h(
0c(
#2500000
0!
b101110100 #
b101110100 b%
0_%
b1011101 j&
b1011101 &'
1#'
1|&
1h(
1c(
b0 '(
#2505000
1!
b1011110 /
1_%
0#'
0|&
0h(
0c(
#2510000
0!
b101111000 #
b101111000 b%
0_%
b1011110 j&
b1011110 &'
1#'
1|&
1h(
1c(
b0 ((
#2515000
1!
b1011111 /
1_%
0#'
0|&
0h(
0c(
#2520000
0!
b101111100 #
b101111100 b%
0_%
b1011111 j&
b1011111 &'
1#'
1|&
1h(
1c(
b0 )(
#2525000
1!
b1100000 /
1_%
0#'
0|&
0h(
0c(
#2530000
0!
b110000000 #
b110000000 b%
0_%
b1100000 j&
b1100000 &'
1#'
1|&
1h(
1c(
b0 *(
#2535000
1!
b1100001 /
1_%
0#'
0|&
0h(
0c(
#2540000
0!
b110000100 #
b110000100 b%
0_%
b1100001 j&
b1100001 &'
1#'
1|&
1h(
1c(
b0 +(
#2545000
1!
b1100010 /
1_%
0#'
0|&
0h(
0c(
#2550000
0!
b110001000 #
b110001000 b%
0_%
b1100010 j&
b1100010 &'
1#'
1|&
1h(
1c(
b0 ,(
#2555000
1!
b1100011 /
1_%
0#'
0|&
0h(
0c(
#2560000
0!
b110001100 #
b110001100 b%
0_%
b1100011 j&
b1100011 &'
1#'
1|&
1h(
1c(
b0 -(
#2565000
1!
b1100100 /
1_%
0#'
0|&
0h(
0c(
#2570000
0!
b110010000 #
b110010000 b%
0_%
b1100100 j&
b1100100 &'
1#'
1|&
1h(
1c(
b0 .(
#2575000
1!
b1100101 /
1_%
0#'
0|&
0h(
0c(
#2580000
0!
b110010100 #
b110010100 b%
0_%
b1100101 j&
b1100101 &'
1#'
1|&
1h(
1c(
b0 /(
#2585000
1!
b1100110 /
1_%
0#'
0|&
0h(
0c(
#2590000
0!
b110011000 #
b110011000 b%
0_%
b1100110 j&
b1100110 &'
1#'
1|&
1h(
1c(
b0 0(
#2595000
1!
b1100111 /
1_%
0#'
0|&
0h(
0c(
#2600000
0!
b110011100 #
b110011100 b%
0_%
b1100111 j&
b1100111 &'
1#'
1|&
1h(
1c(
b0 1(
#2605000
1!
b1101000 /
1_%
0#'
0|&
0h(
0c(
#2610000
0!
b110100000 #
b110100000 b%
0_%
b1101000 j&
b1101000 &'
1#'
1|&
1h(
1c(
b0 2(
#2615000
1!
b1101001 /
1_%
0#'
0|&
0h(
0c(
#2620000
0!
b110100100 #
b110100100 b%
0_%
b1101001 j&
b1101001 &'
1#'
1|&
1h(
1c(
b0 3(
#2625000
1!
b1101010 /
1_%
0#'
0|&
0h(
0c(
#2630000
0!
b110101000 #
b110101000 b%
0_%
b1101010 j&
b1101010 &'
1#'
1|&
1h(
1c(
b0 4(
#2635000
1!
b1101011 /
1_%
0#'
0|&
0h(
0c(
#2640000
0!
b110101100 #
b110101100 b%
0_%
b1101011 j&
b1101011 &'
1#'
1|&
1h(
1c(
b0 5(
#2645000
1!
b1101100 /
1_%
0#'
0|&
0h(
0c(
#2650000
0!
b110110000 #
b110110000 b%
0_%
b1101100 j&
b1101100 &'
1#'
1|&
1h(
1c(
b0 6(
#2655000
1!
b1101101 /
1_%
0#'
0|&
0h(
0c(
#2660000
0!
b110110100 #
b110110100 b%
0_%
b1101101 j&
b1101101 &'
1#'
1|&
1h(
1c(
b0 7(
#2665000
1!
b1101110 /
1_%
0#'
0|&
0h(
0c(
#2670000
0!
b110111000 #
b110111000 b%
0_%
b1101110 j&
b1101110 &'
1#'
1|&
1h(
1c(
b0 8(
#2675000
1!
b1101111 /
1_%
0#'
0|&
0h(
0c(
#2680000
0!
b110111100 #
b110111100 b%
0_%
b1101111 j&
b1101111 &'
1#'
1|&
1h(
1c(
b0 9(
#2685000
1!
b1110000 /
1_%
0#'
0|&
0h(
0c(
#2690000
0!
b111000000 #
b111000000 b%
0_%
b1110000 j&
b1110000 &'
1#'
1|&
1h(
1c(
b0 :(
#2695000
1!
b1110001 /
1_%
0#'
0|&
0h(
0c(
#2700000
0!
b111000100 #
b111000100 b%
0_%
b1110001 j&
b1110001 &'
1#'
1|&
1h(
1c(
b0 ;(
#2705000
1!
b1110010 /
1_%
0#'
0|&
0h(
0c(
#2710000
0!
b111001000 #
b111001000 b%
0_%
b1110010 j&
b1110010 &'
1#'
1|&
1h(
1c(
b0 <(
#2715000
1!
b1110011 /
1_%
0#'
0|&
0h(
0c(
#2720000
0!
b111001100 #
b111001100 b%
0_%
b1110011 j&
b1110011 &'
1#'
1|&
1h(
1c(
b0 =(
#2725000
1!
b1110100 /
1_%
0#'
0|&
0h(
0c(
#2730000
0!
b111010000 #
b111010000 b%
0_%
b1110100 j&
b1110100 &'
1#'
1|&
1h(
1c(
b0 >(
#2735000
1!
b1110101 /
1_%
0#'
0|&
0h(
0c(
#2740000
0!
b111010100 #
b111010100 b%
0_%
b1110101 j&
b1110101 &'
1#'
1|&
1h(
1c(
b0 ?(
#2745000
1!
b1110110 /
1_%
0#'
0|&
0h(
0c(
#2750000
0!
b111011000 #
b111011000 b%
0_%
b1110110 j&
b1110110 &'
1#'
1|&
1h(
1c(
b0 @(
#2755000
1!
b1110111 /
1_%
0#'
0|&
0h(
0c(
#2760000
0!
b111011100 #
b111011100 b%
0_%
b1110111 j&
b1110111 &'
1#'
1|&
1h(
1c(
b0 A(
#2765000
1!
b1111000 /
1_%
0#'
0|&
0h(
0c(
#2770000
0!
b111100000 #
b111100000 b%
0_%
b1111000 j&
b1111000 &'
1#'
1|&
1h(
1c(
b0 B(
#2775000
1!
b1111001 /
1_%
0#'
0|&
0h(
0c(
#2780000
0!
b111100100 #
b111100100 b%
0_%
b1111001 j&
b1111001 &'
1#'
1|&
1h(
1c(
b0 C(
#2785000
1!
b1111010 /
1_%
0#'
0|&
0h(
0c(
#2790000
0!
b111101000 #
b111101000 b%
0_%
b1111010 j&
b1111010 &'
1#'
1|&
1h(
1c(
b0 D(
#2795000
1!
b1111011 /
1_%
0#'
0|&
0h(
0c(
#2800000
0!
b111101100 #
b111101100 b%
0_%
b1111011 j&
b1111011 &'
1#'
1|&
1h(
1c(
b0 E(
#2805000
1!
b1111100 /
1_%
0#'
0|&
0h(
0c(
#2810000
0!
b111110000 #
b111110000 b%
0_%
b1111100 j&
b1111100 &'
1#'
1|&
1h(
1c(
b0 F(
#2815000
1!
b1111101 /
1_%
0#'
0|&
0h(
0c(
#2820000
0!
b111110100 #
b111110100 b%
0_%
b1111101 j&
b1111101 &'
1#'
1|&
1h(
1c(
b0 G(
#2825000
1!
b1111110 /
1_%
0#'
0|&
0h(
0c(
#2830000
0!
b111111000 #
b111111000 b%
0_%
b1111110 j&
b1111110 &'
1#'
1|&
1h(
1c(
b0 H(
#2835000
1!
b1111111 /
1_%
0#'
0|&
0h(
0c(
#2840000
0!
b111111100 #
b111111100 b%
0_%
b1111111 j&
b1111111 &'
1#'
1|&
1h(
1c(
b0 I(
#2845000
1!
b10000000 /
0$
b0 #
b1 Y-
b0 Z-
b0 b%
0c%
1_%
b0 j&
1r&
1t&
1$'
1%'
b0 &'
0#'
0|&
0h(
0c(
#2850000
0!
b1 Z-
1-
b0 w"
1a%
0_%
b100 _&
1#'
1|&
1h(
1c(
#2855000
1!
1_%
0#'
0|&
0h(
0c(
b1 w"
b100 ^&
b100 ]&
b100 O&
b1000 N&
b1000 V&
b1000 l%
b100 m%
b1000 X&
b100 ]+
b100 ^+
b1 i&
b1 !'
b100 n%
b100 k%
b1000 S&
b100000000011010010000011 "'
b1000 Z&
b1000 R&
b100000000011010010000011 m&
b1000 _&
b100000000011010010000011 d&
1w%
1)&
b1 E*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1 p*
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b10000000001101001 D&
b1 @&
b1000 C&
b1000 B&
b1100 ]+
b1100 ^+
b1000 A+
b1000 A&
b1100 n%
b1100 k%
b1000 O+
b1111111111111111111111111111111111111111111111111111111111111000 N+
b1000 Q+
b1 S+
b1000 C+
1X+
0D+
0j%
b1000 >&
b1 P(
b1 f(
b10 g(
b10 T(
b10 K(
b10 =&
b10 [+
b10 <&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b10 p*
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#2860000
0!
0_%
1#'
1|&
1h(
1c(
#2865000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b10 w"
b10 P*
b1000 ^&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b1000 ]&
b1000 O&
b1100 N&
b1100 V&
b1100 l%
b1000 m%
b1100 X&
b10000 ]+
b10000 ^+
b10 i&
b10 !'
b10000 n%
b10000 k%
b1100 S&
b1000000000011010100000011 "'
b1100 Z&
b1100 R&
b1000000000011010100000011 m&
b1100 _&
b1000000000011010100000011 d&
1v%
0w%
1(&
0)&
b0 E*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b10 q*
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b100000000001101010 D&
b0 @&
b10000 C&
b10000 B&
b11000 ]+
b11000 ^+
b10000 A+
b10000 A&
b11000 n%
b11000 k%
b10000 O+
b1111111111111111111111111111111111111111111111111111111111110000 N+
b10000 Q+
b10000 C+
b10000 >&
b10 P(
b10 f(
b11 g(
b11 T(
b11 K(
b11 =&
b11 [+
b11 <&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b11 q*
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#2870000
0!
0_%
1#'
1|&
1h(
1c(
#2875000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b11 w"
b11 Q*
b1100 ^&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b1100 ]&
b1100 O&
b10000 N&
b10000 V&
b10000 l%
b1100 m%
b10000 X&
b11100 ]+
b11100 ^+
b11 i&
b11 !'
b11100 n%
b11100 k%
b10000 S&
b1100000000011010110000011 "'
b10000 Z&
b10000 R&
b1100000000011010110000011 m&
b10000 _&
b1100000000011010110000011 d&
1w%
1)&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b11 r*
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b110000000001101011 D&
b11000 C&
b11000 B&
b100100 ]+
b100100 ^+
b11000 A+
b11000 A&
b100100 n%
b100100 k%
b11000 O+
b1111111111111111111111111111111111111111111111111111111111101000 N+
b11000 Q+
b11000 C+
b11000 >&
b11 P(
b11 f(
b100 g(
b100 T(
b100 K(
b100 =&
b100 [+
b100 <&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b100 r*
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#2880000
0!
0_%
1#'
1|&
1h(
1c(
#2885000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b100 w"
b100 R*
b10000 ^&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b10000 ]&
b10000 O&
b10100 N&
b10100 V&
b10100 l%
b10000 m%
b10100 X&
b101000 ]+
b101000 ^+
b100 i&
b100 !'
b101000 n%
b101000 k%
b10100 S&
b10000000000011011000000011 "'
b10100 Z&
b10100 R&
b10000000000011011000000011 m&
b10100 _&
b10000000000011011000000011 d&
1u%
0v%
0w%
1'&
0(&
0)&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b100 s*
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b1000000000001101100 D&
b1011 6+
b100000 C&
b100000 B&
b110000 ]+
b110000 ^+
b100000 A+
b100000 A&
b110000 n%
b110000 k%
b100000 O+
b1111111111111111111111111111111111111111111111111111111111100000 N+
b100000 Q+
b100000 C+
b100000 >&
b100 P(
b100 f(
b101 g(
b101 T(
b101 K(
b101 =&
b101 [+
b101 <&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b101 s*
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#2890000
0!
0_%
1#'
1|&
1h(
1c(
#2895000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b101 w"
b101 S*
b10100 ^&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b10100 ]&
b10100 O&
b11000 N&
b11000 V&
b11000 l%
b10100 m%
b11000 X&
b110100 ]+
b110100 ^+
b101 i&
b101 !'
b110100 n%
b110100 k%
b11000 S&
b10100000000011011010000011 "'
b11000 Z&
b11000 R&
b10100000000011011010000011 m&
b11000 _&
b10100000000011011010000011 d&
1w%
1)&
b1 E*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b101 t*
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b1010000000001101101 D&
b1 @&
b101000 C&
b101000 B&
b111100 ]+
b111100 ^+
b101000 A+
b101000 A&
b111100 n%
b111100 k%
b101000 O+
b1111111111111111111111111111111111111111111111111111111111011000 N+
b101000 Q+
b101000 C+
b101000 >&
b101 P(
b101 f(
b110 g(
b110 T(
b110 K(
b110 =&
b110 [+
b110 <&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b110 t*
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#2900000
0!
0_%
1#'
1|&
1h(
1c(
#2905000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b110 w"
b110 T*
b11000 ^&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b11000 ]&
b11000 O&
b11100 N&
b11100 V&
b11100 l%
b11000 m%
b11100 X&
b1000000 ]+
b1000000 ^+
b110 i&
b110 !'
b1000000 n%
b1000000 k%
b11100 S&
b11000000000011011100000011 "'
b11100 Z&
b11100 R&
b11000000000011011100000011 m&
b11100 _&
b11000000000011011100000011 d&
1v%
0w%
1(&
0)&
b0 E*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b110 u*
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b1100000000001101110 D&
b0 @&
b110000 C&
b110000 B&
b1001000 ]+
b1001000 ^+
b110000 A+
b110000 A&
b1001000 n%
b1001000 k%
b110000 O+
b1111111111111111111111111111111111111111111111111111111111010000 N+
b110000 Q+
b110000 C+
b110000 >&
b110 P(
b110 f(
b111 g(
b111 T(
b111 K(
b111 =&
b111 [+
b111 <&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b111 u*
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#2910000
0!
0_%
1#'
1|&
1h(
1c(
#2915000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b111 w"
b111 U*
b11100 ^&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b11100 ]&
b11100 O&
b100000 N&
b100000 V&
b100000 l%
b11100 m%
b100000 X&
b1001100 ]+
b1001100 ^+
b111 i&
b111 !'
b1001100 n%
b1001100 k%
b100000 S&
b11100000000011011110000011 "'
b100000 Z&
b100000 R&
b11100000000011011110000011 m&
b100000 _&
b11100000000011011110000011 d&
1w%
1)&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b111 v*
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b1110000000001101111 D&
b111000 C&
b111000 B&
b1010100 ]+
b1010100 ^+
b111000 A+
b111000 A&
b1010100 n%
b1010100 k%
b111000 O+
b1111111111111111111111111111111111111111111111111111111111001000 N+
b111000 Q+
b111000 C+
b111000 >&
b111 P(
b111 f(
b1000 g(
b1000 T(
b1000 K(
b1000 =&
b1000 [+
b1000 <&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b1000 v*
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#2920000
0!
0_%
1#'
1|&
1h(
1c(
#2925000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b1000 w"
b1000 V*
b100000 ^&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b100000 ]&
b100000 O&
b100100 N&
b100100 V&
b100100 l%
b100000 m%
b100100 X&
b1011000 ]+
b1011000 ^+
b1000 i&
b1000 !'
b1011000 n%
b1011000 k%
b100100 S&
b100000000000011100000000011 "'
b100100 Z&
b100100 R&
b100000000000011100000000011 m&
b100100 _&
b100000000000011100000000011 d&
1t%
0u%
0v%
0w%
1%&
0&&
0'&
0(&
0)&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b1000 w*
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b11 6+
b10000000000001110000 D&
b1000000 C&
b1000000 B&
b1100000 ]+
b1100000 ^+
b1000000 A+
b1000000 A&
b1100000 n%
b1100000 k%
b1000000 O+
b1111111111111111111111111111111111111111111111111111111111000000 N+
b1000000 Q+
b1000000 C+
b1000000 >&
b1000 P(
b1000 f(
b1001 g(
b1001 T(
b1001 K(
b1001 =&
b1001 [+
b1001 <&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b1001 w*
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#2930000
0!
0_%
1#'
1|&
1h(
1c(
#2935000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b1001 w"
b1001 W*
b100100 ^&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b100100 ]&
b100100 O&
b101000 N&
b101000 V&
b101000 l%
b100100 m%
b101000 X&
b1100100 ]+
b1100100 ^+
b1001 i&
b1001 !'
b1100100 n%
b1100100 k%
b101000 S&
b100100000000011100010000011 "'
b101000 Z&
b101000 R&
b100100000000011100010000011 m&
b101000 _&
b100100000000011100010000011 d&
1w%
1)&
b1 E*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b1001 x*
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b10010000000001110001 D&
b1 @&
b1001000 C&
b1001000 B&
b1101100 ]+
b1101100 ^+
b1001000 A+
b1001000 A&
b1101100 n%
b1101100 k%
b1001000 O+
b1111111111111111111111111111111111111111111111111111111110111000 N+
b1001000 Q+
b1001000 C+
b1001000 >&
b1001 P(
b1001 f(
b1010 g(
b1010 T(
b1010 K(
b1010 =&
b1010 [+
b1010 <&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b1010 x*
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#2940000
0!
0_%
1#'
1|&
1h(
1c(
#2945000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b1010 w"
b1010 X*
b101000 ^&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b101000 ]&
b101000 O&
b101100 N&
b101100 V&
b101100 l%
b101000 m%
b101100 X&
b1110000 ]+
b1110000 ^+
b1010 i&
b1010 !'
b1110000 n%
b1110000 k%
b101100 S&
b10100101000000100100110011 "'
b101100 Z&
b101100 R&
b10100101000000100100110011 m&
b101100 _&
b10100101000000100100110011 d&
0t%
1u%
1z%
1|%
0#&
0$&
1(&
0)&
1+&
1,&
b1 D*
b10 E*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b1010 y*
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
07*
05*
04*
b10 1*
b110011 E&
b10 1&
05&
06&
08&
b10 @&
b1 ?&
b1000 6+
b1010010100000010010 D&
bx C&
b0 *+
1Z(
b1001000 [+
b10 A+
b1001001 O+
b1111111111111111111111111111111111111111111111111111111110111001 N+
b1001001 Q+
b1001000 V+
b1000 ?+
b1001001 C+
b1000 *+
b1001001 >&
1d(
b10 A&
b1001000 <&
b1000 2&
bx B&
b1001001 [+
bx g(
b11 O+
b100 T+
b1111111111111111111111111111111111111111111111111111111111111111 N+
b11 Q+
b10 V+
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b1001000 y*
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
1E+
b10 C+
bx ]+
bx ^+
bx n%
bx k%
b10 >&
bx T(
b1001001 <&
b10 [+
b0 P(
bx K(
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b1001001 y*
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b0 f(
bx =&
b10 <&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10 y*
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#2950000
0!
0_%
1#'
1|&
1h(
1c(
#2955000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b1011 w"
b10 Y*
b101100 ^&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b101100 ]&
b101100 O&
b110000 N&
b110000 V&
b110000 l%
b101100 m%
b110000 X&
b1011 i&
b1011 !'
b110000 S&
b10101101010000100110110011 "'
b110000 Z&
b110000 R&
b10101101010000100110110011 m&
b110000 _&
b10101101010000100110110011 d&
1y%
1~%
1)&
b11 D*
b100 E*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10 z*
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b1010110101000010011 D&
b100 @&
b11 ?&
b100 A+
b101 O+
b1100 T+
b1 N+
b10 P+
b0 S+
b110 V+
b110 C+
0X+
0E+
b110 >&
b100 A&
b110 [+
b111 O+
b110000 T+
b1111111111111111111111111111111111111111111111111111111111111111 N+
b0 P+
b111 Q+
b1 S+
b1100 V+
b1100 C+
1X+
1E+
b1100 >&
b110 <&
b1100 [+
b1 P(
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b110 z*
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b1 f(
b1100 <&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b1100 z*
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#2960000
0!
0_%
1#'
1|&
1h(
1c(
#2965000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b1100 w"
b1100 Z*
b110000 ^&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b110000 ]&
b110000 O&
b110100 N&
b110100 V&
b110100 l%
b110000 m%
b110100 X&
b1100 i&
b1100 !'
b110100 S&
b10110101100000101000110011 "'
b110100 Z&
b110100 R&
b10110101100000101000110011 m&
b110100 _&
b10110101100000101000110011 d&
1x%
0y%
1}%
0~%
1'&
0(&
0)&
b101 D*
b110 E*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b1100 {*
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b1011010110000010100 D&
b110 @&
b101 ?&
b110 A+
b1001 O+
b1010000 T+
b1 N+
b100 P+
b101 Q+
b0 S+
b10100 V+
b10100 C+
0X+
0E+
b10100 >&
b110 A&
b10100 [+
b10 P(
b1011 O+
b101000000 T+
b1111111111111111111111111111111111111111111111111111111111111111 N+
b111 Q+
b1 S+
b11110 V+
b11110 C+
1X+
1E+
b11110 >&
b10 f(
b10100 <&
b11110 [+
b11 P(
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10100 {*
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b11 f(
b11110 <&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b11110 {*
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#2970000
0!
0_%
1#'
1|&
1h(
1c(
#2975000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b1101 w"
b11110 [*
b110100 ^&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b110100 ]&
b110100 O&
b111000 N&
b111000 V&
b111000 l%
b110100 m%
b111000 X&
b1101 i&
b1101 !'
b111000 S&
b10111101110000101010110011 "'
b111000 Z&
b111000 R&
b10111101110000101010110011 m&
b111000 _&
b10111101110000101010110011 d&
1y%
1~%
1)&
b111 D*
b1000 E*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b11110 |*
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b1011110111000010101 D&
b1000 @&
b111 ?&
b1000 A+
b1101 O+
b111000000 T+
b1 N+
b110 P+
b0 S+
b101010 V+
b101010 C+
0X+
0E+
b101010 >&
b1000 A&
b101010 [+
b101 P(
b1111 O+
b11100000000 T+
b1111111111111111111111111111111111111111111111111111111111111111 N+
b0 P+
b1111 Q+
b1 S+
b111000 V+
b111000 C+
1X+
1E+
b111000 >&
b101 f(
b101010 <&
b111000 [+
b111 P(
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b101010 |*
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b111 f(
b111000 <&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b111000 |*
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#2980000
0!
0_%
1#'
1|&
1h(
1c(
#2985000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b1110 w"
b111000 \*
b111000 ^&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b111000 ]&
b111000 O&
b111100 N&
b111100 V&
b111100 l%
b111000 m%
b111100 X&
b1110 i&
b1110 !'
b111100 S&
b11000110000000101100110011 "'
b111100 Z&
b111100 R&
b11000110000000101100110011 m&
b111100 _&
b11000110000000101100110011 d&
1v%
0w%
0x%
0y%
1{%
0|%
0}%
0~%
1(&
0)&
b1001 D*
b1010 E*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b111000 }*
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b1100011000000010110 D&
b1010 @&
b1001 ?&
b1010 A+
b10001 O+
b100100000000 T+
b1 N+
b1000 P+
b1001 Q+
b0 S+
b1001000 V+
b1001000 C+
0X+
0E+
b1001000 >&
b1010 A&
b1001000 [+
b1001 P(
b10011 O+
b10010000000000 T+
b1111111111111111111111111111111111111111111111111111111111111111 N+
b1011 Q+
b1 S+
b1011010 V+
b1011010 C+
1X+
1E+
b1011010 >&
b1001 f(
b1001000 <&
b1011010 [+
b1011 P(
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b1001000 }*
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b1011 f(
b1011010 <&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b1011010 }*
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#2990000
0!
0_%
1#'
1|&
1h(
1c(
#2995000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b1111 w"
b1011010 ]*
b111100 ^&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b111100 ]&
b111100 O&
b1000000 N&
b1000000 V&
b1000000 l%
b111100 m%
b1000000 X&
b1111 i&
b1111 !'
b1000000 S&
b101110010011 "'
b1000000 Z&
b1000000 R&
b101110010011 m&
b1000000 _&
b101110010011 d&
0u%
0v%
0z%
0{%
1)&
0+&
b0 D*
b0 E*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b1011010 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
17*
b0 1*
b10011 E&
b0 1&
18&
b0 @&
b0 ?&
b10111 D&
b0 6+
b0 C&
b10 *+
bx A+
b1010 O+
b0 T+
b1111111111111111111111111111111111111111111111111111111111110110 N+
b0 P+
b1010 Q+
b0 V+
b10 ?+
b0 C+
1D+
1j%
b0 >&
bx A&
b10 2&
b0 B&
b0 [+
b0 P(
bx O+
bx T+
bx U+
bx N+
bx Q+
b0x S+
bx V+
0Y+
0E+
bx C+
b111100 ]+
b111100 ^+
b0 A+
0X+
0D+
0j%
b0 f(
b0 A&
b111100 n%
b111100 k%
bx >&
b0 <&
b0 O+
b0 T+
b0 U+
b0 N+
b0 Q+
b0 S+
b0 V+
1Y+
bx [+
bx P(
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b0 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b0 C+
1D+
1j%
bx f(
b0 >&
bx <&
b0 [+
b0 P(
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
bx ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b0 f(
b0 <&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b0 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#3000000
0!
0_%
1#'
1|&
1h(
1c(
#3005000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b10000 w"
b1000000 ^&
b1000000 ]&
b1000000 O&
b1000100 N&
b1000100 V&
b1000100 l%
b1000000 m%
b1000100 X&
b1000000 ]+
b1000000 ^+
b10000 i&
b10000 !'
b1000000 n%
b1000000 k%
b1000100 S&
b10011 "'
b1000100 Z&
b1000100 R&
b10011 m&
b1000100 _&
b10011 d&
0%&
0'&
0(&
0)&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b0 D&
#3010000
0!
0_%
1#'
1|&
1h(
1c(
#3015000
1!
1_%
0#'
0|&
0h(
0c(
b10001 w"
b1000100 ^&
b1000100 ]&
b1000100 O&
b1001000 N&
b1001000 V&
b1001000 l%
b1000100 m%
b1001000 X&
b1000100 ]+
b1000100 ^+
b10001 i&
b10001 !'
b1000100 n%
b1000100 k%
b1001000 S&
b1001000 Z&
b1001000 R&
b1001000 _&
#3020000
0!
0_%
1#'
1|&
1h(
1c(
#3025000
1!
1_%
0#'
0|&
0h(
0c(
b10010 w"
b1001000 ^&
b1001000 ]&
b1001000 O&
b1001100 N&
b1001100 V&
b1001100 l%
b1001000 m%
b1001100 X&
b1001000 ]+
b1001000 ^+
b10010 i&
b10010 !'
b1001000 n%
b1001000 k%
b1001100 S&
b1001100 Z&
b1001100 R&
b1001100 _&
#3030000
0!
0_%
1#'
1|&
1h(
1c(
#3035000
1!
1_%
0#'
0|&
0h(
0c(
b10011 w"
b1001100 ^&
b1001100 ]&
b1001100 O&
b1010000 N&
b1010000 V&
b1010000 l%
b1001100 m%
b1010000 X&
b1001100 ]+
b1001100 ^+
b10011 i&
b10011 !'
b1001100 n%
b1001100 k%
b1010000 S&
b1001010111000101110110011 "'
b1010000 Z&
b1010000 R&
b1001010111000101110110011 m&
b1010000 _&
b1001010111000101110110011 d&
1v%
1y%
1{%
1}%
1~%
1!&
1%&
1'&
1(&
1)&
1+&
b10 E*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
07*
b10 1*
b110011 E&
b10 1&
08&
b100101011100010111 D&
b10 @&
bx C&
b10 A+
b10 A&
bx B&
b10 O+
b1111111111111111111111111111111111111111111111111111111111111110 N+
b10 Q+
b1 S+
bx ]+
bx ^+
b10 C+
1X+
0D+
0j%
b10 >&
bx n%
bx k%
b10 [+
b10 <&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b10 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#3040000
0!
0_%
1#'
1|&
1h(
1c(
#3045000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b10100 w"
b10 ^*
b1010000 ^&
b10 D*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b10 ?&
b1010000 ]&
b100 O+
b1000 T+
b0 N+
b10 P+
b0 S+
b100 V+
b1010000 O&
b100 C+
0X+
b1010100 N&
b1010100 V&
b1010100 l%
b100 >&
b1010000 m%
b1010100 X&
b100 [+
b10100 i&
b10100 !'
b100 <&
b1010100 S&
b10011 "'
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b100 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b1010100 Z&
b1010100 R&
b10011 m&
b1010100 _&
b10011 d&
0v%
0y%
0{%
0}%
0~%
0!&
0%&
0'&
0(&
0)&
0+&
b0 D*
b0 E*
b0 )+
b100 g*
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b10 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
17*
b0 1*
b10011 E&
b0 1&
18&
b0 D&
b0 @&
b0 ?&
b0 C&
bx A+
b10 O+
b0 T+
b1111111111111111111111111111111111111111111111111111111111111110 N+
b0 P+
b1 S+
b0 V+
b10 C+
1X+
b10 >&
bx A&
b0 B&
b10 [+
bx O+
bx T+
bx U+
bx N+
bx Q+
b0x S+
bx V+
0Y+
b1010000 ]+
b1010000 ^+
b0 A+
bx C+
0X+
bx >&
b0 A&
b1010000 n%
b1010000 k%
b10 <&
bx [+
bx P(
b0 O+
b0 T+
b0 U+
b0 N+
b0 Q+
b0 S+
b0 V+
1Y+
b0 )+
b10 g*
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b0 C+
1D+
1j%
b0 >&
bx f(
bx <&
b0 [+
b0 P(
b0 )+
bx g*
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b0 f(
b0 <&
b0 )+
b0 g*
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#3050000
0!
0_%
1#'
1|&
1h(
1c(
#3055000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b10101 w"
b1010100 ^&
b1010100 ]&
b1010100 O&
b1011000 N&
b1011000 V&
b1011000 l%
b1010100 m%
b1011000 X&
b1010100 ]+
b1010100 ^+
b10101 i&
b10101 !'
b1010100 n%
b1010100 k%
b1011000 S&
b1011000 Z&
b1011000 R&
b1011000 _&
#3060000
0!
0_%
1#'
1|&
1h(
1c(
#3065000
1!
1_%
0#'
0|&
0h(
0c(
b10110 w"
b1011000 ^&
b1011000 ]&
b1011000 O&
b1011100 N&
b1011100 V&
b1011100 l%
b1011000 m%
b1011100 X&
b1011000 ]+
b1011000 ^+
b10110 i&
b10110 !'
b1011000 n%
b1011000 k%
b1011100 S&
b1011100 Z&
b1011100 R&
b1011100 _&
#3070000
0!
0_%
1#'
1|&
1h(
1c(
#3075000
1!
1_%
0#'
0|&
0h(
0c(
b10111 w"
b1011100 ^&
b1011100 ]&
b1011100 O&
b1100000 N&
b1100000 V&
b1100000 l%
b1011100 m%
b1100000 X&
b1011100 ]+
b1011100 ^+
b10111 i&
b10111 !'
b1011100 n%
b1011100 k%
b1100000 S&
b1001110111000101110110011 "'
b1100000 Z&
b1100000 R&
b1001110111000101110110011 m&
b1100000 _&
b1001110111000101110110011 d&
1v%
1y%
1z%
1{%
1}%
1~%
1!&
1%&
1'&
1(&
1)&
1+&
b10 D*
b1100 E*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b0 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
07*
b10 1*
b110011 E&
b10 1&
08&
b100111011100010111 D&
b1100 @&
b10 ?&
bx C&
b1100 A+
b10 O+
b10 T+
b10 U+
b10 N+
b10 Q+
b10 C+
0D+
0j%
b10 >&
b1100 A&
bx B&
b10 [+
b1110 O+
b10000000000000 T+
b0 U+
b1111111111111111111111111111111111111111111111111111111111110110 N+
b1110 Q+
b1 S+
b11000 V+
bx ]+
bx ^+
b1110 C+
1X+
b1110 >&
bx n%
bx k%
b10 <&
b1110 [+
b1 P(
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b10 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b1 f(
b1110 <&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b1110 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#3080000
0!
0_%
1#'
1|&
1h(
1c(
#3085000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b11000 w"
b1110 ^*
b1100000 ^&
b1110 D*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b1110 ?&
b1100000 ]&
b11010 O+
b1110000000000000 T+
b10 N+
b1100 P+
b0 S+
b10101000 V+
b1100000 O&
b11010 C+
0X+
b1100100 N&
b1100100 V&
b1100100 l%
b11010 >&
b1100000 m%
b1100100 X&
b11010 [+
b11 P(
b11000 i&
b11000 !'
b11 f(
b11010 <&
b1100100 S&
b10011 "'
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11010 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b1100100 Z&
b1100100 R&
b10011 m&
b1100100 _&
b10011 d&
0v%
0y%
0z%
0{%
0}%
0~%
0!&
0%&
0'&
0(&
0)&
0+&
b0 D*
b0 E*
b0 )+
b11010 g*
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b1110 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
17*
b0 1*
b10011 E&
b0 1&
18&
b0 D&
b0 @&
b0 ?&
b0 C&
bx A+
b1100 O+
b0 T+
b1111111111111111111111111111111111111111111111111111111111110100 N+
b0 P+
b1100 Q+
b1 S+
b0 V+
b1100 C+
1X+
b1100 >&
bx A&
b0 B&
b1100 [+
b1 P(
bx O+
bx T+
bx U+
bx N+
bx Q+
b0x S+
bx V+
0Y+
b1100000 ]+
b1100000 ^+
b0 A+
bx C+
0X+
bx >&
b1 f(
b0 A&
b1100000 n%
b1100000 k%
b1100 <&
bx [+
bx P(
b0 O+
b0 T+
b0 U+
b0 N+
b0 Q+
b0 S+
b0 V+
1Y+
b0 )+
b1100 g*
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b0 C+
1D+
1j%
b0 >&
bx f(
bx <&
b0 [+
b0 P(
b0 )+
bx g*
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b0 f(
b0 <&
b0 )+
b0 g*
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#3090000
0!
0_%
1#'
1|&
1h(
1c(
#3095000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b11001 w"
b1100100 ^&
b1100100 ]&
b1100100 O&
b1101000 N&
b1101000 V&
b1101000 l%
b1100100 m%
b1101000 X&
b1100100 ]+
b1100100 ^+
b11001 i&
b11001 !'
b1100100 n%
b1100100 k%
b1101000 S&
b1101000 Z&
b1101000 R&
b1101000 _&
#3100000
0!
0_%
1#'
1|&
1h(
1c(
#3105000
1!
1_%
0#'
0|&
0h(
0c(
b11010 w"
b1101000 ^&
b1101000 ]&
b1101000 O&
b1101100 N&
b1101100 V&
b1101100 l%
b1101000 m%
b1101100 X&
b1101000 ]+
b1101000 ^+
b11010 i&
b11010 !'
b1101000 n%
b1101000 k%
b1101100 S&
b1101100 Z&
b1101100 R&
b1101100 _&
#3110000
0!
0_%
1#'
1|&
1h(
1c(
#3115000
1!
1_%
0#'
0|&
0h(
0c(
b11011 w"
b1101100 ^&
b1101100 ]&
b1101100 O&
b1110000 N&
b1110000 V&
b1110000 l%
b1101100 m%
b1110000 X&
b1101100 ]+
b1101100 ^+
b11011 i&
b11011 !'
b1101100 n%
b1101100 k%
b1110000 S&
b1010010111000101110110011 "'
b1110000 Z&
b1110000 R&
b1010010111000101110110011 m&
b1110000 _&
b1010010111000101110110011 d&
1v%
1x%
1{%
1}%
1~%
1!&
1%&
1'&
1(&
1)&
1+&
b1110 D*
b11110 E*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b0 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
07*
b10 1*
b110011 E&
b10 1&
08&
b101001011100010111 D&
b11110 @&
b1110 ?&
bx C&
b11110 A+
b1110 O+
b1110 T+
b1110 U+
b1110 N+
b1110 Q+
b1110 C+
0D+
0j%
b1110 >&
b11110 A&
bx B&
b1110 [+
b1 P(
b101100 O+
b1110000000000000000000000000000000 T+
b0 U+
b1111111111111111111111111111111111111111111111111111111111110000 N+
b1110 P+
b11110 Q+
b1 S+
b110100100 V+
bx ]+
bx ^+
b101100 C+
1X+
b101100 >&
b1 f(
bx n%
bx k%
b1110 <&
b101100 [+
b101 P(
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b1110 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b101 f(
b101100 <&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b101100 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#3120000
0!
0_%
1#'
1|&
1h(
1c(
#3125000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b11100 w"
b101100 ^*
b1110000 ^&
b101100 D*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b101100 ?&
b1110000 ]&
b1001010 O+
b101100000000000000000000000000000000 T+
b1110 N+
b1100 P+
b111110 Q+
b0 S+
b10100101000 V+
b1110000 O&
b1001010 C+
0X+
b1110100 N&
b1110100 V&
b1110100 l%
b1001010 >&
b1110000 m%
b1110100 X&
b1001010 [+
b1001 P(
b11100 i&
b11100 !'
b1001 f(
b1001010 <&
b1110100 S&
b10011 "'
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b1001010 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b1110100 Z&
b1110100 R&
b10011 m&
b1110100 _&
b10011 d&
0v%
0x%
0{%
0}%
0~%
0!&
0%&
0'&
0(&
0)&
0+&
b0 D*
b0 E*
b0 )+
b1001010 g*
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b101100 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
17*
b0 1*
b10011 E&
b0 1&
18&
b0 D&
b0 @&
b0 ?&
b0 C&
bx A+
b11110 O+
b0 T+
b1111111111111111111111111111111111111111111111111111111111100010 N+
b0 P+
b11110 Q+
b1 S+
b0 V+
b11110 C+
1X+
b11110 >&
bx A&
b0 B&
b11110 [+
b11 P(
bx O+
bx T+
bx U+
bx N+
bx Q+
b0x S+
bx V+
0Y+
b1110000 ]+
b1110000 ^+
b0 A+
bx C+
0X+
bx >&
b11 f(
b0 A&
b1110000 n%
b1110000 k%
b11110 <&
bx [+
bx P(
b0 O+
b0 T+
b0 U+
b0 N+
b0 Q+
b0 S+
b0 V+
1Y+
b0 )+
b11110 g*
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b0 C+
1D+
1j%
b0 >&
bx f(
bx <&
b0 [+
b0 P(
b0 )+
bx g*
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b0 f(
b0 <&
b0 )+
b0 g*
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#3130000
0!
0_%
1#'
1|&
1h(
1c(
#3135000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b11101 w"
b1110100 ^&
b1110100 ]&
b1110100 O&
b1111000 N&
b1111000 V&
b1111000 l%
b1110100 m%
b1111000 X&
b1110100 ]+
b1110100 ^+
b11101 i&
b11101 !'
b1110100 n%
b1110100 k%
b1111000 S&
b1111000 Z&
b1111000 R&
b1111000 _&
#3140000
0!
0_%
1#'
1|&
1h(
1c(
#3145000
1!
1_%
0#'
0|&
0h(
0c(
b11110 w"
b1111000 ^&
b1111000 ]&
b1111000 O&
b1111100 N&
b1111100 V&
b1111100 l%
b1111000 m%
b1111100 X&
b1111000 ]+
b1111000 ^+
b11110 i&
b11110 !'
b1111000 n%
b1111000 k%
b1111100 S&
b1111100 Z&
b1111100 R&
b1111100 _&
#3150000
0!
0_%
1#'
1|&
1h(
1c(
#3155000
1!
1_%
0#'
0|&
0h(
0c(
b11111 w"
b1111100 ^&
b1111100 ]&
b1111100 O&
b10000000 N&
b10000000 V&
b10000000 l%
b1111100 m%
b10000000 X&
b1111100 ]+
b1111100 ^+
b11111 i&
b11111 !'
b1111100 n%
b1111100 k%
b10000000 S&
b1010110111000101110110011 "'
b10000000 Z&
b10000000 R&
b1010110111000101110110011 m&
b10000000 _&
b1010110111000101110110011 d&
1v%
1x%
1z%
1{%
1}%
1~%
1!&
1%&
1'&
1(&
1)&
1+&
b101100 D*
b111000 E*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b0 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
07*
b10 1*
b110011 E&
b10 1&
08&
b101011011100010111 D&
b111000 @&
b101100 ?&
bx C&
b111000 A+
b101100 O+
b101100 T+
b101100 U+
b101100 N+
b101100 Q+
b101100 C+
0D+
0j%
b101100 >&
b111000 A&
bx B&
b101100 [+
b101 P(
b1100100 O+
b10110000000000000000000000000000000000000000000000000000000000 T+
b0 U+
b1111111111111111111111111111111111111111111111111111111111110100 N+
b101000 P+
b111100 Q+
b1 S+
b100110100000 V+
bx ]+
bx ^+
b1100100 C+
1X+
b1100100 >&
b101 f(
bx n%
bx k%
b101100 <&
b1100100 [+
b1100 P(
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b101100 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b1100 f(
b1100100 <&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b1100100 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#3160000
0!
0_%
1#'
1|&
1h(
1c(
#3165000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b100000 w"
b1100100 ^*
b10000000 ^&
b1100100 D*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b1100100 ?&
b10000000 ]&
b10011100 O+
b110010000000000000000000000000000000000000000000000000000000000 T+
b101100 N+
b100000 P+
b1111100 Q+
b0 S+
b1010111100000 V+
b10000000 O&
b10011100 C+
0X+
b10000100 N&
b10000100 V&
b10000100 l%
b10011100 >&
b10000000 m%
b10000100 X&
b10011100 [+
b10011 P(
b100000 i&
b100000 !'
b10011 f(
b10011100 <&
b10000100 S&
b10011 "'
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b10011100 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b10000100 Z&
b10000100 R&
b10011 m&
b10000100 _&
b10011 d&
0v%
0x%
0z%
0{%
0}%
0~%
0!&
0%&
0'&
0(&
0)&
0+&
b0 D*
b0 E*
b0 )+
b10011100 g*
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b1100100 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
17*
b0 1*
b10011 E&
b0 1&
18&
b0 D&
b0 @&
b0 ?&
b0 C&
bx A+
b111000 O+
b0 T+
b1111111111111111111111111111111111111111111111111111111111001000 N+
b0 P+
b111000 Q+
b1 S+
b0 V+
b111000 C+
1X+
b111000 >&
bx A&
b0 B&
b111000 [+
b111 P(
bx O+
bx T+
bx U+
bx N+
bx Q+
b0x S+
bx V+
0Y+
b10000000 ]+
b10000000 ^+
b0 A+
bx C+
0X+
bx >&
b111 f(
b0 A&
b10000000 n%
b10000000 k%
b111000 <&
bx [+
bx P(
b0 O+
b0 T+
b0 U+
b0 N+
b0 Q+
b0 S+
b0 V+
1Y+
b0 )+
b111000 g*
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b0 C+
1D+
1j%
b0 >&
bx f(
bx <&
b0 [+
b0 P(
b0 )+
bx g*
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b0 f(
b0 <&
b0 )+
b0 g*
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#3170000
0!
0_%
1#'
1|&
1h(
1c(
#3175000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b100001 w"
b10000100 ^&
b10000100 ]&
b10000100 O&
b10001000 N&
b10001000 V&
b10001000 l%
b10000100 m%
b10001000 X&
b10000100 ]+
b10000100 ^+
b100001 i&
b100001 !'
b10000100 n%
b10000100 k%
b10001000 S&
b10001000 Z&
b10001000 R&
b10001000 _&
#3180000
0!
0_%
1#'
1|&
1h(
1c(
#3185000
1!
1_%
0#'
0|&
0h(
0c(
b100010 w"
b10001000 ^&
b10001000 ]&
b10001000 O&
b10001100 N&
b10001100 V&
b10001100 l%
b10001000 m%
b10001100 X&
b10001000 ]+
b10001000 ^+
b100010 i&
b100010 !'
b10001000 n%
b10001000 k%
b10001100 S&
b10001100 Z&
b10001100 R&
b10001100 _&
#3190000
0!
0_%
1#'
1|&
1h(
1c(
#3195000
1!
1_%
0#'
0|&
0h(
0c(
b100011 w"
b10001100 ^&
b10001100 ]&
b10001100 O&
b10010000 N&
b10010000 V&
b10010000 l%
b10001100 m%
b10010000 X&
b10001100 ]+
b10001100 ^+
b100011 i&
b100011 !'
b10001100 n%
b10001100 k%
b10010000 S&
b1011010111000101110110011 "'
b10010000 Z&
b10010000 R&
b1011010111000101110110011 m&
b10010000 _&
b1011010111000101110110011 d&
1v%
1x%
1y%
1{%
1}%
1~%
1!&
1%&
1'&
1(&
1)&
1+&
b1100100 D*
b1011010 E*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b0 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
07*
b10 1*
b110011 E&
b10 1&
08&
b101101011100010111 D&
b1011010 @&
b1100100 ?&
bx C&
b1011010 A+
b1100100 O+
b1100100 T+
b1100100 U+
b1100100 N+
b1100100 Q+
b1100100 C+
0D+
0j%
b1100100 >&
b1011010 A&
bx B&
b1100100 [+
b1100 P(
b10111110 O+
b0 T+
b0 U+
b1010 N+
b1000000 P+
b1111110 Q+
b10001100101000 V+
bx ]+
bx ^+
b10111110 C+
b10111110 >&
b1100 f(
bx n%
bx k%
b1100100 <&
b10111110 [+
b10111 P(
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b1100100 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b10111 f(
b10111110 <&
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b10111110 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#3200000
0!
0_%
1#'
1|&
1h(
1c(
#3205000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b100100 w"
b10111110 ^*
b10010000 ^&
b10111110 D*
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b10111110 ?&
b10010000 ]&
b100011000 O+
b1100100 N+
b11010 P+
b11111110 Q+
b100001011001100 V+
b10010000 O&
b100011000 C+
b10010100 N&
b10010100 V&
b10010100 l%
b100011000 >&
b10010000 m%
b10010100 X&
b100011000 [+
b100011 P(
b100100 i&
b100100 !'
b100011 f(
b100011000 <&
b10010100 S&
b10011 "'
b0 )+
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b100011000 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b10010100 Z&
b10010100 R&
b10011 m&
b10010100 _&
b10011 d&
0v%
0x%
0y%
0{%
0}%
0~%
0!&
0%&
0'&
0(&
0)&
0+&
b0 D*
b0 E*
b0 )+
b100011000 g*
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b10111110 ~*
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
17*
b0 1*
b10011 E&
b0 1&
18&
b0 D&
b0 @&
b0 ?&
b0 C&
bx A+
b1011010 O+
b1111111111111111111111111111111111111111111111111111111110100110 N+
b0 P+
b1011010 Q+
b1 S+
b0 V+
b1011010 C+
1X+
b1011010 >&
bx A&
b0 B&
b1011010 [+
b1011 P(
bx O+
bx T+
bx U+
bx N+
bx Q+
b0x S+
bx V+
0Y+
b10010000 ]+
b10010000 ^+
b0 A+
bx C+
0X+
bx >&
b1011 f(
b0 A&
b10010000 n%
b10010000 k%
b1011010 <&
bx [+
bx P(
b0 O+
b0 T+
b0 U+
b0 N+
b0 Q+
b0 S+
b0 V+
1Y+
b0 )+
b1011010 g*
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b0 C+
1D+
1j%
b0 >&
bx f(
bx <&
b0 [+
b0 P(
b0 )+
bx g*
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
b0 f(
b0 <&
b0 )+
b0 g*
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
#3210000
0!
0_%
1#'
1|&
1h(
1c(
#3215000
1!
1_%
b1 )+
b10 )+
b11 )+
b100 )+
b101 )+
b110 )+
b111 )+
b1000 )+
b1001 )+
b1010 )+
b1011 )+
b1100 )+
b1101 )+
b1110 )+
b1111 )+
b10000 )+
b10001 )+
b10010 )+
b10011 )+
b10100 )+
b10101 )+
b10110 )+
b10111 )+
b11000 )+
b11001 )+
b11010 )+
b11011 )+
b11100 )+
b11101 )+
b11110 )+
b11111 )+
b100000 )+
0#'
0|&
0h(
0c(
b100101 w"
b10010100 ^&
b10010100 ]&
b10010100 O&
b10011000 N&
b10011000 V&
b10011000 l%
b10010100 m%
b10011000 X&
b10010100 ]+
b10010100 ^+
b100101 i&
b100101 !'
b10010100 n%
b10010100 k%
b10011000 S&
b10011000 Z&
b10011000 R&
b10011000 _&
#3220000
0!
0_%
1#'
1|&
1h(
1c(
#3225000
1!
1_%
0#'
0|&
0h(
0c(
b100110 w"
b10011000 ^&
b10011000 ]&
b10011000 O&
b10011100 N&
b10011100 V&
b10011100 l%
b10011000 m%
b10011100 X&
b10011000 ]+
b10011000 ^+
b100110 i&
b100110 !'
b10011000 n%
b10011000 k%
b10011100 S&
b10011100 Z&
b10011100 R&
b10011100 _&
#3230000
0!
0_%
1#'
1|&
1h(
1c(
#3235000
1!
1_%
0#'
0|&
0h(
0c(
b100111 w"
b10011100 ^&
b10011100 ]&
b10011100 O&
b10100000 N&
b10100000 V&
b10100000 l%
b10011100 m%
b10100000 X&
b10011100 ]+
b10011100 ^+
b100111 i&
b100111 !'
b10011100 n%
b10011100 k%
b10100000 S&
b10100000 Z&
b10100000 R&
b10100000 _&
#3240000
0!
0_%
1#'
1|&
1h(
1c(
#3245000
1!
1_%
0#'
0|&
0h(
0c(
b101000 w"
b10100000 ^&
b10100000 ]&
b10100000 O&
b10100100 N&
b10100100 V&
b10100100 l%
b10100000 m%
b10100100 X&
b10100000 ]+
b10100000 ^+
b101000 i&
b101000 !'
b10100000 n%
b10100000 k%
b10100100 S&
b100000000000000000000001111110 "'
b10100100 Z&
b10100100 R&
b100000000000000000000001111110 m&
b10100100 _&
b100000000000000000000001111110 d&
1q%
1*&
1+&
1-&
1.&
00&
b101000 [-
